package co.shift.templates.web.basic;

import co.shift.generators.domain.DomainCodeUtilities;
import domainmetamodel.Association;
import domainmetamodel.Attribute;
import domainmetamodel.BusinessEntity;
import domainmetamodel.Contracts;
import domainmetamodel.Create;
import domainmetamodel.Delete;
import domainmetamodel.Multiple;
import domainmetamodel.Simple;
import domainmetamodel.Update;
import org.eclipse.emf.common.util.EList;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.StringExtensions;

@SuppressWarnings("all")
public class FormTemplate {
  public static CharSequence generate(final String packageName, final BusinessEntity be) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package co.shift.");
    String _lowerCase = packageName.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append(".web.ext.");
    String _name = be.getName();
    String _lowerCase_1 = _name.toLowerCase();
    _builder.append(_lowerCase_1, "");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.util.Date;");
    _builder.newLine();
    _builder.newLine();
    {
      EList<Association> _associations = be.getAssociations();
      for(final Association ass : _associations) {
        {
          if ((ass instanceof Simple)) {
            Simple asso = ((Simple) ass);
            _builder.newLineIfNotEmpty();
            _builder.append("import co.shift.");
            String _lowerCase_2 = packageName.toLowerCase();
            _builder.append(_lowerCase_2, "");
            _builder.append(".to.");
            BusinessEntity _relatedEntity = asso.getRelatedEntity();
            String _name_1 = _relatedEntity.getName();
            String _firstUpper = StringExtensions.toFirstUpper(_name_1);
            _builder.append(_firstUpper, "");
            _builder.append("TO;");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.newLine();
    _builder.append("import com.vaadin.annotations.AutoGenerated;");
    _builder.newLine();
    _builder.append("import com.vaadin.event.ItemClickEvent;");
    _builder.newLine();
    _builder.append("import com.vaadin.event.ItemClickEvent.ItemClickListener;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.AbsoluteLayout;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.Button;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.Button.ClickEvent;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.Button.ClickListener;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.CustomComponent;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.Label;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.PopupDateField;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.TabSheet;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.Table;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.TextArea;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.TextField;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class ");
    String _name_2 = be.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_1, "");
    _builder.append("Form extends CustomComponent {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private AbsoluteLayout mainLayout;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private AbsoluteLayout absoluteLayout_1;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private AbsoluteLayout absoluteLayout_2;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    int aL = 3;
    _builder.newLineIfNotEmpty();
    {
      EList<Association> _associations_1 = be.getAssociations();
      for(final Association ass_1 : _associations_1) {
        {
          if ((ass_1 instanceof Simple)) {
            _builder.append("\t");
            _builder.append("@AutoGenerated");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("private AbsoluteLayout absoluteLayout_");
            int _plusPlus = aL++;
            _builder.append(_plusPlus, "\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("@AutoGenerated");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("private Button button");
            String _name_3 = ((Simple)ass_1).getName();
            String _firstUpper_2 = StringExtensions.toFirstUpper(_name_3);
            _builder.append(_firstUpper_2, "\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("@AutoGenerated");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("private TextField textField");
            String _name_4 = ((Simple)ass_1).getName();
            String _firstUpper_3 = StringExtensions.toFirstUpper(_name_4);
            _builder.append(_firstUpper_3, "\t");
            _builder.append("1;");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("public TextField getTextField");
            String _name_5 = ((Simple)ass_1).getName();
            String _firstUpper_4 = StringExtensions.toFirstUpper(_name_5);
            _builder.append(_firstUpper_4, "\t");
            _builder.append("1() {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("return textField");
            String _name_6 = ((Simple)ass_1).getName();
            String _firstUpper_5 = StringExtensions.toFirstUpper(_name_6);
            _builder.append(_firstUpper_5, "\t\t");
            _builder.append("1;");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("@AutoGenerated");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("private TextField textField");
            String _name_7 = ((Simple)ass_1).getName();
            String _firstUpper_6 = StringExtensions.toFirstUpper(_name_7);
            _builder.append(_firstUpper_6, "\t");
            _builder.append("2;");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("public TextField getTextField");
            String _name_8 = ((Simple)ass_1).getName();
            String _firstUpper_7 = StringExtensions.toFirstUpper(_name_8);
            _builder.append(_firstUpper_7, "\t");
            _builder.append("2() {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("return textField");
            String _name_9 = ((Simple)ass_1).getName();
            String _firstUpper_8 = StringExtensions.toFirstUpper(_name_9);
            _builder.append(_firstUpper_8, "\t\t");
            _builder.append("2;");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Button buttonDetailForm;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Button buttonRemoveDetail;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private TabSheet tabSheet_1;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public TabSheet getTabSheet_1() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return tabSheet_1;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Label label_1;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    {
      EList<Contracts> _contracts = be.getContracts();
      for(final Contracts c : _contracts) {
        {
          boolean _or = false;
          if (((c instanceof Create) || (c instanceof Update))) {
            _or = true;
          } else {
            _or = (c instanceof Delete);
          }
          if (_or) {
            _builder.append("\t");
            _builder.append("@AutoGenerated");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("private Button button");
            String _name_10 = c.getName();
            String _firstUpper_9 = StringExtensions.toFirstUpper(_name_10);
            _builder.append(_firstUpper_9, "\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.newLine();
    {
      EList<Attribute> _attributes = be.getAttributes();
      for(final Attribute a : _attributes) {
        _builder.append("\t");
        _builder.append("@AutoGenerated");
        _builder.newLine();
        {
          String _type = DomainCodeUtilities.getType(a);
          boolean _equals = _type.equals("Date");
          if (_equals) {
            _builder.append("\t");
            _builder.append("private PopupDateField txtD");
            String _name_11 = a.getName();
            String _firstUpper_10 = StringExtensions.toFirstUpper(_name_11);
            _builder.append(_firstUpper_10, "\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("public PopupDateField getTxtD");
            String _name_12 = a.getName();
            String _firstUpper_11 = StringExtensions.toFirstUpper(_name_12);
            _builder.append(_firstUpper_11, "\t");
            _builder.append(" () {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("return txtD");
            String _name_13 = a.getName();
            String _firstUpper_12 = StringExtensions.toFirstUpper(_name_13);
            _builder.append(_firstUpper_12, "\t\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          } else {
            _builder.append("\t");
            _builder.append("private TextField txt");
            String _name_14 = a.getName();
            String _firstUpper_13 = StringExtensions.toFirstUpper(_name_14);
            _builder.append(_firstUpper_13, "\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("public TextField getTxt");
            String _name_15 = a.getName();
            String _firstUpper_14 = StringExtensions.toFirstUpper(_name_15);
            _builder.append(_firstUpper_14, "\t");
            _builder.append("() {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("return txt");
            String _name_16 = a.getName();
            String _firstUpper_15 = StringExtensions.toFirstUpper(_name_16);
            _builder.append(_firstUpper_15, "\t\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Table table_1;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public Table getTable_1() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return table_1;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    int n = 2;
    _builder.newLineIfNotEmpty();
    {
      EList<Association> _associations_2 = be.getAssociations();
      for(final Association ass_2 : _associations_2) {
        {
          if ((ass_2 instanceof Multiple)) {
            _builder.append("\t");
            _builder.append("@AutoGenerated");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("private Table table_");
            _builder.append(n, "\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("public Table getTable_");
            _builder.append(n, "\t");
            _builder.append("() {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("return table_");
            int _plusPlus_1 = n++;
            _builder.append(_plusPlus_1, "\t\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static final String ID = \"");
    String _name_17 = be.getName();
    String _firstUpper_16 = StringExtensions.toFirstUpper(_name_17);
    _builder.append(_firstUpper_16, "\t");
    _builder.append("Form\";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ");
    String _name_18 = be.getName();
    String _firstUpper_17 = StringExtensions.toFirstUpper(_name_18);
    _builder.append(_firstUpper_17, "\t");
    _builder.append("Form() {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("buildMainLayout();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setCompositionRoot(mainLayout);");
    _builder.newLine();
    {
      EList<Attribute> _attributes_1 = be.getAttributes();
      for(final Attribute a_1 : _attributes_1) {
        _builder.append("\t\t");
        _builder.append("table_1.addContainerProperty(\"");
        String _name_19 = a_1.getName();
        String _firstUpper_18 = StringExtensions.toFirstUpper(_name_19);
        _builder.append(_firstUpper_18, "\t\t");
        _builder.append("\", ");
        String _wrapperType = DomainCodeUtilities.getWrapperType(a_1);
        _builder.append(_wrapperType, "\t\t");
        _builder.append(".class, null);");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.append("table_1.setSelectable(true);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("table_1.setMultiSelect(false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("table_1.setImmediate(true);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("table_1.addItemClickListener(new ItemClickListener() {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void itemClick(ItemClickEvent event) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    String _name_20 = be.getName();
    String _firstUpper_19 = StringExtensions.toFirstUpper(_name_20);
    _builder.append(_firstUpper_19, "\t\t\t");
    _builder.append("Controller.getInstance().listAllDetailsFrom");
    String _name_21 = be.getName();
    String _firstUpper_20 = StringExtensions.toFirstUpper(_name_21);
    _builder.append(_firstUpper_20, "\t\t\t");
    _builder.append("(");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t\t");
    _builder.append("event);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("});");
    _builder.newLine();
    _builder.append("\t\t");
    int t = 2;
    _builder.newLineIfNotEmpty();
    {
      EList<Association> _associations_3 = be.getAssociations();
      for(final Association ass_3 : _associations_3) {
        {
          if ((ass_3 instanceof Multiple)) {
            _builder.append("\t\t");
            Multiple asso_1 = ((Multiple) ass_3);
            _builder.newLineIfNotEmpty();
            {
              BusinessEntity _entity = asso_1.getEntity();
              EList<Attribute> _attributes_2 = _entity.getAttributes();
              for(final Attribute a_2 : _attributes_2) {
                _builder.append("\t\t");
                _builder.append("table_");
                _builder.append(t, "\t\t");
                _builder.append(".addContainerProperty(\"");
                String _name_22 = a_2.getName();
                String _firstUpper_21 = StringExtensions.toFirstUpper(_name_22);
                _builder.append(_firstUpper_21, "\t\t");
                _builder.append("\", ");
                String _wrapperType_1 = DomainCodeUtilities.getWrapperType(a_2);
                _builder.append(_wrapperType_1, "\t\t");
                _builder.append(".class, null);");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t\t");
            _builder.append("table_");
            _builder.append(t, "\t\t");
            _builder.append(".setSelectable(true);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("table_");
            _builder.append(t, "\t\t");
            _builder.append(".setMultiSelect(false);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("table_");
            _builder.append(t, "\t\t");
            _builder.append(".setImmediate(true);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("tabSheet_1.addTab(table_");
            int _plusPlus_2 = t++;
            _builder.append(_plusPlus_2, "\t\t");
            _builder.append(", \"");
            BusinessEntity _entity_1 = asso_1.getEntity();
            String _name_23 = _entity_1.getName();
            String _firstUpper_22 = StringExtensions.toFirstUpper(_name_23);
            _builder.append(_firstUpper_22, "\t\t");
            _builder.append("s\", null);");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    {
      EList<Contracts> _contracts_1 = be.getContracts();
      for(final Contracts c_1 : _contracts_1) {
        {
          boolean _or_1 = false;
          if (((c_1 instanceof Create) || (c_1 instanceof Update))) {
            _or_1 = true;
          } else {
            _or_1 = (c_1 instanceof Delete);
          }
          if (_or_1) {
            _builder.append("\t\t");
            _builder.append("button");
            String _name_24 = c_1.getName();
            String _firstUpper_23 = StringExtensions.toFirstUpper(_name_24);
            _builder.append(_firstUpper_23, "\t\t");
            _builder.append(".addClickListener(new ClickListener() {");
            _builder.newLineIfNotEmpty();
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("@Override");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("public void buttonClick(ClickEvent event) {");
            _builder.newLine();
            {
              if ((c_1 instanceof Create)) {
                _builder.append("\t\t");
                _builder.append("\t\t");
                String _name_25 = be.getName();
                String _firstUpper_24 = StringExtensions.toFirstUpper(_name_25);
                _builder.append(_firstUpper_24, "\t\t\t\t");
                _builder.append("Controller.getInstance().create");
                String _name_26 = be.getName();
                String _firstUpper_25 = StringExtensions.toFirstUpper(_name_26);
                _builder.append(_firstUpper_25, "\t\t\t\t");
                _builder.append("();");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              if ((c_1 instanceof Update)) {
                _builder.append("\t\t");
                _builder.append("\t\t");
                String _name_27 = be.getName();
                String _firstUpper_26 = StringExtensions.toFirstUpper(_name_27);
                _builder.append(_firstUpper_26, "\t\t\t\t");
                _builder.append("Controller.getInstance().update");
                String _name_28 = be.getName();
                String _firstUpper_27 = StringExtensions.toFirstUpper(_name_28);
                _builder.append(_firstUpper_27, "\t\t\t\t");
                _builder.append("();");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              if ((c_1 instanceof Delete)) {
                _builder.append("\t\t");
                _builder.append("\t\t");
                String _name_29 = be.getName();
                String _firstUpper_28 = StringExtensions.toFirstUpper(_name_29);
                _builder.append(_firstUpper_28, "\t\t\t\t");
                _builder.append("Controller.getInstance().delete");
                String _name_30 = be.getName();
                String _firstUpper_29 = StringExtensions.toFirstUpper(_name_30);
                _builder.append(_firstUpper_29, "\t\t\t\t");
                _builder.append("();");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("});");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    {
      EList<Association> _associations_4 = be.getAssociations();
      for(final Association ass_4 : _associations_4) {
        {
          if ((ass_4 instanceof Simple)) {
            _builder.append("\t\t");
            _builder.append("textField");
            String _name_31 = ((Simple)ass_4).getName();
            String _firstUpper_30 = StringExtensions.toFirstUpper(_name_31);
            _builder.append(_firstUpper_30, "\t\t");
            _builder.append("1.setEnabled(false);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("textField");
            String _name_32 = ((Simple)ass_4).getName();
            String _firstUpper_31 = StringExtensions.toFirstUpper(_name_32);
            _builder.append(_firstUpper_31, "\t\t");
            _builder.append("2.setEnabled(false);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("button");
            String _name_33 = ((Simple)ass_4).getName();
            String _firstUpper_32 = StringExtensions.toFirstUpper(_name_33);
            _builder.append(_firstUpper_32, "\t\t");
            _builder.append(".addClickListener(new ClickListener() {");
            _builder.newLineIfNotEmpty();
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("@Override");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("public void buttonClick(ClickEvent event) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t");
            String _name_34 = be.getName();
            String _firstUpper_33 = StringExtensions.toFirstUpper(_name_34);
            _builder.append(_firstUpper_33, "\t\t\t\t");
            _builder.append("Controller.getInstance().popUp");
            String _name_35 = ((Simple)ass_4).getName();
            String _firstUpper_34 = StringExtensions.toFirstUpper(_name_35);
            _builder.append(_firstUpper_34, "\t\t\t\t");
            _builder.append("Form();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("});");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonDetailForm.addClickListener(new ClickListener() {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public void buttonClick(ClickEvent event) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    String _name_36 = be.getName();
    String _firstUpper_35 = StringExtensions.toFirstUpper(_name_36);
    _builder.append(_firstUpper_35, "\t\t\t\t");
    _builder.append("Controller.getInstance().popUpAddDetailForm();");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("});");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonRemoveDetail.addClickListener(new ClickListener() {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public void buttonClick(ClickEvent event) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    String _name_37 = be.getName();
    String _firstUpper_36 = StringExtensions.toFirstUpper(_name_37);
    _builder.append(_firstUpper_36, "\t\t\t\t");
    _builder.append("Controller.getInstance().removeDetailRecord();");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("});");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void clearFormFields() {");
    _builder.newLine();
    {
      EList<Attribute> _attributes_3 = be.getAttributes();
      for(final Attribute a_3 : _attributes_3) {
        {
          String _type_1 = DomainCodeUtilities.getType(a_3);
          boolean _equals_1 = _type_1.equals("Date");
          if (_equals_1) {
            _builder.append("\t\t");
            _builder.append("txtD");
            String _name_38 = a_3.getName();
            String _firstUpper_37 = StringExtensions.toFirstUpper(_name_38);
            _builder.append(_firstUpper_37, "\t\t");
            _builder.append(".setValue(null);");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("\t\t");
            _builder.append("txt");
            String _name_39 = a_3.getName();
            String _firstUpper_38 = StringExtensions.toFirstUpper(_name_39);
            _builder.append(_firstUpper_38, "\t\t");
            _builder.append(".setValue(\"\");");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    {
      EList<Association> _associations_5 = be.getAssociations();
      for(final Association ass_5 : _associations_5) {
        {
          if ((ass_5 instanceof Simple)) {
            _builder.append("\t");
            _builder.append("public void clear");
            String _name_40 = ((Simple)ass_5).getName();
            String _firstUpper_39 = StringExtensions.toFirstUpper(_name_40);
            _builder.append(_firstUpper_39, "\t");
            _builder.append("Fields() {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_41 = ((Simple)ass_5).getName();
            String _firstUpper_40 = StringExtensions.toFirstUpper(_name_41);
            _builder.append(_firstUpper_40, "\t\t");
            _builder.append("1.setValue(\"\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_42 = ((Simple)ass_5).getName();
            String _firstUpper_41 = StringExtensions.toFirstUpper(_name_42);
            _builder.append(_firstUpper_41, "\t\t");
            _builder.append("2.setValue(\"\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.newLine();
            _builder.append("\t");
            BusinessEntity relBe = ((Simple)ass_5).getRelatedEntity();
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("public void update");
            String _name_43 = ((Simple)ass_5).getName();
            String _firstUpper_42 = StringExtensions.toFirstUpper(_name_43);
            _builder.append(_firstUpper_42, "\t");
            _builder.append("Fields(");
            String _name_44 = relBe.getName();
            String _firstUpper_43 = StringExtensions.toFirstUpper(_name_44);
            _builder.append(_firstUpper_43, "\t");
            _builder.append("TO ");
            String _name_45 = ((Simple)ass_5).getName();
            String _lowerCase_3 = _name_45.toLowerCase();
            _builder.append(_lowerCase_3, "\t");
            _builder.append(") {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_46 = ((Simple)ass_5).getName();
            String _firstUpper_44 = StringExtensions.toFirstUpper(_name_46);
            _builder.append(_firstUpper_44, "\t\t");
            _builder.append("1.setValue(\"\"+");
            String _name_47 = ((Simple)ass_5).getName();
            String _lowerCase_4 = _name_47.toLowerCase();
            _builder.append(_lowerCase_4, "\t\t");
            _builder.append(".get");
            Attribute _iD = DomainCodeUtilities.getID(relBe);
            String _name_48 = _iD.getName();
            String _firstUpper_45 = StringExtensions.toFirstUpper(_name_48);
            _builder.append(_firstUpper_45, "\t\t");
            _builder.append("());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_49 = ((Simple)ass_5).getName();
            String _firstUpper_46 = StringExtensions.toFirstUpper(_name_49);
            _builder.append(_firstUpper_46, "\t\t");
            _builder.append("2.setValue(\"\"+");
            String _name_50 = ((Simple)ass_5).getName();
            String _lowerCase_5 = _name_50.toLowerCase();
            _builder.append(_lowerCase_5, "\t\t");
            _builder.append(".get");
            Attribute _secondAttribute = DomainCodeUtilities.getSecondAttribute(relBe);
            String _name_51 = _secondAttribute.getName();
            String _firstUpper_47 = StringExtensions.toFirstUpper(_name_51);
            _builder.append(_firstUpper_47, "\t\t");
            _builder.append("());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("\t");
    int height = 70;
    _builder.newLineIfNotEmpty();
    {
      EList<Attribute> _attributes_4 = be.getAttributes();
      for(final Attribute a_4 : _attributes_4) {
        _builder.append("\t");
        int _height = height;
        int cc = height = (_height + 40);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private AbsoluteLayout buildAbsoluteLayout_1() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// common part: create layout");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_1 = new AbsoluteLayout();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_1.setCaption(\"");
    String _name_52 = be.getName();
    String _firstUpper_48 = StringExtensions.toFirstUpper(_name_52);
    _builder.append(_firstUpper_48, "\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_1.setImmediate(false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_1.setWidth(\"340px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_1.setHeight(\"");
    _builder.append(height, "\t\t");
    _builder.append("px\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    int pos = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<Attribute> _attributes_5 = be.getAttributes();
      for(final Attribute a_5 : _attributes_5) {
        {
          String _type_2 = DomainCodeUtilities.getType(a_5);
          boolean _equals_2 = _type_2.equals("Date");
          if (_equals_2) {
            _builder.append("\t\t");
            _builder.append("// txtD");
            String _name_53 = a_5.getName();
            String _firstUpper_49 = StringExtensions.toFirstUpper(_name_53);
            _builder.append(_firstUpper_49, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txtD");
            String _name_54 = a_5.getName();
            String _firstUpper_50 = StringExtensions.toFirstUpper(_name_54);
            _builder.append(_firstUpper_50, "\t\t");
            _builder.append(" = new PopupDateField();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txtD");
            String _name_55 = a_5.getName();
            String _firstUpper_51 = StringExtensions.toFirstUpper(_name_55);
            _builder.append(_firstUpper_51, "\t\t");
            _builder.append(".setCaption(\"");
            String _name_56 = a_5.getName();
            String _firstUpper_52 = StringExtensions.toFirstUpper(_name_56);
            _builder.append(_firstUpper_52, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txtD");
            String _name_57 = a_5.getName();
            String _firstUpper_53 = StringExtensions.toFirstUpper(_name_57);
            _builder.append(_firstUpper_53, "\t\t");
            _builder.append(".setImmediate(false);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txtD");
            String _name_58 = a_5.getName();
            String _firstUpper_54 = StringExtensions.toFirstUpper(_name_58);
            _builder.append(_firstUpper_54, "\t\t");
            _builder.append(".setWidth(\"-1px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txtD");
            String _name_59 = a_5.getName();
            String _firstUpper_55 = StringExtensions.toFirstUpper(_name_59);
            _builder.append(_firstUpper_55, "\t\t");
            _builder.append(".setHeight(\"-1px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txtD");
            String _name_60 = a_5.getName();
            String _firstUpper_56 = StringExtensions.toFirstUpper(_name_60);
            _builder.append(_firstUpper_56, "\t\t");
            _builder.append(".setRequired(true);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("absoluteLayout_1.addComponent(txtD");
            String _name_61 = a_5.getName();
            String _firstUpper_57 = StringExtensions.toFirstUpper(_name_61);
            _builder.append(_firstUpper_57, "\t\t");
            _builder.append(",");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("\"top:");
            int _pos = pos;
            int _plus = pos = (_pos + 40);
            _builder.append(_plus, "\t\t\t\t");
            _builder.append("px;left:0.0px;\");");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("\t\t");
            _builder.append("// txt");
            String _name_62 = a_5.getName();
            String _firstUpper_58 = StringExtensions.toFirstUpper(_name_62);
            _builder.append(_firstUpper_58, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txt");
            String _name_63 = a_5.getName();
            String _firstUpper_59 = StringExtensions.toFirstUpper(_name_63);
            _builder.append(_firstUpper_59, "\t\t");
            _builder.append(" = new TextField();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txt");
            String _name_64 = a_5.getName();
            String _firstUpper_60 = StringExtensions.toFirstUpper(_name_64);
            _builder.append(_firstUpper_60, "\t\t");
            _builder.append(".setCaption(\"");
            String _name_65 = a_5.getName();
            String _firstUpper_61 = StringExtensions.toFirstUpper(_name_65);
            _builder.append(_firstUpper_61, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txt");
            String _name_66 = a_5.getName();
            String _firstUpper_62 = StringExtensions.toFirstUpper(_name_66);
            _builder.append(_firstUpper_62, "\t\t");
            _builder.append(".setImmediate(false);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txt");
            String _name_67 = a_5.getName();
            String _firstUpper_63 = StringExtensions.toFirstUpper(_name_67);
            _builder.append(_firstUpper_63, "\t\t");
            _builder.append(".setWidth(\"175px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txt");
            String _name_68 = a_5.getName();
            String _firstUpper_64 = StringExtensions.toFirstUpper(_name_68);
            _builder.append(_firstUpper_64, "\t\t");
            _builder.append(".setHeight(\"-1px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("txt");
            String _name_69 = a_5.getName();
            String _firstUpper_65 = StringExtensions.toFirstUpper(_name_69);
            _builder.append(_firstUpper_65, "\t\t");
            _builder.append(".setRequired(true);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("absoluteLayout_1.addComponent(txt");
            String _name_70 = a_5.getName();
            String _firstUpper_66 = StringExtensions.toFirstUpper(_name_70);
            _builder.append(_firstUpper_66, "\t\t");
            _builder.append(",");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("\"top:");
            int _pos_1 = pos;
            int _plus_1 = pos = (_pos_1 + 40);
            _builder.append(_plus_1, "\t\t\t\t");
            _builder.append("px;left:0.0px;\");");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    int posB = (pos + 40);
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    int posL = (-72);
    _builder.newLineIfNotEmpty();
    {
      EList<Contracts> _contracts_2 = be.getContracts();
      for(final Contracts c_2 : _contracts_2) {
        {
          boolean _or_2 = false;
          if (((c_2 instanceof Create) || (c_2 instanceof Update))) {
            _or_2 = true;
          } else {
            _or_2 = (c_2 instanceof Delete);
          }
          if (_or_2) {
            _builder.append("\t\t");
            _builder.append("button");
            String _name_71 = c_2.getName();
            String _firstUpper_67 = StringExtensions.toFirstUpper(_name_71);
            _builder.append(_firstUpper_67, "\t\t");
            _builder.append(" = new Button();");
            _builder.newLineIfNotEmpty();
            {
              if ((c_2 instanceof Create)) {
                _builder.append("\t\t");
                _builder.append("button");
                String _name_72 = ((Create)c_2).getName();
                String _firstUpper_68 = StringExtensions.toFirstUpper(_name_72);
                _builder.append(_firstUpper_68, "\t\t");
                _builder.append(".setCaption(\"Add\");");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              if ((c_2 instanceof Update)) {
                _builder.append("\t\t");
                _builder.append("button");
                String _name_73 = ((Update)c_2).getName();
                String _firstUpper_69 = StringExtensions.toFirstUpper(_name_73);
                _builder.append(_firstUpper_69, "\t\t");
                _builder.append(".setCaption(\"Update\");");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              if ((c_2 instanceof Delete)) {
                _builder.append("\t\t");
                _builder.append("button");
                String _name_74 = ((Delete)c_2).getName();
                String _firstUpper_70 = StringExtensions.toFirstUpper(_name_74);
                _builder.append(_firstUpper_70, "\t\t");
                _builder.append(".setCaption(\"Delete\");");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t\t");
            _builder.append("button");
            String _name_75 = c_2.getName();
            String _firstUpper_71 = StringExtensions.toFirstUpper(_name_75);
            _builder.append(_firstUpper_71, "\t\t");
            _builder.append(".setImmediate(true);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("button");
            String _name_76 = c_2.getName();
            String _firstUpper_72 = StringExtensions.toFirstUpper(_name_76);
            _builder.append(_firstUpper_72, "\t\t");
            _builder.append(".setWidth(\"65px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("button");
            String _name_77 = c_2.getName();
            String _firstUpper_73 = StringExtensions.toFirstUpper(_name_77);
            _builder.append(_firstUpper_73, "\t\t");
            _builder.append(".setHeight(\"-1px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("absoluteLayout_1.addComponent(button");
            String _name_78 = c_2.getName();
            String _firstUpper_74 = StringExtensions.toFirstUpper(_name_78);
            _builder.append(_firstUpper_74, "\t\t");
            _builder.append(", \"top:");
            _builder.append(posB, "\t\t");
            _builder.append("px;left:");
            int _posL = posL;
            int _plus_2 = posL = (_posL + 72);
            _builder.append(_plus_2, "\t\t");
            _builder.append("px;\");");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return absoluteLayout_1;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private AbsoluteLayout buildMainLayout() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// common part: create layout");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout = new AbsoluteLayout();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout.setImmediate(false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout.setWidth(\"1024px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout.setHeight(\"500px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// top-level component properties");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setWidth(\"1024px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setHeight(\"500px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// table_1");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("table_1 = new Table();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("table_1.setImmediate(false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("table_1.setWidth(\"150px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("table_1.setHeight(\"100.0%\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout.addComponent(table_1,");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("\"top:18.0px;bottom:-18.0px;left:0.0px;\");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// absoluteLayout_1");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_1 = buildAbsoluteLayout_1();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout.addComponent(absoluteLayout_1, \"top:17.0px;left:170.0px;\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// label_1");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("label_1 = new Label();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("label_1.setImmediate(false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("label_1.setWidth(\"-1px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("label_1.setHeight(\"18px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("label_1.setValue(\"");
    String _name_79 = be.getName();
    String _firstUpper_75 = StringExtensions.toFirstUpper(_name_79);
    _builder.append(_firstUpper_75, "\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("mainLayout.addComponent(label_1, \"top:0.0px;left:36.0px;\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// absoluteLayout_2");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_2 = buildAbsoluteLayout_2();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout.addComponent(absoluteLayout_2, \"top:");
    _builder.append((posB + 55), "\t\t");
    _builder.append("px;left:170.0px;\");");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t\t");
    int aL2 = 3;
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    int left = 525;
    _builder.newLineIfNotEmpty();
    {
      EList<Association> _associations_6 = be.getAssociations();
      for(final Association ass_6 : _associations_6) {
        {
          if ((ass_6 instanceof Simple)) {
            _builder.append("\t\t");
            _builder.append("// absoluteLayout_");
            _builder.append(aL2, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("absoluteLayout_");
            _builder.append(aL2, "\t\t");
            _builder.append(" = buildAbsoluteLayout_");
            _builder.append(aL2, "\t\t");
            _builder.append("();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("mainLayout.addComponent(absoluteLayout_");
            int _plusPlus_3 = aL2++;
            _builder.append(_plusPlus_3, "\t\t");
            _builder.append(", \"top:17.0px;left:");
            int _left = left;
            int _plus_3 = left = (_left + 160);
            _builder.append(_plus_3, "\t\t");
            _builder.append("px;\");");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return mainLayout;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private AbsoluteLayout buildAbsoluteLayout_2() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// common part: create layout");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_2 = new AbsoluteLayout();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_2.setCaption(\"Details\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_2.setImmediate(false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_2.setWidth(\"505px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_2.setHeight(\"200px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// tabSheet_1");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("tabSheet_1 = buildTabSheet_1();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_2.addComponent(tabSheet_1, \"top:2.0px;left:0.0px;\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// buttonDetailForm");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonDetailForm = new Button();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonDetailForm.setCaption(\"Add\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonDetailForm.setImmediate(true);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonDetailForm.setWidth(\"73px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonDetailForm.setHeight(\"-1px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_2.addComponent(buttonDetailForm, \"top:36.0px;left:419.0px;\");");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// buttonRemoveDetail");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonRemoveDetail = new Button();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonRemoveDetail.setCaption(\"Remove\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonRemoveDetail.setImmediate(true);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonRemoveDetail.setWidth(\"-1px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buttonRemoveDetail.setHeight(\"-1px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("absoluteLayout_2.addComponent(buttonRemoveDetail, \"top:65.0px;left:419.0px;\");");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return absoluteLayout_2;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private TabSheet buildTabSheet_1() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// common part: create layout");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("tabSheet_1 = new TabSheet();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("tabSheet_1.setImmediate(true);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("tabSheet_1.setWidth(\"409px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("tabSheet_1.setHeight(\"198px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    int tt = 2;
    _builder.newLineIfNotEmpty();
    {
      EList<Association> _associations_7 = be.getAssociations();
      for(final Association ass_7 : _associations_7) {
        {
          if ((ass_7 instanceof Multiple)) {
            _builder.append("\t\t");
            _builder.append("// table_");
            _builder.append(tt, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("table_");
            _builder.append(tt, "\t\t");
            _builder.append(" = new Table();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("table_");
            _builder.append(tt, "\t\t");
            _builder.append(".setImmediate(false);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("table_");
            _builder.append(tt, "\t\t");
            _builder.append(".setWidth(\"409px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("table_");
            int _plusPlus_4 = tt++;
            _builder.append(_plusPlus_4, "\t\t");
            _builder.append(".setHeight(\"-1px\");");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return tabSheet_1;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    int aL1 = 3;
    _builder.newLineIfNotEmpty();
    {
      EList<Association> _associations_8 = be.getAssociations();
      for(final Association ass_8 : _associations_8) {
        {
          if ((ass_8 instanceof Simple)) {
            _builder.append("\t");
            BusinessEntity relBe_1 = ((Simple)ass_8).getRelatedEntity();
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("@AutoGenerated");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("private AbsoluteLayout buildAbsoluteLayout_");
            _builder.append(aL1, "\t");
            _builder.append("() {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("// common part: create layout");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("absoluteLayout_");
            _builder.append(aL1, "\t\t");
            _builder.append(" = new AbsoluteLayout();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("absoluteLayout_");
            _builder.append(aL1, "\t\t");
            _builder.append(".setCaption(\"");
            String _name_80 = ((Simple)ass_8).getName();
            String _firstUpper_76 = StringExtensions.toFirstUpper(_name_80);
            _builder.append(_firstUpper_76, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("absoluteLayout_");
            _builder.append(aL1, "\t\t");
            _builder.append(".setImmediate(false);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("absoluteLayout_");
            _builder.append(aL1, "\t\t");
            _builder.append(".setWidth(\"150px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("absoluteLayout_");
            _builder.append(aL1, "\t\t");
            _builder.append(".setHeight(\"150px\");");
            _builder.newLineIfNotEmpty();
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("// textField");
            String _name_81 = ((Simple)ass_8).getName();
            String _firstUpper_77 = StringExtensions.toFirstUpper(_name_81);
            _builder.append(_firstUpper_77, "\t\t");
            _builder.append("1");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_82 = ((Simple)ass_8).getName();
            String _firstUpper_78 = StringExtensions.toFirstUpper(_name_82);
            _builder.append(_firstUpper_78, "\t\t");
            _builder.append("1 = new TextField();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_83 = ((Simple)ass_8).getName();
            String _firstUpper_79 = StringExtensions.toFirstUpper(_name_83);
            _builder.append(_firstUpper_79, "\t\t");
            _builder.append("1.setCaption(\"");
            String _name_84 = ((Simple)ass_8).getName();
            String _firstUpper_80 = StringExtensions.toFirstUpper(_name_84);
            _builder.append(_firstUpper_80, "\t\t");
            _builder.append(" ");
            Attribute _iD_1 = DomainCodeUtilities.getID(relBe_1);
            String _name_85 = _iD_1.getName();
            String _firstUpper_81 = StringExtensions.toFirstUpper(_name_85);
            _builder.append(_firstUpper_81, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_86 = ((Simple)ass_8).getName();
            String _firstUpper_82 = StringExtensions.toFirstUpper(_name_86);
            _builder.append(_firstUpper_82, "\t\t");
            _builder.append("1.setImmediate(false);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_87 = ((Simple)ass_8).getName();
            String _firstUpper_83 = StringExtensions.toFirstUpper(_name_87);
            _builder.append(_firstUpper_83, "\t\t");
            _builder.append("1.setWidth(\"-1px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_88 = ((Simple)ass_8).getName();
            String _firstUpper_84 = StringExtensions.toFirstUpper(_name_88);
            _builder.append(_firstUpper_84, "\t\t");
            _builder.append("1.setHeight(\"-1px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("absoluteLayout_");
            _builder.append(aL1, "\t\t");
            _builder.append(".addComponent(textField");
            String _name_89 = ((Simple)ass_8).getName();
            String _firstUpper_85 = StringExtensions.toFirstUpper(_name_89);
            _builder.append(_firstUpper_85, "\t\t");
            _builder.append("1, \"top:22.0px;left:7.0px;\");");
            _builder.newLineIfNotEmpty();
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("// textField");
            String _name_90 = ((Simple)ass_8).getName();
            String _firstUpper_86 = StringExtensions.toFirstUpper(_name_90);
            _builder.append(_firstUpper_86, "\t\t");
            _builder.append("2");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_91 = ((Simple)ass_8).getName();
            String _firstUpper_87 = StringExtensions.toFirstUpper(_name_91);
            _builder.append(_firstUpper_87, "\t\t");
            _builder.append("2 = new TextField();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_92 = ((Simple)ass_8).getName();
            String _firstUpper_88 = StringExtensions.toFirstUpper(_name_92);
            _builder.append(_firstUpper_88, "\t\t");
            _builder.append("2.setCaption(\"");
            String _name_93 = ((Simple)ass_8).getName();
            String _firstUpper_89 = StringExtensions.toFirstUpper(_name_93);
            _builder.append(_firstUpper_89, "\t\t");
            _builder.append(" ");
            Attribute _secondAttribute_1 = DomainCodeUtilities.getSecondAttribute(relBe_1);
            String _name_94 = _secondAttribute_1.getName();
            String _firstUpper_90 = StringExtensions.toFirstUpper(_name_94);
            _builder.append(_firstUpper_90, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_95 = ((Simple)ass_8).getName();
            String _firstUpper_91 = StringExtensions.toFirstUpper(_name_95);
            _builder.append(_firstUpper_91, "\t\t");
            _builder.append("2.setImmediate(false);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_96 = ((Simple)ass_8).getName();
            String _firstUpper_92 = StringExtensions.toFirstUpper(_name_96);
            _builder.append(_firstUpper_92, "\t\t");
            _builder.append("2.setWidth(\"-1px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("textField");
            String _name_97 = ((Simple)ass_8).getName();
            String _firstUpper_93 = StringExtensions.toFirstUpper(_name_97);
            _builder.append(_firstUpper_93, "\t\t");
            _builder.append("2.setHeight(\"-1px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("absoluteLayout_");
            _builder.append(aL1, "\t\t");
            _builder.append(".addComponent(textField");
            String _name_98 = ((Simple)ass_8).getName();
            String _firstUpper_94 = StringExtensions.toFirstUpper(_name_98);
            _builder.append(_firstUpper_94, "\t\t");
            _builder.append("2, \"top:61.0px;left:7.0px;\");");
            _builder.newLineIfNotEmpty();
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("// button");
            String _name_99 = ((Simple)ass_8).getName();
            String _firstUpper_95 = StringExtensions.toFirstUpper(_name_99);
            _builder.append(_firstUpper_95, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("button");
            String _name_100 = ((Simple)ass_8).getName();
            String _firstUpper_96 = StringExtensions.toFirstUpper(_name_100);
            _builder.append(_firstUpper_96, "\t\t");
            _builder.append(" = new Button();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("button");
            String _name_101 = ((Simple)ass_8).getName();
            String _firstUpper_97 = StringExtensions.toFirstUpper(_name_101);
            _builder.append(_firstUpper_97, "\t\t");
            _builder.append(".setCaption(\"Set ");
            String _name_102 = ((Simple)ass_8).getName();
            String _firstUpper_98 = StringExtensions.toFirstUpper(_name_102);
            _builder.append(_firstUpper_98, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("button");
            String _name_103 = ((Simple)ass_8).getName();
            String _firstUpper_99 = StringExtensions.toFirstUpper(_name_103);
            _builder.append(_firstUpper_99, "\t\t");
            _builder.append(".setImmediate(true);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("button");
            String _name_104 = ((Simple)ass_8).getName();
            String _firstUpper_100 = StringExtensions.toFirstUpper(_name_104);
            _builder.append(_firstUpper_100, "\t\t");
            _builder.append(".setWidth(\"-1px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("button");
            String _name_105 = ((Simple)ass_8).getName();
            String _firstUpper_101 = StringExtensions.toFirstUpper(_name_105);
            _builder.append(_firstUpper_101, "\t\t");
            _builder.append(".setHeight(\"-1px\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("absoluteLayout_");
            _builder.append(aL1, "\t\t");
            _builder.append(".addComponent(button");
            String _name_106 = ((Simple)ass_8).getName();
            String _firstUpper_102 = StringExtensions.toFirstUpper(_name_106);
            _builder.append(_firstUpper_102, "\t\t");
            _builder.append(", \"top:93.0px;left:24.0px;\");");
            _builder.newLineIfNotEmpty();
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("return absoluteLayout_");
            int _plusPlus_5 = aL1++;
            _builder.append(_plusPlus_5, "\t\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
