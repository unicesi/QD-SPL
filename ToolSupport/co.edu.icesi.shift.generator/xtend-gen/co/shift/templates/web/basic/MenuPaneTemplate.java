package co.shift.templates.web.basic;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class MenuPaneTemplate {
  public static CharSequence generate(final String packageName) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package co.shift.");
    String _lowerCase = packageName.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append(".web.client;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.util.ArrayList;");
    _builder.newLine();
    _builder.append("import java.util.List;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import com.vaadin.annotations.AutoGenerated;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.AbsoluteLayout;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.CustomComponent;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.MenuBar;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.MenuBar.Command;");
    _builder.newLine();
    _builder.append("import com.vaadin.ui.MenuBar.MenuItem;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class MenuPanel extends CustomComponent {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/*- VaadinEditorProperties={\"grid\":\"RegularGrid,20\",\"showGrid\":true,\"snapToGrid\":true,\"snapToObject\":true,\"movingGuides\":false,\"snappingDistance\":10} */");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private static final long serialVersionUID = 1L;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private AbsoluteLayout mainLayout;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* The application\'s menu bar.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private MenuBar menuBar;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* The application\'s extension menu item.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private MenuItem modulesMenu;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* List of disabled menu item names.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private List<String> disabledMenus;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* The constructor should first build the main layout, set the");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* composition root and then do any custom initialization.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* The constructor will not be automatically regenerated by the");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* visual editor.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public MenuPanel() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("buildMainLayout();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setCompositionRoot(mainLayout);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// User code");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("disabledMenus = new ArrayList<String>();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Create the File Menu");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/*MenuItem fileMenu = menuBar.addItem(\"File\", null);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("MenuItem exitMenuItem = fileMenu.addItem(\"Exit\", null);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// Create the Modules Menu");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.modulesMenu = menuBar.addItem(\"Modules\", null);*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* Adds a new menu item to the modules menu with the specified caption, command and options.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @param caption for the menu item");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @param command for the menu item\'s action");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @param isEnabled indicates if the menu item is enabled when added");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @return the menu item added");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public MenuItem addMenu(String caption, Command command, boolean isEnabled) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("MenuItem menuItem = this.menuBar.addItem(caption, command);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("menuItem.setEnabled(isEnabled);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return menuItem;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* Enables the disabled menu items.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void enableMenus() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("disabledMenus.clear();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("List<MenuItem> menuItems = this.modulesMenu.getChildren();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for (MenuItem menuItem : menuItems) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if (!menuItem.isEnabled()) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("disabledMenus.add(menuItem.getText());");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("menuItem.setEnabled(true);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* Re-disables the disabled menu items.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void disableMenus() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("List<MenuItem> menuItems = this.modulesMenu.getChildren();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for (MenuItem menuItem : menuItems) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if (disabledMenus.contains(menuItem.getText())) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("menuItem.setEnabled(false);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* Sets the caption of a menu item. ");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @param caption of the menu item to set");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @param newCaption for the menu item");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setMenuCaption(String caption, String newCaption){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (getItem(caption) != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("getItem(caption).setText(newCaption);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* Sets the caption and command of a menu item.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @param caption of the menu item to set");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @param newCaption for the menu item");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @param newCommand for the menu item");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setMenuCaptionAndCommand(String caption, String newCaption, Command newCommand){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (getItem(caption) != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("getItem(caption).setCommand(newCommand);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("getItem(caption).setText(newCaption);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* Gets the menu item for the given caption.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @param caption of the menu item to find");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @return the menu item with the given caption, null if there is no menu item with that caption");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private MenuItem getItem(String caption){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("List<MenuItem> menuItems = modulesMenu.getChildren();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("MenuItem item = null;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("boolean go = true;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for (int i = 0; i < menuItems.size() && go; i++) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if(menuItems.get(i).getText().equals(caption)){");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("item = menuItems.get(i);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("go = false;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return item;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@AutoGenerated");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private AbsoluteLayout buildMainLayout() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// common part: create layout");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout = new AbsoluteLayout();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout.setImmediate(false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout.setWidth(\"1024px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout.setHeight(\"23px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// top-level component properties");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setWidth(\"1024px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("setHeight(\"23px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// menuBar");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("menuBar = new MenuBar();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("menuBar.setImmediate(false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("menuBar.setWidth(\"1024px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("menuBar.setHeight(\"23px\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mainLayout.addComponent(menuBar, \"top:0.0px;left:0.0px;\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return mainLayout;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
