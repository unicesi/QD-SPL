package co.shift.templates.web.basic;

import co.shift.generators.domain.DomainCodeUtilities;
import co.shift.generators.domain.DomainParams;
import co.shift.templates.web.basic.MasterWithDetailTemplate;
import co.shift.templates.web.basic.PopUpMasterDetailTemplate;
import com.google.common.base.Objects;
import domainmetamodel.AddElement;
import domainmetamodel.Association;
import domainmetamodel.Attribute;
import domainmetamodel.BusinessEntity;
import domainmetamodel.ContractElements;
import domainmetamodel.Contracts;
import domainmetamodel.Create;
import domainmetamodel.DataType;
import domainmetamodel.Delete;
import domainmetamodel.DeleteElement;
import domainmetamodel.ListAll;
import domainmetamodel.Multiple;
import domainmetamodel.Simple;
import domainmetamodel.Update;
import java.util.ArrayList;
import java.util.List;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.StringExtensions;

@SuppressWarnings("all")
public class WebControllerTemplate {
  private static String className = new Object() {
  }.getClass().getEnclosingClass().getSimpleName();
  
  public static CharSequence generate(final String packageName, final BusinessEntity be, final List<Association> associations, final IFileSystemAccess fsa) {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("\t\t");
      String _beginTemplate = DomainCodeUtilities.beginTemplate(WebControllerTemplate.className);
      _builder.append(_beginTemplate, "\t\t");
      _builder.newLineIfNotEmpty();
      _builder.append("package co.shift.");
      String _lowerCase = packageName.toLowerCase();
      _builder.append(_lowerCase, "");
      _builder.append(".web.ext.");
      String _name = be.getName();
      String _lowerCase_1 = _name.toLowerCase();
      _builder.append(_lowerCase_1, "");
      _builder.append(";");
      _builder.newLineIfNotEmpty();
      _builder.newLine();
      String _beginSection = DomainCodeUtilities.beginSection(DomainParams.SECT_IMPORTS);
      _builder.append(_beginSection, "");
      _builder.newLineIfNotEmpty();
      _builder.append("import java.math.BigDecimal;");
      _builder.newLine();
      _builder.append("import java.util.Date;");
      _builder.newLine();
      _builder.append("import java.util.List;");
      _builder.newLine();
      _builder.append("import java.util.ArrayList;");
      _builder.newLine();
      _builder.newLine();
      _builder.append("import com.vaadin.event.ItemClickEvent;");
      _builder.newLine();
      _builder.append("import com.vaadin.ui.ComboBox;");
      _builder.newLine();
      _builder.append("import com.vaadin.ui.Component;");
      _builder.newLine();
      _builder.append("import com.vaadin.ui.MenuBar.Command;");
      _builder.newLine();
      _builder.append("import com.vaadin.ui.MenuBar.MenuItem;");
      _builder.newLine();
      _builder.append("import com.vaadin.ui.TabSheet;");
      _builder.newLine();
      _builder.append("import com.vaadin.ui.TextField;");
      _builder.newLine();
      _builder.append("import com.vaadin.ui.PopupDateField;");
      _builder.newLine();
      _builder.newLine();
      String _contribute2Template = DomainCodeUtilities.contribute2Template(1, packageName);
      _builder.append(_contribute2Template, "");
      _builder.newLineIfNotEmpty();
      {
        EList<Association> _associations = be.getAssociations();
        for(final Association ass : _associations) {
          {
            if ((ass instanceof Simple)) {
              BusinessEntity relBe = ((Simple)ass).getRelatedEntity();
              _builder.append("\t\t");
              _builder.newLineIfNotEmpty();
              _builder.append("import co.shift.");
              String _lowerCase_2 = packageName.toLowerCase();
              _builder.append(_lowerCase_2, "");
              _builder.append(".web.ext.");
              String _name_1 = relBe.getName();
              String _lowerCase_3 = _name_1.toLowerCase();
              _builder.append(_lowerCase_3, "");
              _builder.append(".");
              String _name_2 = relBe.getName();
              String _firstUpper = StringExtensions.toFirstUpper(_name_2);
              _builder.append(_firstUpper, "");
              _builder.append("Controller;");
              _builder.newLineIfNotEmpty();
              _builder.append("import co.shift.");
              String _lowerCase_4 = packageName.toLowerCase();
              _builder.append(_lowerCase_4, "");
              _builder.append(".web.ext.");
              String _name_3 = relBe.getName();
              String _lowerCase_5 = _name_3.toLowerCase();
              _builder.append(_lowerCase_5, "");
              _builder.append(".");
              String _name_4 = relBe.getName();
              String _firstUpper_1 = StringExtensions.toFirstUpper(_name_4);
              _builder.append(_firstUpper_1, "");
              String _name_5 = ((Simple)ass).getName();
              String _firstUpper_2 = StringExtensions.toFirstUpper(_name_5);
              _builder.append(_firstUpper_2, "");
              _builder.append("Form;");
              _builder.newLineIfNotEmpty();
              _builder.append("import co.shift.");
              String _lowerCase_6 = packageName.toLowerCase();
              _builder.append(_lowerCase_6, "");
              _builder.append(".to.");
              String _name_6 = relBe.getName();
              String _firstUpper_3 = StringExtensions.toFirstUpper(_name_6);
              _builder.append(_firstUpper_3, "");
              _builder.append("TO;");
              _builder.newLineIfNotEmpty();
            } else {
              BusinessEntity relBe_1 = ((Multiple) ass).getEntity();
              _builder.newLineIfNotEmpty();
              _builder.append("import co.shift.");
              String _lowerCase_7 = packageName.toLowerCase();
              _builder.append(_lowerCase_7, "");
              _builder.append(".web.ext.");
              String _name_7 = relBe_1.getName();
              String _lowerCase_8 = _name_7.toLowerCase();
              _builder.append(_lowerCase_8, "");
              _builder.append(".");
              String _name_8 = relBe_1.getName();
              String _firstUpper_4 = StringExtensions.toFirstUpper(_name_8);
              _builder.append(_firstUpper_4, "");
              _builder.append("Controller;");
              _builder.newLineIfNotEmpty();
              _builder.append("import co.shift.");
              String _lowerCase_9 = packageName.toLowerCase();
              _builder.append(_lowerCase_9, "");
              _builder.append(".to.");
              String _name_9 = relBe_1.getName();
              String _firstUpper_5 = StringExtensions.toFirstUpper(_name_9);
              _builder.append(_firstUpper_5, "");
              _builder.append("TO;");
              _builder.newLineIfNotEmpty();
            }
          }
        }
      }
      {
        List<Association> _detailSimpleAssociations = DomainCodeUtilities.getDetailSimpleAssociations(be, associations);
        for(final Association ass_1 : _detailSimpleAssociations) {
          EObject _eContainer = ass_1.eContainer();
          final BusinessEntity container = ((BusinessEntity) _eContainer);
          _builder.newLineIfNotEmpty();
          _builder.append("import co.shift.");
          String _lowerCase_10 = packageName.toLowerCase();
          _builder.append(_lowerCase_10, "");
          _builder.append(".web.ext.");
          String _name_10 = container.getName();
          String _lowerCase_11 = _name_10.toLowerCase();
          _builder.append(_lowerCase_11, "");
          _builder.append(".");
          String _name_11 = container.getName();
          String _firstUpper_6 = StringExtensions.toFirstUpper(_name_11);
          _builder.append(_firstUpper_6, "");
          _builder.append("Controller;");
          _builder.newLineIfNotEmpty();
        }
      }
      {
        List<Association> _detailMultipleAssociations = DomainCodeUtilities.getDetailMultipleAssociations(be, associations);
        for(final Association ass_2 : _detailMultipleAssociations) {
          EObject _eContainer_1 = ass_2.eContainer();
          final BusinessEntity container_1 = ((BusinessEntity) _eContainer_1);
          _builder.newLineIfNotEmpty();
          _builder.append("import co.shift.");
          String _lowerCase_12 = packageName.toLowerCase();
          _builder.append(_lowerCase_12, "");
          _builder.append(".web.ext.");
          String _name_12 = container_1.getName();
          String _lowerCase_13 = _name_12.toLowerCase();
          _builder.append(_lowerCase_13, "");
          _builder.append(".");
          String _name_13 = container_1.getName();
          String _firstUpper_7 = StringExtensions.toFirstUpper(_name_13);
          _builder.append(_firstUpper_7, "");
          _builder.append("Controller;");
          _builder.newLineIfNotEmpty();
        }
      }
      {
        List<Contracts> _contract = DomainCodeUtilities.getContract(be, AddElement.class);
        for(final Contracts con : _contract) {
          String contract = "";
          _builder.newLineIfNotEmpty();
          ContractElements conI = ((ContractElements) con);
          _builder.newLineIfNotEmpty();
          Multiple _association = conI.getAssociation();
          BusinessEntity relBe_2 = _association.getEntity();
          _builder.newLineIfNotEmpty();
          String _contract_1 = contract;
          String _name_14 = conI.getName();
          String ddf = contract = (_contract_1 + _name_14);
          _builder.newLineIfNotEmpty();
          {
            boolean _hasZeroAssociations = DomainCodeUtilities.hasZeroAssociations(relBe_2);
            boolean _not = (!_hasZeroAssociations);
            if (_not) {
              _builder.append("import co.shift.");
              String _lowerCase_14 = packageName.toLowerCase();
              _builder.append(_lowerCase_14, "");
              _builder.append(".web.ext.");
              String _name_15 = relBe_2.getName();
              String _lowerCase_15 = _name_15.toLowerCase();
              _builder.append(_lowerCase_15, "");
              _builder.append(".PopUp");
              String _name_16 = be.getName();
              String _firstUpper_8 = StringExtensions.toFirstUpper(_name_16);
              _builder.append(_firstUpper_8, "");
              String _name_17 = relBe_2.getName();
              String _firstUpper_9 = StringExtensions.toFirstUpper(_name_17);
              _builder.append(_firstUpper_9, "");
              _builder.append("Form;");
              _builder.newLineIfNotEmpty();
            } else {
              _builder.append("import co.shift.");
              String _lowerCase_16 = packageName.toLowerCase();
              _builder.append(_lowerCase_16, "");
              _builder.append(".web.ext.");
              String _name_18 = relBe_2.getName();
              String _lowerCase_17 = _name_18.toLowerCase();
              _builder.append(_lowerCase_17, "");
              _builder.append(".PopUp");
              String _name_19 = relBe_2.getName();
              String _firstUpper_10 = StringExtensions.toFirstUpper(_name_19);
              _builder.append(_firstUpper_10, "");
              _builder.append("Form;");
              _builder.newLineIfNotEmpty();
            }
          }
        }
      }
      _builder.append("import co.shift.");
      String _lowerCase_18 = packageName.toLowerCase();
      _builder.append(_lowerCase_18, "");
      _builder.append(".web.AbstractController;");
      _builder.newLineIfNotEmpty();
      _builder.append("import co.shift.");
      String _lowerCase_19 = packageName.toLowerCase();
      _builder.append(_lowerCase_19, "");
      _builder.append(".web.");
      String _upperCase = packageName.toUpperCase();
      _builder.append(_upperCase, "");
      _builder.append("UI;");
      _builder.newLineIfNotEmpty();
      _builder.append("import co.shift.");
      String _lowerCase_20 = packageName.toLowerCase();
      _builder.append(_lowerCase_20, "");
      _builder.append(".web.Registry;");
      _builder.newLineIfNotEmpty();
      _builder.append("import co.shift.");
      String _lowerCase_21 = packageName.toLowerCase();
      _builder.append(_lowerCase_21, "");
      _builder.append(".web.UIContributor;");
      _builder.newLineIfNotEmpty();
      _builder.append("import co.shift.");
      String _lowerCase_22 = packageName.toLowerCase();
      _builder.append(_lowerCase_22, "");
      _builder.append(".web.ProcessContributor;");
      _builder.newLineIfNotEmpty();
      _builder.append("import co.shift.");
      String _lowerCase_23 = packageName.toLowerCase();
      _builder.append(_lowerCase_23, "");
      _builder.append(".web.client.ContentPanel;");
      _builder.newLineIfNotEmpty();
      _builder.append("import co.shift.");
      String _lowerCase_24 = packageName.toLowerCase();
      _builder.append(_lowerCase_24, "");
      _builder.append(".web.client.MenuPanel;");
      _builder.newLineIfNotEmpty();
      _builder.append("import co.shift.");
      String _lowerCase_25 = packageName.toLowerCase();
      _builder.append(_lowerCase_25, "");
      _builder.append(".");
      String _name_20 = be.getName();
      String _lowerCase_26 = _name_20.toLowerCase();
      _builder.append(_lowerCase_26, "");
      _builder.append(".boundary.I");
      String _name_21 = be.getName();
      String _firstUpper_11 = StringExtensions.toFirstUpper(_name_21);
      _builder.append(_firstUpper_11, "");
      _builder.append("Manager;");
      _builder.newLineIfNotEmpty();
      _builder.append("import co.shift.");
      String _lowerCase_27 = packageName.toLowerCase();
      _builder.append(_lowerCase_27, "");
      _builder.append(".util.beanlocator.BeanLocator;");
      _builder.newLineIfNotEmpty();
      _builder.append("import co.shift.");
      String _lowerCase_28 = packageName.toLowerCase();
      _builder.append(_lowerCase_28, "");
      _builder.append(".to.");
      String _name_22 = be.getName();
      String _firstUpper_12 = StringExtensions.toFirstUpper(_name_22);
      _builder.append(_firstUpper_12, "");
      _builder.append("TO;");
      _builder.newLineIfNotEmpty();
      String _endSection = DomainCodeUtilities.endSection();
      _builder.append(_endSection, "");
      _builder.newLineIfNotEmpty();
      _builder.newLine();
      _builder.newLine();
      _builder.append("public class ");
      String _name_23 = be.getName();
      String _firstUpper_13 = StringExtensions.toFirstUpper(_name_23);
      _builder.append(_firstUpper_13, "");
      _builder.append("Controller extends AbstractController {");
      _builder.newLineIfNotEmpty();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("private static ");
      String _name_24 = be.getName();
      String _firstUpper_14 = StringExtensions.toFirstUpper(_name_24);
      _builder.append(_firstUpper_14, "\t");
      _builder.append("Controller controller;");
      _builder.newLineIfNotEmpty();
      _builder.append("\t");
      int n = 0;
      _builder.newLineIfNotEmpty();
      {
        EList<Association> _associations_1 = be.getAssociations();
        for(final Association ass_3 : _associations_1) {
          {
            if ((ass_3 instanceof Multiple)) {
              _builder.append("\t");
              _builder.append("private static final int TAB_");
              BusinessEntity _entity = ((Multiple)ass_3).getEntity();
              String _name_25 = _entity.getName();
              String _upperCase_1 = _name_25.toUpperCase();
              _builder.append(_upperCase_1, "\t");
              _builder.append(" = ");
              int _plusPlus = n++;
              _builder.append(_plusPlus, "\t");
              _builder.append(";");
              _builder.newLineIfNotEmpty();
            }
          }
        }
      }
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("private I");
      String _name_26 = be.getName();
      String _firstUpper_15 = StringExtensions.toFirstUpper(_name_26);
      _builder.append(_firstUpper_15, "\t");
      _builder.append("Manager ");
      String _name_27 = be.getName();
      String _lowerCase_29 = _name_27.toLowerCase();
      _builder.append(_lowerCase_29, "\t");
      _builder.append("Manager;");
      _builder.newLineIfNotEmpty();
      _builder.append("\t");
      _builder.newLine();
      String _beginSection_1 = DomainCodeUtilities.beginSection(DomainParams.SECT_METHODS);
      _builder.append(_beginSection_1, "");
      _builder.newLineIfNotEmpty();
      _builder.append("\t");
      _builder.append("private ");
      String _name_28 = be.getName();
      String _firstUpper_16 = StringExtensions.toFirstUpper(_name_28);
      _builder.append(_firstUpper_16, "\t");
      _builder.append("Controller() {");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t");
      _builder.append("doLookup();");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("private void doLookup() {");
      _builder.newLine();
      _builder.append("\t\t");
      String _name_29 = be.getName();
      String _lowerCase_30 = _name_29.toLowerCase();
      _builder.append(_lowerCase_30, "\t\t");
      _builder.append("Manager = BeanLocator.lookup(");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t\t\t");
      _builder.append("I");
      String _name_30 = be.getName();
      String _firstUpper_17 = StringExtensions.toFirstUpper(_name_30);
      _builder.append(_firstUpper_17, "\t\t\t\t");
      _builder.append("Manager.class,");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t\t\t");
      _builder.append("new BeanLocator().getGlobalJNDIName()");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append(".withAppName(\"co.shift.ear\")");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append(".withModuleName(\"co.shift.ejb\")");
      _builder.newLine();
      _builder.append("\t\t\t\t\t\t");
      _builder.append(".withBeanName(\"");
      String _name_31 = be.getName();
      String _firstUpper_18 = StringExtensions.toFirstUpper(_name_31);
      _builder.append(_firstUpper_18, "\t\t\t\t\t\t");
      _builder.append("Manager\")");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t\t\t\t\t");
      _builder.append(".withBusinessInterface(I");
      String _name_32 = be.getName();
      String _firstUpper_19 = StringExtensions.toFirstUpper(_name_32);
      _builder.append(_firstUpper_19, "\t\t\t\t\t\t");
      _builder.append("Manager.class)");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t\t\t\t\t");
      _builder.append(".asString());");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      {
        boolean _isMaster = DomainCodeUtilities.isMaster(be);
        if (_isMaster) {
          _builder.append("\t");
          _builder.append("public void show");
          String _name_33 = be.getName();
          String _firstUpper_20 = StringExtensions.toFirstUpper(_name_33);
          _builder.append(_firstUpper_20, "\t");
          _builder.append("Form() {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          String _name_34 = be.getName();
          String _firstUpper_21 = StringExtensions.toFirstUpper(_name_34);
          _builder.append(_firstUpper_21, "\t\t");
          _builder.append("Form ");
          String _name_35 = be.getName();
          String _lowerCase_31 = _name_35.toLowerCase();
          _builder.append(_lowerCase_31, "\t\t");
          _builder.append("Form = Registry.get(");
          String _name_36 = be.getName();
          String _firstUpper_22 = StringExtensions.toFirstUpper(_name_36);
          _builder.append(_firstUpper_22, "\t\t");
          _builder.append("Form.ID);");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          List<Contracts> _contract_2 = DomainCodeUtilities.getContract(be, ListAll.class);
          Contracts conListAll = _contract_2.get(0);
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          String con0 = DomainCodeUtilities.contribute2Template(1, conListAll, be, Integer.valueOf(0));
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          int _indexOf = con0.indexOf(" ");
          int _plus = (_indexOf + 1);
          String con1 = con0.substring(_plus);
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          int _indexOf_1 = con1.indexOf(" ");
          int _plus_1 = (_indexOf_1 + 1);
          String con2 = con1.substring(_plus_1);
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          int _indexOf_2 = con2.indexOf(")");
          int _plus_2 = (_indexOf_2 + 1);
          String con3 = con2.substring(0, _plus_2);
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.newLine();
          _builder.append("\t\t");
          String _removeAttributeContracts = DomainCodeUtilities.removeAttributeContracts(con3);
          _builder.append(_removeAttributeContracts, "\t\t");
          _builder.append(";");
          _builder.newLineIfNotEmpty();
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("ContentPanel panel = Registry.get(");
          String _upperCase_2 = packageName.toUpperCase();
          _builder.append(_upperCase_2, "\t\t");
          _builder.append("UI.CONTENT_PANEL);");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("panel.removeContent();");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("panel.setContent(");
          String _name_37 = be.getName();
          String _lowerCase_32 = _name_37.toLowerCase();
          _builder.append(_lowerCase_32, "\t\t");
          _builder.append("Form);");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("public void removeDetailRecord() {");
          _builder.newLine();
          _builder.append("\t\t");
          String _upperCase_3 = packageName.toUpperCase();
          _builder.append(_upperCase_3, "\t\t");
          _builder.append("UI ui = Registry.get(");
          String _upperCase_4 = packageName.toUpperCase();
          _builder.append(_upperCase_4, "\t\t");
          _builder.append("UI.UI);");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("try {");
          _builder.newLine();
          _builder.append("\t\t\t");
          String _name_38 = be.getName();
          String _firstUpper_23 = StringExtensions.toFirstUpper(_name_38);
          _builder.append(_firstUpper_23, "\t\t\t");
          _builder.append("Form pF = Registry.get(");
          String _name_39 = be.getName();
          String _firstUpper_24 = StringExtensions.toFirstUpper(_name_39);
          _builder.append(_firstUpper_24, "\t\t\t");
          _builder.append("Form.ID);");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t\t");
          String _name_40 = be.getName();
          String _firstUpper_25 = StringExtensions.toFirstUpper(_name_40);
          _builder.append(_firstUpper_25, "\t\t\t");
          _builder.append("TO ");
          String _name_41 = be.getName();
          String _lowerCase_33 = _name_41.toLowerCase();
          _builder.append(_lowerCase_33, "\t\t\t");
          _builder.append(" = (");
          String _name_42 = be.getName();
          String _firstUpper_26 = StringExtensions.toFirstUpper(_name_42);
          _builder.append(_firstUpper_26, "\t\t\t");
          _builder.append("TO) pF.getTable_1().getValue();");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t\t");
          _builder.append("TabSheet tS = pF.getTabSheet_1();");
          _builder.newLine();
          _builder.append("\t\t\t");
          _builder.append("int selectedTab = tS.getTabPosition(tS.getTab(tS.getSelectedTab()));");
          _builder.newLine();
          _builder.append("\t\t\t");
          _builder.append("switch (selectedTab) {");
          _builder.newLine();
          _builder.append("\t\t\t");
          int index = 2;
          _builder.newLineIfNotEmpty();
          {
            EList<Association> _associations_2 = be.getAssociations();
            for(final Association ass_4 : _associations_2) {
              {
                boolean _and = false;
                if (!(ass_4 instanceof Multiple)) {
                  _and = false;
                } else {
                  BusinessEntity _entity_1 = ((Multiple) ass_4).getEntity();
                  boolean _hasRemoveContract = DomainCodeUtilities.hasRemoveContract(be, _entity_1);
                  _and = _hasRemoveContract;
                }
                if (_and) {
                  _builder.append("\t\t\t");
                  BusinessEntity relBe_3 = ((Multiple) ass_4).getEntity();
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("case TAB_");
                  String _name_43 = relBe_3.getName();
                  String _upperCase_5 = _name_43.toUpperCase();
                  _builder.append(_upperCase_5, "\t\t\t");
                  _builder.append(":");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("\t");
                  _builder.append("try {");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("// String obtained from ClassName - MethodName");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  String _name_44 = be.getName();
                  String _firstUpper_27 = StringExtensions.toFirstUpper(_name_44);
                  String _plus_3 = (_firstUpper_27 + " - Remove");
                  String _name_45 = relBe_3.getName();
                  String _firstUpper_28 = StringExtensions.toFirstUpper(_name_45);
                  String _plus_4 = (_plus_3 + _firstUpper_28);
                  String _contribute2Template_1 = DomainCodeUtilities.contribute2Template(2, _plus_4);
                  _builder.append(_contribute2Template_1, "\t\t\t\t\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  String _name_46 = be.getName();
                  String _firstUpper_29 = StringExtensions.toFirstUpper(_name_46);
                  String _plus_5 = (_firstUpper_29 + " - Remove");
                  String _name_47 = relBe_3.getName();
                  String _firstUpper_30 = StringExtensions.toFirstUpper(_name_47);
                  String _plus_6 = (_plus_5 + _firstUpper_30);
                  DomainCodeUtilities.addService(_plus_6);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  String _name_48 = relBe_3.getName();
                  String _firstUpper_31 = StringExtensions.toFirstUpper(_name_48);
                  _builder.append(_firstUpper_31, "\t\t\t\t\t");
                  _builder.append("TO ");
                  String _name_49 = relBe_3.getName();
                  String _lowerCase_34 = _name_49.toLowerCase();
                  _builder.append(_lowerCase_34, "\t\t\t\t\t");
                  _builder.append(" = (");
                  String _name_50 = relBe_3.getName();
                  String _firstUpper_32 = StringExtensions.toFirstUpper(_name_50);
                  _builder.append(_firstUpper_32, "\t\t\t\t\t");
                  _builder.append("TO) pF.getTable_");
                  int _plusPlus_1 = index++;
                  _builder.append(_plusPlus_1, "\t\t\t\t\t");
                  _builder.append("().getValue();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("if (");
                  String _name_51 = relBe_3.getName();
                  String _lowerCase_35 = _name_51.toLowerCase();
                  _builder.append(_lowerCase_35, "\t\t\t\t\t");
                  _builder.append(" != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("\t\t\t");
                  String contract_1 = "";
                  _builder.newLineIfNotEmpty();
                  {
                    List<Contracts> _contract_3 = DomainCodeUtilities.getContract(be, DeleteElement.class);
                    for(final Contracts con_1 : _contract_3) {
                      _builder.append("\t\t\t");
                      _builder.append("\t\t\t");
                      ContractElements conI_1 = ((ContractElements) con_1);
                      _builder.newLineIfNotEmpty();
                      {
                        Multiple _association_1 = conI_1.getAssociation();
                        BusinessEntity _entity_2 = _association_1.getEntity();
                        String _name_52 = _entity_2.getName();
                        String _name_53 = relBe_3.getName();
                        boolean _equals = _name_52.equals(_name_53);
                        if (_equals) {
                          _builder.append("\t\t\t");
                          _builder.append("\t\t\t");
                          String _contract_4 = contract_1;
                          String _name_54 = conI_1.getName();
                          String ddf_1 = contract_1 = (_contract_4 + _name_54);
                          _builder.newLineIfNotEmpty();
                        }
                      }
                    }
                  }
                  {
                    boolean _and_1 = false;
                    boolean _isMaster_1 = DomainCodeUtilities.isMaster(relBe_3);
                    if (!_isMaster_1) {
                      _and_1 = false;
                    } else {
                      List<Association> _detailMultipleAssociations_1 = DomainCodeUtilities.getDetailMultipleAssociations(relBe_3, associations);
                      boolean _notEquals = (!Objects.equal(_detailMultipleAssociations_1, null));
                      _and_1 = _notEquals;
                    }
                    if (_and_1) {
                      _builder.append("\t\t\t");
                      _builder.append("\t\t\t");
                      _builder.append(contract_1, "\t\t\t\t\t\t");
                      _builder.append("(ui, ");
                      String _name_55 = be.getName();
                      String _lowerCase_36 = _name_55.toLowerCase();
                      _builder.append(_lowerCase_36, "\t\t\t\t\t\t");
                      _builder.append(", ");
                      String _name_56 = relBe_3.getName();
                      String _lowerCase_37 = _name_56.toLowerCase();
                      _builder.append(_lowerCase_37, "\t\t\t\t\t\t");
                      _builder.append(");");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t\t\t");
                      _builder.append("\t\t\t");
                      _builder.append(contract_1, "\t\t\t\t\t\t");
                      _builder.append("(ui, ");
                      String _name_57 = relBe_3.getName();
                      String _lowerCase_38 = _name_57.toLowerCase();
                      _builder.append(_lowerCase_38, "\t\t\t\t\t\t");
                      _builder.append(");");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("} else");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("\t\t\t");
                  _builder.append("((");
                  String _upperCase_6 = packageName.toUpperCase();
                  _builder.append(_upperCase_6, "\t\t\t\t\t\t");
                  _builder.append("UI) Registry.get(");
                  String _upperCase_7 = packageName.toUpperCase();
                  _builder.append(_upperCase_7, "\t\t\t\t\t\t");
                  _builder.append("UI.UI)).showNotification(");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("\t\t\t\t\t");
                  String _upperCase_8 = packageName.toUpperCase();
                  _builder.append(_upperCase_8, "\t\t\t\t\t\t\t\t");
                  _builder.append("UI.MSG_ERR,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("\"Please select the ");
                  String _name_58 = relBe_3.getName();
                  String _lowerCase_39 = _name_58.toLowerCase();
                  _builder.append(_lowerCase_39, "\t\t\t\t\t\t\t\t");
                  _builder.append(" to be removed\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("\t");
                  _builder.append("} catch (Exception e) {");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_9 = packageName.toUpperCase();
                  _builder.append(_upperCase_9, "\t\t\t\t\t");
                  _builder.append("UI.MSG_ERR, e.getMessage());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("\t");
                  _builder.append("break;");
                  _builder.newLine();
                }
              }
            }
          }
          _builder.append("\t\t\t");
          _builder.append("default:");
          _builder.newLine();
          _builder.append("\t\t\t\t");
          _builder.append("break;");
          _builder.newLine();
          _builder.append("\t\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("} catch (Exception e) {");
          _builder.newLine();
          _builder.append("\t\t\t");
          _builder.append("ui.showNotification(");
          String _upperCase_10 = packageName.toUpperCase();
          _builder.append(_upperCase_10, "\t\t\t");
          _builder.append("UI.MSG_ERR, e.getMessage());");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
        }
      }
      _builder.append("\t");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("public static ");
      String _name_59 = be.getName();
      String _firstUpper_33 = StringExtensions.toFirstUpper(_name_59);
      _builder.append(_firstUpper_33, "\t");
      _builder.append("Controller getInstance() {");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t");
      _builder.append("if (controller == null) {");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("controller = new ");
      String _name_60 = be.getName();
      String _firstUpper_34 = StringExtensions.toFirstUpper(_name_60);
      _builder.append(_firstUpper_34, "\t\t\t");
      _builder.append("Controller();");
      _builder.newLineIfNotEmpty();
      {
        boolean _isMaster_2 = DomainCodeUtilities.isMaster(be);
        if (_isMaster_2) {
          _builder.append("\t\t\t");
          String _name_61 = be.getName();
          String _firstUpper_35 = StringExtensions.toFirstUpper(_name_61);
          _builder.append(_firstUpper_35, "\t\t\t");
          _builder.append("Form pF = new ");
          String _name_62 = be.getName();
          String _firstUpper_36 = StringExtensions.toFirstUpper(_name_62);
          _builder.append(_firstUpper_36, "\t\t\t");
          _builder.append("Form();");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t\t");
          _builder.append("Registry.register(");
          String _name_63 = be.getName();
          String _firstUpper_37 = StringExtensions.toFirstUpper(_name_63);
          _builder.append(_firstUpper_37, "\t\t\t");
          _builder.append("Form.ID, pF);");
          _builder.newLineIfNotEmpty();
        }
      }
      {
        List<Association> _detailMultipleAssociations_2 = DomainCodeUtilities.getDetailMultipleAssociations(be, associations);
        for(final Association ass_5 : _detailMultipleAssociations_2) {
          _builder.append("\t\t\t");
          EObject _eContainer_2 = ass_5.eContainer();
          BusinessEntity relBe_4 = ((BusinessEntity) _eContainer_2);
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t\t");
          String contract_2 = "";
          _builder.newLineIfNotEmpty();
          {
            List<Contracts> _contract_5 = DomainCodeUtilities.getContract(relBe_4, AddElement.class);
            for(final Contracts con_2 : _contract_5) {
              _builder.append("\t\t\t");
              ContractElements conI_2 = ((ContractElements) con_2);
              _builder.newLineIfNotEmpty();
              {
                Multiple _association_2 = conI_2.getAssociation();
                BusinessEntity _entity_3 = _association_2.getEntity();
                String _name_64 = _entity_3.getName();
                String _name_65 = be.getName();
                boolean _equals_1 = _name_64.equals(_name_65);
                if (_equals_1) {
                  _builder.append("\t\t\t");
                  String _contract_6 = contract_2;
                  String _name_66 = conI_2.getName();
                  String ddf_2 = contract_2 = (_contract_6 + _name_66);
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
          {
            boolean _equals_2 = contract_2.equals("");
            boolean _not_1 = (!_equals_2);
            if (_not_1) {
              {
                boolean _hasZeroAssociations_1 = DomainCodeUtilities.hasZeroAssociations(be);
                boolean _not_2 = (!_hasZeroAssociations_1);
                if (_not_2) {
                  _builder.append("\t\t\t");
                  _builder.append("PopUp");
                  String _name_67 = relBe_4.getName();
                  String _firstUpper_38 = StringExtensions.toFirstUpper(_name_67);
                  _builder.append(_firstUpper_38, "\t\t\t");
                  String _name_68 = be.getName();
                  String _firstUpper_39 = StringExtensions.toFirstUpper(_name_68);
                  _builder.append(_firstUpper_39, "\t\t\t");
                  _builder.append("Form uF = new PopUp");
                  String _name_69 = relBe_4.getName();
                  String _firstUpper_40 = StringExtensions.toFirstUpper(_name_69);
                  _builder.append(_firstUpper_40, "\t\t\t");
                  String _name_70 = be.getName();
                  String _firstUpper_41 = StringExtensions.toFirstUpper(_name_70);
                  _builder.append(_firstUpper_41, "\t\t\t");
                  _builder.append("Form();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("Registry.register(PopUp");
                  String _name_71 = relBe_4.getName();
                  String _firstUpper_42 = StringExtensions.toFirstUpper(_name_71);
                  _builder.append(_firstUpper_42, "\t\t\t");
                  String _name_72 = be.getName();
                  String _firstUpper_43 = StringExtensions.toFirstUpper(_name_72);
                  _builder.append(_firstUpper_43, "\t\t\t");
                  _builder.append("Form.ID, uF);");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("\t\t\t");
                  _builder.append("PopUp");
                  String _name_73 = be.getName();
                  String _firstUpper_44 = StringExtensions.toFirstUpper(_name_73);
                  _builder.append(_firstUpper_44, "\t\t\t");
                  _builder.append("Form uF = new PopUp");
                  String _name_74 = be.getName();
                  String _firstUpper_45 = StringExtensions.toFirstUpper(_name_74);
                  _builder.append(_firstUpper_45, "\t\t\t");
                  _builder.append("Form();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("Registry.register(PopUp");
                  String _name_75 = be.getName();
                  String _firstUpper_46 = StringExtensions.toFirstUpper(_name_75);
                  _builder.append(_firstUpper_46, "\t\t\t");
                  _builder.append("Form.ID, uF);");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
        }
      }
      {
        List<Association> _detailSimpleAssociations_1 = DomainCodeUtilities.getDetailSimpleAssociations(be, associations);
        for(final Association a : _detailSimpleAssociations_1) {
          _builder.append("\t\t\t");
          String _name_76 = be.getName();
          String _firstUpper_47 = StringExtensions.toFirstUpper(_name_76);
          _builder.append(_firstUpper_47, "\t\t\t");
          String _name_77 = a.getName();
          String _firstUpper_48 = StringExtensions.toFirstUpper(_name_77);
          _builder.append(_firstUpper_48, "\t\t\t");
          _builder.append("Form uMF = new ");
          String _name_78 = be.getName();
          String _firstUpper_49 = StringExtensions.toFirstUpper(_name_78);
          _builder.append(_firstUpper_49, "\t\t\t");
          String _name_79 = a.getName();
          String _firstUpper_50 = StringExtensions.toFirstUpper(_name_79);
          _builder.append(_firstUpper_50, "\t\t\t");
          _builder.append("Form();");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t\t");
          _builder.append("Registry.register(");
          String _name_80 = be.getName();
          String _firstUpper_51 = StringExtensions.toFirstUpper(_name_80);
          _builder.append(_firstUpper_51, "\t\t\t");
          String _name_81 = a.getName();
          String _firstUpper_52 = StringExtensions.toFirstUpper(_name_81);
          _builder.append(_firstUpper_52, "\t\t\t");
          _builder.append("Form.ID, uMF);");
          _builder.newLineIfNotEmpty();
        }
      }
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("return controller;");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t");
      _builder.newLine();
      {
        List<Association> _detailMultipleAssociations_3 = DomainCodeUtilities.getDetailMultipleAssociations(be, associations);
        for(final Association association : _detailMultipleAssociations_3) {
          _builder.append("\t");
          EObject _eContainer_3 = association.eContainer();
          final BusinessEntity container_2 = ((BusinessEntity) _eContainer_3);
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          Attribute _iD = DomainCodeUtilities.getID(container_2);
          DataType _dataType = _iD.getDataType();
          final String type = _dataType.getLiteral();
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("public List<");
          String _name_82 = be.getName();
          _builder.append(_name_82, "\t");
          _builder.append("TO> get");
          String _name_83 = be.getName();
          String _firstUpper_53 = StringExtensions.toFirstUpper(_name_83);
          _builder.append(_firstUpper_53, "\t");
          _builder.append("From");
          String _name_84 = container_2.getName();
          String _firstUpper_54 = StringExtensions.toFirstUpper(_name_84);
          _builder.append(_firstUpper_54, "\t");
          _builder.append("(");
          String _type = DomainCodeUtilities.getType(type);
          _builder.append(_type, "\t");
          _builder.append(" ");
          String _name_85 = container_2.getName();
          String _lowerCase_40 = _name_85.toLowerCase();
          _builder.append(_lowerCase_40, "\t");
          Attribute _iD_1 = DomainCodeUtilities.getID(container_2);
          String _name_86 = _iD_1.getName();
          String _firstUpper_55 = StringExtensions.toFirstUpper(_name_86);
          _builder.append(_firstUpper_55, "\t");
          _builder.append(") {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("return ");
          String _name_87 = be.getName();
          String _lowerCase_41 = _name_87.toLowerCase();
          _builder.append(_lowerCase_41, "\t\t");
          _builder.append("Manager.get");
          String _name_88 = be.getName();
          String _firstUpper_56 = StringExtensions.toFirstUpper(_name_88);
          _builder.append(_firstUpper_56, "\t\t");
          _builder.append("From");
          String _name_89 = container_2.getName();
          String _firstUpper_57 = StringExtensions.toFirstUpper(_name_89);
          _builder.append(_firstUpper_57, "\t\t");
          _builder.append("(");
          String _name_90 = container_2.getName();
          String _lowerCase_42 = _name_90.toLowerCase();
          _builder.append(_lowerCase_42, "\t\t");
          Attribute _iD_2 = DomainCodeUtilities.getID(container_2);
          String _name_91 = _iD_2.getName();
          String _firstUpper_58 = StringExtensions.toFirstUpper(_name_91);
          _builder.append(_firstUpper_58, "\t\t");
          _builder.append(");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.newLine();
          _builder.append("\t");
          String contract_3 = "";
          _builder.newLineIfNotEmpty();
          {
            List<Contracts> _contract_7 = DomainCodeUtilities.getContract(container_2, AddElement.class);
            for(final Contracts con_3 : _contract_7) {
              _builder.append("\t");
              ContractElements conI_3 = ((ContractElements) con_3);
              _builder.newLineIfNotEmpty();
              {
                Multiple _association_3 = conI_3.getAssociation();
                BusinessEntity _entity_4 = _association_3.getEntity();
                String _name_92 = _entity_4.getName();
                String _name_93 = be.getName();
                boolean _equals_3 = _name_92.equals(_name_93);
                if (_equals_3) {
                  _builder.append("\t");
                  String _contract_8 = contract_3;
                  String _name_94 = conI_3.getName();
                  String ddf_3 = contract_3 = (_contract_8 + _name_94);
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
          {
            boolean _equals_4 = contract_3.equals("");
            boolean _not_3 = (!_equals_4);
            if (_not_3) {
              {
                boolean _hasZeroAssociations_2 = DomainCodeUtilities.hasZeroAssociations(be);
                boolean _not_4 = (!_hasZeroAssociations_2);
                if (_not_4) {
                  _builder.append("\t");
                  String _lowerCase_43 = packageName.toLowerCase();
                  String _plus_7 = ("/co/shift/" + _lowerCase_43);
                  String _plus_8 = (_plus_7 + "/web/ext/");
                  String _name_95 = be.getName();
                  String _lowerCase_44 = _name_95.toLowerCase();
                  String _plus_9 = (_plus_8 + _lowerCase_44);
                  String _plus_10 = (_plus_9 + "/PopUp");
                  String _name_96 = container_2.getName();
                  String _firstUpper_59 = StringExtensions.toFirstUpper(_name_96);
                  String _plus_11 = (_plus_10 + _firstUpper_59);
                  String _name_97 = be.getName();
                  String _firstUpper_60 = StringExtensions.toFirstUpper(_name_97);
                  String _plus_12 = (_plus_11 + _firstUpper_60);
                  String _plus_13 = (_plus_12 + "Form.java");
                  String _name_98 = be.getName();
                  String _lowerCase_45 = _name_98.toLowerCase();
                  String _name_99 = be.getName();
                  String _firstUpper_61 = StringExtensions.toFirstUpper(_name_99);
                  String _plus_14 = (_firstUpper_61 + "Controller");
                  String _name_100 = be.getName();
                  String _firstUpper_62 = StringExtensions.toFirstUpper(_name_100);
                  String _plus_15 = ("add" + _firstUpper_62);
                  String _plus_16 = (_plus_15 + "To");
                  String _name_101 = container_2.getName();
                  String _firstUpper_63 = StringExtensions.toFirstUpper(_name_101);
                  String _plus_17 = (_plus_16 + _firstUpper_63);
                  String _name_102 = container_2.getName();
                  String _firstUpper_64 = StringExtensions.toFirstUpper(_name_102);
                  String _plus_18 = ("PopUp" + _firstUpper_64);
                  String _name_103 = be.getName();
                  String _firstUpper_65 = StringExtensions.toFirstUpper(_name_103);
                  String _plus_19 = (_plus_18 + _firstUpper_65);
                  String _name_104 = container_2.getName();
                  String _firstUpper_66 = StringExtensions.toFirstUpper(_name_104);
                  String _plus_20 = ("update" + _firstUpper_66);
                  String _name_105 = be.getName();
                  String _firstUpper_67 = StringExtensions.toFirstUpper(_name_105);
                  String _plus_21 = (_plus_20 + _firstUpper_67);
                  String _plus_22 = (_plus_21 + "sFormFields");
                  CharSequence _generate = PopUpMasterDetailTemplate.generate(packageName, _lowerCase_45, container_2, be, _plus_14, _plus_17, _plus_19, _plus_22);
                  fsa.generateFile(_plus_13, _generate);
                  _builder.append("\t\t\t\t");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("\t");
                  String _lowerCase_46 = packageName.toLowerCase();
                  String _plus_23 = ("/co/shift/" + _lowerCase_46);
                  String _plus_24 = (_plus_23 + "/web/ext/");
                  String _name_106 = be.getName();
                  String _lowerCase_47 = _name_106.toLowerCase();
                  String _plus_25 = (_plus_24 + _lowerCase_47);
                  String _plus_26 = (_plus_25 + "/PopUp");
                  String _name_107 = be.getName();
                  String _firstUpper_68 = StringExtensions.toFirstUpper(_name_107);
                  String _plus_27 = (_plus_26 + _firstUpper_68);
                  String _plus_28 = (_plus_27 + "Form.java");
                  String _name_108 = be.getName();
                  String _lowerCase_48 = _name_108.toLowerCase();
                  String _name_109 = be.getName();
                  String _firstUpper_69 = StringExtensions.toFirstUpper(_name_109);
                  String _plus_29 = (_firstUpper_69 + "Controller");
                  CharSequence _generate_1 = MasterWithDetailTemplate.generate(packageName, _lowerCase_48, be, _plus_29, container_2);
                  fsa.generateFile(_plus_28, _generate_1);
                  _builder.append("\t\t\t\t");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
        }
      }
      _builder.append("\t");
      _builder.newLine();
      {
        List<Association> _detailSimpleAssociations_2 = DomainCodeUtilities.getDetailSimpleAssociations(be, associations);
        for(final Association association_1 : _detailSimpleAssociations_2) {
          _builder.append("\t");
          EObject _eContainer_4 = association_1.eContainer();
          final BusinessEntity container_3 = ((BusinessEntity) _eContainer_4);
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          Attribute _iD_3 = DomainCodeUtilities.getID(container_3);
          DataType _dataType_1 = _iD_3.getDataType();
          final String type_1 = _dataType_1.getLiteral();
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("public ");
          String _name_110 = be.getName();
          _builder.append(_name_110, "\t");
          _builder.append("TO get");
          String _name_111 = container_3.getName();
          String _firstUpper_70 = StringExtensions.toFirstUpper(_name_111);
          _builder.append(_firstUpper_70, "\t");
          String _name_112 = association_1.getName();
          String _firstUpper_71 = StringExtensions.toFirstUpper(_name_112);
          _builder.append(_firstUpper_71, "\t");
          _builder.append("(");
          String _type_1 = DomainCodeUtilities.getType(type_1);
          _builder.append(_type_1, "\t");
          _builder.append(" ");
          String _name_113 = container_3.getName();
          String _lowerCase_49 = _name_113.toLowerCase();
          _builder.append(_lowerCase_49, "\t");
          Attribute _iD_4 = DomainCodeUtilities.getID(container_3);
          String _name_114 = _iD_4.getName();
          String _firstUpper_72 = StringExtensions.toFirstUpper(_name_114);
          _builder.append(_firstUpper_72, "\t");
          _builder.append(") {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("return ");
          String _name_115 = be.getName();
          String _lowerCase_50 = _name_115.toLowerCase();
          _builder.append(_lowerCase_50, "\t\t");
          _builder.append("Manager.get");
          String _name_116 = container_3.getName();
          String _firstUpper_73 = StringExtensions.toFirstUpper(_name_116);
          _builder.append(_firstUpper_73, "\t\t");
          String _name_117 = association_1.getName();
          String _firstUpper_74 = StringExtensions.toFirstUpper(_name_117);
          _builder.append(_firstUpper_74, "\t\t");
          _builder.append("(");
          String _name_118 = container_3.getName();
          String _lowerCase_51 = _name_118.toLowerCase();
          _builder.append(_lowerCase_51, "\t\t");
          Attribute _iD_5 = DomainCodeUtilities.getID(container_3);
          String _name_119 = _iD_5.getName();
          String _firstUpper_75 = StringExtensions.toFirstUpper(_name_119);
          _builder.append(_firstUpper_75, "\t\t");
          _builder.append(");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
        }
      }
      _builder.append("\t");
      _builder.newLine();
      {
        List<Contracts> _contract_9 = DomainCodeUtilities.getContract(be, ListAll.class);
        for(final Contracts con_4 : _contract_9) {
          _builder.append("\t");
          String _contribute2Template_2 = DomainCodeUtilities.contribute2Template(1, con_4, be, Integer.valueOf(1));
          _builder.append(_contribute2Template_2, "\t");
          _builder.newLineIfNotEmpty();
        }
      }
      _builder.append("\t");
      _builder.newLine();
      {
        EList<Contracts> _contracts = be.getContracts();
        for(final Contracts c : _contracts) {
          {
            if ((c instanceof ListAll)) {
              _builder.append("\t");
              String _contribute2Template_3 = DomainCodeUtilities.contribute2Template(1, c, be, Integer.valueOf(0));
              _builder.append(_contribute2Template_3, "\t");
              _builder.newLineIfNotEmpty();
            }
          }
        }
      }
      _builder.append("\t");
      _builder.newLine();
      {
        boolean _isMaster_3 = DomainCodeUtilities.isMaster(be);
        if (_isMaster_3) {
          _builder.append("\t");
          _builder.append("public void listAllDetailsFrom");
          String _name_120 = be.getName();
          String _firstUpper_76 = StringExtensions.toFirstUpper(_name_120);
          _builder.append(_firstUpper_76, "\t");
          _builder.append("(ItemClickEvent event) {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          String _name_121 = be.getName();
          String _firstUpper_77 = StringExtensions.toFirstUpper(_name_121);
          _builder.append(_firstUpper_77, "\t\t");
          _builder.append("Form pF = Registry.get(");
          String _name_122 = be.getName();
          String _firstUpper_78 = StringExtensions.toFirstUpper(_name_122);
          _builder.append(_firstUpper_78, "\t\t");
          _builder.append("Form.ID);");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          String _name_123 = be.getName();
          String _firstUpper_79 = StringExtensions.toFirstUpper(_name_123);
          _builder.append(_firstUpper_79, "\t\t");
          _builder.append("TO ");
          String _name_124 = be.getName();
          String _lowerCase_52 = _name_124.toLowerCase();
          _builder.append(_lowerCase_52, "\t\t");
          _builder.append(" = (");
          String _name_125 = be.getName();
          String _firstUpper_80 = StringExtensions.toFirstUpper(_name_125);
          _builder.append(_firstUpper_80, "\t\t");
          _builder.append("TO) event.getItemId();");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("if (");
          String _name_126 = be.getName();
          String _lowerCase_53 = _name_126.toLowerCase();
          _builder.append(_lowerCase_53, "\t\t");
          _builder.append(" != null) {");
          _builder.newLineIfNotEmpty();
          {
            EList<Attribute> _attributes = be.getAttributes();
            for(final Attribute a_1 : _attributes) {
              {
                String _type_2 = DomainCodeUtilities.getType(a_1);
                boolean _equals_5 = _type_2.equals("Date");
                if (_equals_5) {
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("pF.getTxtD");
                  String _name_127 = a_1.getName();
                  String _firstUpper_81 = StringExtensions.toFirstUpper(_name_127);
                  _builder.append(_firstUpper_81, "\t\t\t");
                  _builder.append("().setValue(");
                  String _name_128 = be.getName();
                  String _lowerCase_54 = _name_128.toLowerCase();
                  _builder.append(_lowerCase_54, "\t\t\t");
                  _builder.append(".get");
                  String _name_129 = a_1.getName();
                  String _firstUpper_82 = StringExtensions.toFirstUpper(_name_129);
                  _builder.append(_firstUpper_82, "\t\t\t");
                  _builder.append("());");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("pF.getTxt");
                  String _name_130 = a_1.getName();
                  String _firstUpper_83 = StringExtensions.toFirstUpper(_name_130);
                  _builder.append(_firstUpper_83, "\t\t\t");
                  _builder.append("().setValue(\"\"+");
                  String _name_131 = be.getName();
                  String _lowerCase_55 = _name_131.toLowerCase();
                  _builder.append(_lowerCase_55, "\t\t\t");
                  _builder.append(".get");
                  String _name_132 = a_1.getName();
                  String _firstUpper_84 = StringExtensions.toFirstUpper(_name_132);
                  _builder.append(_firstUpper_84, "\t\t\t");
                  _builder.append("());");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
          {
            EList<Association> _associations_3 = be.getAssociations();
            for(final Association ass_6 : _associations_3) {
              {
                if ((ass_6 instanceof Multiple)) {
                  _builder.append("\t");
                  _builder.append("\t\t");
                  BusinessEntity relBe_5 = ((Multiple)ass_6).getEntity();
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("list");
                  String _name_133 = be.getName();
                  String _firstUpper_85 = StringExtensions.toFirstUpper(_name_133);
                  _builder.append(_firstUpper_85, "\t\t\t");
                  String _name_134 = relBe_5.getName();
                  String _firstUpper_86 = StringExtensions.toFirstUpper(_name_134);
                  _builder.append(_firstUpper_86, "\t\t\t");
                  _builder.append("(");
                  String _name_135 = be.getName();
                  String _lowerCase_56 = _name_135.toLowerCase();
                  _builder.append(_lowerCase_56, "\t\t\t");
                  _builder.append(".get");
                  Attribute _iD_6 = DomainCodeUtilities.getID(be);
                  String _name_136 = _iD_6.getName();
                  String _firstUpper_87 = StringExtensions.toFirstUpper(_name_136);
                  _builder.append(_firstUpper_87, "\t\t\t");
                  _builder.append("());");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("\t");
                  _builder.append("\t\t");
                  BusinessEntity relBe_6 = ((Simple) ass_6).getRelatedEntity();
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  String _name_137 = relBe_6.getName();
                  String _firstUpper_88 = StringExtensions.toFirstUpper(_name_137);
                  _builder.append(_firstUpper_88, "\t\t\t");
                  _builder.append("TO ");
                  String _name_138 = ass_6.getName();
                  String _lowerCase_57 = _name_138.toLowerCase();
                  _builder.append(_lowerCase_57, "\t\t\t");
                  _builder.append(" = ");
                  String _name_139 = relBe_6.getName();
                  String _firstUpper_89 = StringExtensions.toFirstUpper(_name_139);
                  _builder.append(_firstUpper_89, "\t\t\t");
                  _builder.append("Controller.getInstance()");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t");
                  _builder.append(".get");
                  String _name_140 = be.getName();
                  String _firstUpper_90 = StringExtensions.toFirstUpper(_name_140);
                  _builder.append(_firstUpper_90, "\t\t\t\t\t");
                  String _name_141 = ass_6.getName();
                  String _firstUpper_91 = StringExtensions.toFirstUpper(_name_141);
                  _builder.append(_firstUpper_91, "\t\t\t\t\t");
                  _builder.append("(");
                  String _name_142 = be.getName();
                  String _lowerCase_58 = _name_142.toLowerCase();
                  _builder.append(_lowerCase_58, "\t\t\t\t\t");
                  _builder.append(".get");
                  Attribute _iD_7 = DomainCodeUtilities.getID(be);
                  String _name_143 = _iD_7.getName();
                  String _firstUpper_92 = StringExtensions.toFirstUpper(_name_143);
                  _builder.append(_firstUpper_92, "\t\t\t\t\t");
                  _builder.append("());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("if (");
                  String _name_144 = ass_6.getName();
                  String _lowerCase_59 = _name_144.toLowerCase();
                  _builder.append(_lowerCase_59, "\t\t\t");
                  _builder.append(" != null)");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t");
                  _builder.append("pF.update");
                  String _name_145 = ass_6.getName();
                  String _firstUpper_93 = StringExtensions.toFirstUpper(_name_145);
                  _builder.append(_firstUpper_93, "\t\t\t\t");
                  _builder.append("Fields(");
                  String _name_146 = ass_6.getName();
                  String _lowerCase_60 = _name_146.toLowerCase();
                  _builder.append(_lowerCase_60, "\t\t\t\t");
                  _builder.append(");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("else");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t");
                  _builder.append("pF.clear");
                  String _name_147 = ass_6.getName();
                  String _firstUpper_94 = StringExtensions.toFirstUpper(_name_147);
                  _builder.append(_firstUpper_94, "\t\t\t\t");
                  _builder.append("Fields();");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("} else");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("pF.clearFormFields();");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          int pp = 2;
          _builder.newLineIfNotEmpty();
          {
            EList<Association> _associations_4 = be.getAssociations();
            for(final Association ass_7 : _associations_4) {
              {
                if ((ass_7 instanceof Multiple)) {
                  _builder.append("\t");
                  BusinessEntity relBe_7 = ((Multiple)ass_7).getEntity();
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("public void list");
                  String _name_148 = be.getName();
                  String _firstUpper_95 = StringExtensions.toFirstUpper(_name_148);
                  _builder.append(_firstUpper_95, "\t");
                  String _name_149 = relBe_7.getName();
                  String _firstUpper_96 = StringExtensions.toFirstUpper(_name_149);
                  _builder.append(_firstUpper_96, "\t");
                  _builder.append("(");
                  Attribute _iD_8 = DomainCodeUtilities.getID(be);
                  String _type_3 = DomainCodeUtilities.getType(_iD_8);
                  _builder.append(_type_3, "\t");
                  _builder.append(" ");
                  String _name_150 = be.getName();
                  String _lowerCase_61 = _name_150.toLowerCase();
                  _builder.append(_lowerCase_61, "\t");
                  _builder.append("ID) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("List<");
                  String _name_151 = relBe_7.getName();
                  String _firstUpper_97 = StringExtensions.toFirstUpper(_name_151);
                  _builder.append(_firstUpper_97, "\t\t");
                  _builder.append("TO> ");
                  String _name_152 = relBe_7.getName();
                  String _lowerCase_62 = _name_152.toLowerCase();
                  _builder.append(_lowerCase_62, "\t\t");
                  _builder.append("s = ");
                  String _name_153 = relBe_7.getName();
                  String _firstUpper_98 = StringExtensions.toFirstUpper(_name_153);
                  _builder.append(_firstUpper_98, "\t\t");
                  _builder.append("Controller.getInstance()");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append(".get");
                  String _name_154 = relBe_7.getName();
                  String _firstUpper_99 = StringExtensions.toFirstUpper(_name_154);
                  _builder.append(_firstUpper_99, "\t\t\t\t");
                  _builder.append("From");
                  String _name_155 = be.getName();
                  String _firstUpper_100 = StringExtensions.toFirstUpper(_name_155);
                  _builder.append(_firstUpper_100, "\t\t\t\t");
                  _builder.append("(");
                  String _name_156 = be.getName();
                  String _lowerCase_63 = _name_156.toLowerCase();
                  _builder.append(_lowerCase_63, "\t\t\t\t");
                  _builder.append("ID);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  String _name_157 = be.getName();
                  String _firstUpper_101 = StringExtensions.toFirstUpper(_name_157);
                  _builder.append(_firstUpper_101, "\t\t");
                  _builder.append("Form pF = Registry.get(");
                  String _name_158 = be.getName();
                  String _firstUpper_102 = StringExtensions.toFirstUpper(_name_158);
                  _builder.append(_firstUpper_102, "\t\t");
                  _builder.append("Form.ID);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("pF.getTable_");
                  _builder.append(pp, "\t\t");
                  _builder.append("().removeAllItems();");
                  _builder.newLineIfNotEmpty();
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("for (");
                  String _name_159 = relBe_7.getName();
                  String _firstUpper_103 = StringExtensions.toFirstUpper(_name_159);
                  _builder.append(_firstUpper_103, "\t\t");
                  _builder.append("TO to : ");
                  String _name_160 = relBe_7.getName();
                  String _lowerCase_64 = _name_160.toLowerCase();
                  _builder.append(_lowerCase_64, "\t\t");
                  _builder.append("s) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("Object data[] = { ");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  EList<Attribute> _attributes_1 = relBe_7.getAttributes();
                  int size = _attributes_1.size();
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  int c_1 = 0;
                  _builder.newLineIfNotEmpty();
                  {
                    EList<Attribute> _attributes_2 = relBe_7.getAttributes();
                    for(final Attribute a_2 : _attributes_2) {
                      {
                        if ((c_1 < (size - 1))) {
                          _builder.append("\t");
                          _builder.append("\t\t\t");
                          _builder.append("to.get");
                          String _name_161 = a_2.getName();
                          String _firstUpper_104 = StringExtensions.toFirstUpper(_name_161);
                          _builder.append(_firstUpper_104, "\t\t\t\t");
                          _builder.append("(), ");
                          _builder.newLineIfNotEmpty();
                        } else {
                          _builder.append("\t");
                          _builder.append("\t\t\t");
                          _builder.append("to.get");
                          String _name_162 = a_2.getName();
                          String _firstUpper_105 = StringExtensions.toFirstUpper(_name_162);
                          _builder.append(_firstUpper_105, "\t\t\t\t");
                          _builder.append("()");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      int sd = c_1++;
                      _builder.newLineIfNotEmpty();
                    }
                  }
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("};");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("pF.getTable_");
                  int _plusPlus_2 = pp++;
                  _builder.append(_plusPlus_2, "\t\t\t");
                  _builder.append("().addItem(data, to);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                }
              }
            }
          }
        }
      }
      _builder.append("\t");
      _builder.newLine();
      {
        EList<Contracts> _contracts_1 = be.getContracts();
        for(final Contracts c_2 : _contracts_1) {
          {
            boolean _isMaster_4 = DomainCodeUtilities.isMaster(be);
            if (_isMaster_4) {
              {
                if ((c_2 instanceof Create)) {
                  _builder.append("\t");
                  _builder.append("public void create");
                  String _name_163 = be.getName();
                  String _firstUpper_106 = StringExtensions.toFirstUpper(_name_163);
                  _builder.append(_firstUpper_106, "\t");
                  _builder.append("() {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  String _upperCase_11 = packageName.toUpperCase();
                  _builder.append(_upperCase_11, "\t\t");
                  _builder.append("UI ui = Registry.get(");
                  String _upperCase_12 = packageName.toUpperCase();
                  _builder.append(_upperCase_12, "\t\t");
                  _builder.append("UI.UI);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("try {");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("// String obtained from ClassName - MethodName");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  String _name_164 = be.getName();
                  String _firstUpper_107 = StringExtensions.toFirstUpper(_name_164);
                  String _plus_30 = (_firstUpper_107 + " - Create");
                  String _contribute2Template_4 = DomainCodeUtilities.contribute2Template(2, _plus_30);
                  _builder.append(_contribute2Template_4, "\t\t\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  String _name_165 = be.getName();
                  String _firstUpper_108 = StringExtensions.toFirstUpper(_name_165);
                  String _plus_31 = (_firstUpper_108 + " - Create");
                  DomainCodeUtilities.addService(_plus_31);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  String _name_166 = be.getName();
                  String _firstUpper_109 = StringExtensions.toFirstUpper(_name_166);
                  _builder.append(_firstUpper_109, "\t\t\t");
                  _builder.append("Form pF = Registry.get(");
                  String _name_167 = be.getName();
                  String _firstUpper_110 = StringExtensions.toFirstUpper(_name_167);
                  _builder.append(_firstUpper_110, "\t\t\t");
                  _builder.append("Form.ID);");
                  _builder.newLineIfNotEmpty();
                  {
                    EList<Attribute> _attributes_3 = be.getAttributes();
                    for(final Attribute a_3 : _attributes_3) {
                      {
                        String _type_4 = DomainCodeUtilities.getType(a_3);
                        boolean _equals_6 = _type_4.equals("Date");
                        if (_equals_6) {
                          _builder.append("\t\t\t");
                          String _type_5 = DomainCodeUtilities.getType(a_3);
                          _builder.append(_type_5, "\t\t\t");
                          _builder.append(" ");
                          String _name_168 = a_3.getName();
                          String _lowerCase_65 = _name_168.toLowerCase();
                          _builder.append(_lowerCase_65, "\t\t\t");
                          _builder.append(" = pF.getTxtD");
                          String _name_169 = a_3.getName();
                          String _firstUpper_111 = StringExtensions.toFirstUpper(_name_169);
                          _builder.append(_firstUpper_111, "\t\t\t");
                          _builder.append("().getValue();");
                          _builder.newLineIfNotEmpty();
                        } else {
                          {
                            String _type_6 = DomainCodeUtilities.getType(a_3);
                            boolean _equals_7 = _type_6.equals("int");
                            if (_equals_7) {
                              _builder.append("\t\t\t");
                              String _type_7 = DomainCodeUtilities.getType(a_3);
                              _builder.append(_type_7, "\t\t\t");
                              _builder.append(" ");
                              String _name_170 = a_3.getName();
                              String _lowerCase_66 = _name_170.toLowerCase();
                              _builder.append(_lowerCase_66, "\t\t\t");
                              _builder.append(" = Integer.parseInt(pF.getTxt");
                              String _name_171 = a_3.getName();
                              String _firstUpper_112 = StringExtensions.toFirstUpper(_name_171);
                              _builder.append(_firstUpper_112, "\t\t\t");
                              _builder.append("().getValue());");
                              _builder.newLineIfNotEmpty();
                            } else {
                              _builder.append("\t\t\t");
                              String _type_8 = DomainCodeUtilities.getType(a_3);
                              _builder.append(_type_8, "\t\t\t");
                              _builder.append(" ");
                              String _name_172 = a_3.getName();
                              String _lowerCase_67 = _name_172.toLowerCase();
                              _builder.append(_lowerCase_67, "\t\t\t");
                              _builder.append(" = pF.getTxt");
                              String _name_173 = a_3.getName();
                              String _firstUpper_113 = StringExtensions.toFirstUpper(_name_173);
                              _builder.append(_firstUpper_113, "\t\t\t");
                              _builder.append("().getValue();");
                              _builder.newLineIfNotEmpty();
                            }
                          }
                        }
                      }
                    }
                  }
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("if (");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  int c1 = 0;
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  List<Attribute> atts = new ArrayList<Attribute>();
                  _builder.newLineIfNotEmpty();
                  {
                    EList<Attribute> _attributes_4 = be.getAttributes();
                    for(final Attribute a_4 : _attributes_4) {
                      {
                        boolean _or = false;
                        String _type_9 = DomainCodeUtilities.getType(a_4);
                        boolean _equals_8 = _type_9.equals("Date");
                        if (_equals_8) {
                          _or = true;
                        } else {
                          String _type_10 = DomainCodeUtilities.getType(a_4);
                          boolean _equals_9 = _type_10.equals("String");
                          _or = _equals_9;
                        }
                        if (_or) {
                          _builder.append("\t\t\t");
                          boolean add = atts.add(a_4);
                          _builder.newLineIfNotEmpty();
                        }
                      }
                    }
                  }
                  _builder.append("\t\t\t");
                  int l1 = atts.size();
                  _builder.newLineIfNotEmpty();
                  {
                    for(final Attribute a_5 : atts) {
                      {
                        String _type_11 = DomainCodeUtilities.getType(a_5);
                        boolean _equals_10 = _type_11.equals("Date");
                        if (_equals_10) {
                          _builder.append("\t\t\t");
                          String _name_174 = a_5.getName();
                          String _lowerCase_68 = _name_174.toLowerCase();
                          _builder.append(_lowerCase_68, "\t\t\t");
                          _builder.append(" != null");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                      {
                        String _type_12 = DomainCodeUtilities.getType(a_5);
                        boolean _equals_11 = _type_12.equals("String");
                        if (_equals_11) {
                          _builder.append("\t\t\t");
                          String _name_175 = a_5.getName();
                          String _lowerCase_69 = _name_175.toLowerCase();
                          _builder.append(_lowerCase_69, "\t\t\t");
                          _builder.append(" != null && !");
                          String _name_176 = a_5.getName();
                          String _lowerCase_70 = _name_176.toLowerCase();
                          _builder.append(_lowerCase_70, "\t\t\t");
                          _builder.append(".equals(\"\")");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                      {
                        boolean _and_2 = false;
                        boolean _or_1 = false;
                        String _type_13 = DomainCodeUtilities.getType(a_5);
                        boolean _equals_12 = _type_13.equals("Date");
                        if (_equals_12) {
                          _or_1 = true;
                        } else {
                          String _type_14 = DomainCodeUtilities.getType(a_5);
                          boolean _equals_13 = _type_14.equals("String");
                          _or_1 = _equals_13;
                        }
                        if (!_or_1) {
                          _and_2 = false;
                        } else {
                          _and_2 = (c1 < (l1 - 1));
                        }
                        if (_and_2) {
                          _builder.append("\t\t\t");
                          _builder.append("&&");
                          _builder.newLine();
                        }
                      }
                      _builder.append("\t\t\t");
                      int ff = c1++;
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t");
                    }
                  }
                  _builder.append(") {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t");
                  String _name_177 = be.getName();
                  String _firstUpper_114 = StringExtensions.toFirstUpper(_name_177);
                  _builder.append(_firstUpper_114, "\t\t\t\t");
                  _builder.append("TO ");
                  String _name_178 = be.getName();
                  String _lowerCase_71 = _name_178.toLowerCase();
                  _builder.append(_lowerCase_71, "\t\t\t\t");
                  _builder.append(" = new ");
                  String _name_179 = be.getName();
                  String _firstUpper_115 = StringExtensions.toFirstUpper(_name_179);
                  _builder.append(_firstUpper_115, "\t\t\t\t");
                  _builder.append("TO();");
                  _builder.newLineIfNotEmpty();
                  {
                    EList<Attribute> _attributes_5 = be.getAttributes();
                    for(final Attribute a_6 : _attributes_5) {
                      _builder.append("\t\t\t\t");
                      String _name_180 = be.getName();
                      String _lowerCase_72 = _name_180.toLowerCase();
                      _builder.append(_lowerCase_72, "\t\t\t\t");
                      _builder.append(".set");
                      String _name_181 = a_6.getName();
                      String _firstUpper_116 = StringExtensions.toFirstUpper(_name_181);
                      _builder.append(_firstUpper_116, "\t\t\t\t");
                      _builder.append("(");
                      String _name_182 = a_6.getName();
                      String _lowerCase_73 = _name_182.toLowerCase();
                      _builder.append(_lowerCase_73, "\t\t\t\t");
                      _builder.append(");");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                  _builder.newLine();
                  _builder.append("\t\t\t\t");
                  _builder.append("if (");
                  String _name_183 = be.getName();
                  String _lowerCase_74 = _name_183.toLowerCase();
                  _builder.append(_lowerCase_74, "\t\t\t\t");
                  _builder.append("Manager.create");
                  String _name_184 = be.getName();
                  String _firstUpper_117 = StringExtensions.toFirstUpper(_name_184);
                  _builder.append(_firstUpper_117, "\t\t\t\t");
                  _builder.append("(");
                  String _name_185 = be.getName();
                  String _lowerCase_75 = _name_185.toLowerCase();
                  _builder.append(_lowerCase_75, "\t\t\t\t");
                  _builder.append(")) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_13 = packageName.toUpperCase();
                  _builder.append(_upperCase_13, "\t\t\t\t\t");
                  _builder.append("UI.MSG_NOT,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t\t\t");
                  _builder.append("\"Creation process executed successfully\");");
                  _builder.newLine();
                  _builder.append("\t\t\t\t\t");
                  List<Contracts> _contract_10 = DomainCodeUtilities.getContract(be, ListAll.class);
                  Contracts conListAll_1 = _contract_10.get(0);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t");
                  String con_5 = DomainCodeUtilities.contribute2Template(1, conListAll_1, be, Integer.valueOf(0));
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t");
                  int _indexOf_3 = con_5.indexOf(" ");
                  int _plus_32 = (_indexOf_3 + 1);
                  String con1_1 = con_5.substring(_plus_32);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t");
                  int _indexOf_4 = con1_1.indexOf(" ");
                  int _plus_33 = (_indexOf_4 + 1);
                  String con2_1 = con1_1.substring(_plus_33);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t");
                  int _indexOf_5 = con2_1.indexOf(")");
                  int _plus_34 = (_indexOf_5 + 1);
                  String con3_1 = con2_1.substring(0, _plus_34);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t");
                  _builder.newLine();
                  _builder.append("\t\t\t\t\t");
                  String _removeAttributeContracts_1 = DomainCodeUtilities.removeAttributeContracts(con3_1);
                  _builder.append(_removeAttributeContracts_1, "\t\t\t\t\t");
                  _builder.append(";");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t");
                  String _name_186 = be.getName();
                  String _firstUpper_118 = StringExtensions.toFirstUpper(_name_186);
                  _builder.append(_firstUpper_118, "\t\t\t\t\t");
                  _builder.append("Form ");
                  String _name_187 = be.getName();
                  String _lowerCase_76 = _name_187.toLowerCase();
                  _builder.append(_lowerCase_76, "\t\t\t\t\t");
                  _builder.append("Form = Registry.get(");
                  String _name_188 = be.getName();
                  String _firstUpper_119 = StringExtensions.toFirstUpper(_name_188);
                  _builder.append(_firstUpper_119, "\t\t\t\t\t");
                  _builder.append("Form.ID);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t");
                  String _name_189 = be.getName();
                  String _lowerCase_77 = _name_189.toLowerCase();
                  _builder.append(_lowerCase_77, "\t\t\t\t\t");
                  _builder.append("Form.clearFormFields();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t");
                  _builder.append("} else");
                  _builder.newLine();
                  _builder.append("\t\t\t\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_14 = packageName.toUpperCase();
                  _builder.append(_upperCase_14, "\t\t\t\t\t");
                  _builder.append("UI.MSG_ERR,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t\t\t");
                  _builder.append("\"Creation process failed\");");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("} else");
                  _builder.newLine();
                  _builder.append("\t\t\t\t");
                  _builder.append("((");
                  String _upperCase_15 = packageName.toUpperCase();
                  _builder.append(_upperCase_15, "\t\t\t\t");
                  _builder.append("UI) Registry.get(");
                  String _upperCase_16 = packageName.toUpperCase();
                  _builder.append(_upperCase_16, "\t\t\t\t");
                  _builder.append("UI.UI))");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t\t");
                  _builder.append(".showNotification(");
                  String _upperCase_17 = packageName.toUpperCase();
                  _builder.append(_upperCase_17, "\t\t\t\t\t\t");
                  _builder.append("UI.MSG_ERR,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t\t\t\t");
                  _builder.append("\"Please fill in all required fields (*)\");");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("} catch (Exception e) {");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_18 = packageName.toUpperCase();
                  _builder.append(_upperCase_18, "\t\t\t");
                  _builder.append("UI.MSG_ERR, e.getMessage());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                }
              }
              {
                if ((c_2 instanceof Update)) {
                  _builder.append("\t");
                  _builder.append("public void update");
                  String _name_190 = be.getName();
                  String _firstUpper_120 = StringExtensions.toFirstUpper(_name_190);
                  _builder.append(_firstUpper_120, "\t");
                  _builder.append("() {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  String _upperCase_19 = packageName.toUpperCase();
                  _builder.append(_upperCase_19, "\t\t");
                  _builder.append("UI ui = Registry.get(");
                  String _upperCase_20 = packageName.toUpperCase();
                  _builder.append(_upperCase_20, "\t\t");
                  _builder.append("UI.UI);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("try {");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("// String obtained from ClassName - MethodName");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  String _name_191 = be.getName();
                  String _firstUpper_121 = StringExtensions.toFirstUpper(_name_191);
                  String _plus_35 = (_firstUpper_121 + " - Update");
                  String _contribute2Template_5 = DomainCodeUtilities.contribute2Template(2, _plus_35);
                  _builder.append(_contribute2Template_5, "\t\t\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  String _name_192 = be.getName();
                  String _firstUpper_122 = StringExtensions.toFirstUpper(_name_192);
                  String _plus_36 = (_firstUpper_122 + " - Update");
                  DomainCodeUtilities.addService(_plus_36);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  String _name_193 = be.getName();
                  String _firstUpper_123 = StringExtensions.toFirstUpper(_name_193);
                  _builder.append(_firstUpper_123, "\t\t\t");
                  _builder.append("Form pF = Registry.get(");
                  String _name_194 = be.getName();
                  String _firstUpper_124 = StringExtensions.toFirstUpper(_name_194);
                  _builder.append(_firstUpper_124, "\t\t\t");
                  _builder.append("Form.ID);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  String _name_195 = be.getName();
                  String _firstUpper_125 = StringExtensions.toFirstUpper(_name_195);
                  _builder.append(_firstUpper_125, "\t\t\t");
                  _builder.append("TO ");
                  String _name_196 = be.getName();
                  String _lowerCase_78 = _name_196.toLowerCase();
                  _builder.append(_lowerCase_78, "\t\t\t");
                  _builder.append(" = (");
                  String _name_197 = be.getName();
                  String _firstUpper_126 = StringExtensions.toFirstUpper(_name_197);
                  _builder.append(_firstUpper_126, "\t\t\t");
                  _builder.append("TO) pF.getTable_1().getValue();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("if (");
                  String _name_198 = be.getName();
                  String _lowerCase_79 = _name_198.toLowerCase();
                  _builder.append(_lowerCase_79, "\t\t\t");
                  _builder.append(" != null) {");
                  _builder.newLineIfNotEmpty();
                  {
                    EList<Attribute> _attributes_6 = be.getAttributes();
                    for(final Attribute a_7 : _attributes_6) {
                      {
                        String _type_15 = DomainCodeUtilities.getType(a_7);
                        boolean _equals_14 = _type_15.equals("Date");
                        if (_equals_14) {
                          _builder.append("\t\t\t\t");
                          String _name_199 = be.getName();
                          String _lowerCase_80 = _name_199.toLowerCase();
                          _builder.append(_lowerCase_80, "\t\t\t\t");
                          _builder.append(".set");
                          String _name_200 = a_7.getName();
                          String _firstUpper_127 = StringExtensions.toFirstUpper(_name_200);
                          _builder.append(_firstUpper_127, "\t\t\t\t");
                          _builder.append("(pF.getTxtD");
                          String _name_201 = a_7.getName();
                          String _firstUpper_128 = StringExtensions.toFirstUpper(_name_201);
                          _builder.append(_firstUpper_128, "\t\t\t\t");
                          _builder.append("().getValue());");
                          _builder.newLineIfNotEmpty();
                        } else {
                          {
                            String _type_16 = DomainCodeUtilities.getType(a_7);
                            boolean _equals_15 = _type_16.equals("int");
                            if (_equals_15) {
                              _builder.append("\t\t\t\t");
                              String _name_202 = be.getName();
                              String _lowerCase_81 = _name_202.toLowerCase();
                              _builder.append(_lowerCase_81, "\t\t\t\t");
                              _builder.append(".set");
                              String _name_203 = a_7.getName();
                              String _firstUpper_129 = StringExtensions.toFirstUpper(_name_203);
                              _builder.append(_firstUpper_129, "\t\t\t\t");
                              _builder.append("(Integer.parseInt(pF.getTxt");
                              String _name_204 = a_7.getName();
                              String _firstUpper_130 = StringExtensions.toFirstUpper(_name_204);
                              _builder.append(_firstUpper_130, "\t\t\t\t");
                              _builder.append("().getValue()));");
                              _builder.newLineIfNotEmpty();
                            } else {
                              _builder.append("\t\t\t\t");
                              String _name_205 = be.getName();
                              String _lowerCase_82 = _name_205.toLowerCase();
                              _builder.append(_lowerCase_82, "\t\t\t\t");
                              _builder.append(".set");
                              String _name_206 = a_7.getName();
                              String _firstUpper_131 = StringExtensions.toFirstUpper(_name_206);
                              _builder.append(_firstUpper_131, "\t\t\t\t");
                              _builder.append("(pF.getTxt");
                              String _name_207 = a_7.getName();
                              String _firstUpper_132 = StringExtensions.toFirstUpper(_name_207);
                              _builder.append(_firstUpper_132, "\t\t\t\t");
                              _builder.append("().getValue());");
                              _builder.newLineIfNotEmpty();
                            }
                          }
                        }
                      }
                    }
                  }
                  _builder.newLine();
                  _builder.append("\t\t\t\t");
                  _builder.append("if (");
                  String _name_208 = be.getName();
                  String _lowerCase_83 = _name_208.toLowerCase();
                  _builder.append(_lowerCase_83, "\t\t\t\t");
                  _builder.append("Manager.update");
                  String _name_209 = be.getName();
                  String _firstUpper_133 = StringExtensions.toFirstUpper(_name_209);
                  _builder.append(_firstUpper_133, "\t\t\t\t");
                  _builder.append("(");
                  String _name_210 = be.getName();
                  String _lowerCase_84 = _name_210.toLowerCase();
                  _builder.append(_lowerCase_84, "\t\t\t\t");
                  _builder.append("))");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_21 = packageName.toUpperCase();
                  _builder.append(_upperCase_21, "\t\t\t\t\t");
                  _builder.append("UI.MSG_NOT,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t\t\t");
                  _builder.append("\"Updating process executed successfully\");");
                  _builder.newLine();
                  _builder.append("\t\t\t\t");
                  _builder.append("else");
                  _builder.newLine();
                  _builder.append("\t\t\t\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_22 = packageName.toUpperCase();
                  _builder.append(_upperCase_22, "\t\t\t\t\t");
                  _builder.append("UI.MSG_ERR,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t\t\t");
                  _builder.append("\"Updating process failed\");");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("} else");
                  _builder.newLine();
                  _builder.append("\t\t\t\t");
                  _builder.append("((");
                  String _upperCase_23 = packageName.toUpperCase();
                  _builder.append(_upperCase_23, "\t\t\t\t");
                  _builder.append("UI) Registry.get(");
                  String _upperCase_24 = packageName.toUpperCase();
                  _builder.append(_upperCase_24, "\t\t\t\t");
                  _builder.append("UI.UI)).showNotification(");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t\t");
                  String _upperCase_25 = packageName.toUpperCase();
                  _builder.append(_upperCase_25, "\t\t\t\t\t\t");
                  _builder.append("UI.MSG_ERR, \"Please select a ");
                  String _name_211 = be.getName();
                  String _lowerCase_85 = _name_211.toLowerCase();
                  _builder.append(_lowerCase_85, "\t\t\t\t\t\t");
                  _builder.append(" to update\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("} catch (Exception e) {");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_26 = packageName.toUpperCase();
                  _builder.append(_upperCase_26, "\t\t\t");
                  _builder.append("UI.MSG_ERR, e.getMessage());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                }
              }
              {
                if ((c_2 instanceof Delete)) {
                  _builder.append("\t");
                  _builder.append("public void delete");
                  String _name_212 = be.getName();
                  String _firstUpper_134 = StringExtensions.toFirstUpper(_name_212);
                  _builder.append(_firstUpper_134, "\t");
                  _builder.append("() {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  String _upperCase_27 = packageName.toUpperCase();
                  _builder.append(_upperCase_27, "\t\t");
                  _builder.append("UI ui = Registry.get(");
                  String _upperCase_28 = packageName.toUpperCase();
                  _builder.append(_upperCase_28, "\t\t");
                  _builder.append("UI.UI);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("try {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("// String obtained from ClassName - MethodName");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  String _name_213 = be.getName();
                  String _firstUpper_135 = StringExtensions.toFirstUpper(_name_213);
                  String _plus_37 = (_firstUpper_135 + " - Delete");
                  String _contribute2Template_6 = DomainCodeUtilities.contribute2Template(2, _plus_37);
                  _builder.append(_contribute2Template_6, "\t\t\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  String _name_214 = be.getName();
                  String _firstUpper_136 = StringExtensions.toFirstUpper(_name_214);
                  String _plus_38 = (_firstUpper_136 + " - Delete");
                  DomainCodeUtilities.addService(_plus_38);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  String _name_215 = be.getName();
                  String _firstUpper_137 = StringExtensions.toFirstUpper(_name_215);
                  _builder.append(_firstUpper_137, "\t\t\t");
                  _builder.append("Form pF = Registry.get(");
                  String _name_216 = be.getName();
                  String _firstUpper_138 = StringExtensions.toFirstUpper(_name_216);
                  _builder.append(_firstUpper_138, "\t\t\t");
                  _builder.append("Form.ID);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  String _name_217 = be.getName();
                  String _firstUpper_139 = StringExtensions.toFirstUpper(_name_217);
                  _builder.append(_firstUpper_139, "\t\t\t");
                  _builder.append("TO ");
                  String _name_218 = be.getName();
                  String _lowerCase_86 = _name_218.toLowerCase();
                  _builder.append(_lowerCase_86, "\t\t\t");
                  _builder.append(" = (");
                  String _name_219 = be.getName();
                  String _firstUpper_140 = StringExtensions.toFirstUpper(_name_219);
                  _builder.append(_firstUpper_140, "\t\t\t");
                  _builder.append("TO) pF.getTable_1().getValue();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("if (");
                  String _name_220 = be.getName();
                  String _lowerCase_87 = _name_220.toLowerCase();
                  _builder.append(_lowerCase_87, "\t\t\t");
                  _builder.append(" != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("if (");
                  String _name_221 = be.getName();
                  String _lowerCase_88 = _name_221.toLowerCase();
                  _builder.append(_lowerCase_88, "\t\t\t\t");
                  _builder.append("Manager.delete");
                  String _name_222 = be.getName();
                  String _firstUpper_141 = StringExtensions.toFirstUpper(_name_222);
                  _builder.append(_firstUpper_141, "\t\t\t\t");
                  _builder.append("(");
                  String _name_223 = be.getName();
                  String _lowerCase_89 = _name_223.toLowerCase();
                  _builder.append(_lowerCase_89, "\t\t\t\t");
                  _builder.append(")) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_29 = packageName.toUpperCase();
                  _builder.append(_upperCase_29, "\t\t\t\t\t");
                  _builder.append("UI.MSG_NOT,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t\t");
                  _builder.append("\"Delete process executed successfully\");");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  List<Contracts> _contract_11 = DomainCodeUtilities.getContract(be, ListAll.class);
                  Contracts conListAll_2 = _contract_11.get(0);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  String con_6 = DomainCodeUtilities.contribute2Template(1, conListAll_2, be, Integer.valueOf(0));
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  int _indexOf_6 = con_6.indexOf(" ");
                  int _plus_39 = (_indexOf_6 + 1);
                  String con1_2 = con_6.substring(_plus_39);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  int _indexOf_7 = con1_2.indexOf(" ");
                  int _plus_40 = (_indexOf_7 + 1);
                  String con2_2 = con1_2.substring(_plus_40);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  int _indexOf_8 = con2_2.indexOf(")");
                  int _plus_41 = (_indexOf_8 + 1);
                  String con3_2 = con2_2.substring(0, _plus_41);
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  String _removeAttributeContracts_2 = DomainCodeUtilities.removeAttributeContracts(con3_2);
                  _builder.append(_removeAttributeContracts_2, "\t\t\t\t\t");
                  _builder.append(";");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  String _name_224 = be.getName();
                  String _firstUpper_142 = StringExtensions.toFirstUpper(_name_224);
                  _builder.append(_firstUpper_142, "\t\t\t\t\t");
                  _builder.append("Form ");
                  String _name_225 = be.getName();
                  String _lowerCase_90 = _name_225.toLowerCase();
                  _builder.append(_lowerCase_90, "\t\t\t\t\t");
                  _builder.append("Form = Registry.get(");
                  String _name_226 = be.getName();
                  String _firstUpper_143 = StringExtensions.toFirstUpper(_name_226);
                  _builder.append(_firstUpper_143, "\t\t\t\t\t");
                  _builder.append("Form.ID);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  String _name_227 = be.getName();
                  String _lowerCase_91 = _name_227.toLowerCase();
                  _builder.append(_lowerCase_91, "\t\t\t\t\t");
                  _builder.append("Form.clearFormFields();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("} else");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_30 = packageName.toUpperCase();
                  _builder.append(_upperCase_30, "\t\t\t\t\t");
                  _builder.append("UI.MSG_ERR, \"Delete process failed\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("} else");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("((");
                  String _upperCase_31 = packageName.toUpperCase();
                  _builder.append(_upperCase_31, "\t\t\t\t");
                  _builder.append("UI) Registry.get(");
                  String _upperCase_32 = packageName.toUpperCase();
                  _builder.append(_upperCase_32, "\t\t\t\t");
                  _builder.append("UI.UI)).showNotification(");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  String _upperCase_33 = packageName.toUpperCase();
                  _builder.append(_upperCase_33, "\t\t\t\t\t\t");
                  _builder.append("UI.MSG_ERR, \"Please select a ");
                  String _name_228 = be.getName();
                  String _lowerCase_92 = _name_228.toLowerCase();
                  _builder.append(_lowerCase_92, "\t\t\t\t\t\t");
                  _builder.append(" to delete\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("} catch (Exception e) {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_34 = packageName.toUpperCase();
                  _builder.append(_upperCase_34, "\t\t\t");
                  _builder.append("UI.MSG_ERR, e.getMessage());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                }
              }
              {
                if ((c_2 instanceof AddElement)) {
                  _builder.append("\t");
                  Multiple _association_4 = ((ContractElements) c_2).getAssociation();
                  final BusinessEntity relatedEntity = _association_4.getEntity();
                  _builder.newLineIfNotEmpty();
                  {
                    boolean _hasZeroAssociations_3 = DomainCodeUtilities.hasZeroAssociations(relatedEntity);
                    boolean _not_5 = (!_hasZeroAssociations_3);
                    if (_not_5) {
                      _builder.append("\t");
                      Attribute _iD_9 = DomainCodeUtilities.getID(be);
                      DataType _dataType_2 = _iD_9.getDataType();
                      final String type_2 = _dataType_2.getLiteral();
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("public boolean ");
                      String _name_229 = ((ContractElements) c_2).getName();
                      _builder.append(_name_229, "\t");
                      _builder.append("(");
                      String _name_230 = relatedEntity.getName();
                      _builder.append(_name_230, "\t");
                      _builder.append("TO ");
                      String _name_231 = relatedEntity.getName();
                      String _lowerCase_93 = _name_231.toLowerCase();
                      _builder.append(_lowerCase_93, "\t");
                      _builder.append(", ");
                      String _type_17 = DomainCodeUtilities.getType(type_2);
                      _builder.append(_type_17, "\t");
                      _builder.append(" ");
                      String _name_232 = be.getName();
                      String _lowerCase_94 = _name_232.toLowerCase();
                      _builder.append(_lowerCase_94, "\t");
                      Attribute _iD_10 = DomainCodeUtilities.getID(be);
                      String _name_233 = _iD_10.getName();
                      String _firstUpper_144 = StringExtensions.toFirstUpper(_name_233);
                      _builder.append(_firstUpper_144, "\t");
                      _builder.append(") {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      String _upperCase_35 = packageName.toUpperCase();
                      _builder.append(_upperCase_35, "\t\t");
                      _builder.append("UI ui = Registry.get(");
                      String _upperCase_36 = packageName.toUpperCase();
                      _builder.append(_upperCase_36, "\t\t");
                      _builder.append("UI.UI);");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("try {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("if (");
                      String _name_234 = be.getName();
                      String _lowerCase_95 = _name_234.toLowerCase();
                      _builder.append(_lowerCase_95, "\t\t\t");
                      _builder.append("Manager.");
                      String _name_235 = ((ContractElements) c_2).getName();
                      _builder.append(_name_235, "\t\t\t");
                      _builder.append("(");
                      String _name_236 = relatedEntity.getName();
                      String _lowerCase_96 = _name_236.toLowerCase();
                      _builder.append(_lowerCase_96, "\t\t\t");
                      _builder.append(", ");
                      String _name_237 = be.getName();
                      String _lowerCase_97 = _name_237.toLowerCase();
                      _builder.append(_lowerCase_97, "\t\t\t");
                      Attribute _iD_11 = DomainCodeUtilities.getID(be);
                      String _name_238 = _iD_11.getName();
                      String _firstUpper_145 = StringExtensions.toFirstUpper(_name_238);
                      _builder.append(_firstUpper_145, "\t\t\t");
                      _builder.append(")) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("ui.showNotification(");
                      String _upperCase_37 = packageName.toUpperCase();
                      _builder.append(_upperCase_37, "\t\t\t\t");
                      _builder.append("UI.MSG_NOT, \"");
                      String _name_239 = relatedEntity.getName();
                      String _firstUpper_146 = StringExtensions.toFirstUpper(_name_239);
                      _builder.append(_firstUpper_146, "\t\t\t\t");
                      _builder.append(" \" + ");
                      String _name_240 = relatedEntity.getName();
                      String _lowerCase_98 = _name_240.toLowerCase();
                      _builder.append(_lowerCase_98, "\t\t\t\t");
                      _builder.append(".get");
                      Attribute _iD_12 = DomainCodeUtilities.getID(relatedEntity);
                      String _name_241 = _iD_12.getName();
                      String _firstUpper_147 = StringExtensions.toFirstUpper(_name_241);
                      _builder.append(_firstUpper_147, "\t\t\t\t");
                      _builder.append("()");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t\t\t");
                      _builder.append("+ \" added to ");
                      String _name_242 = be.getName();
                      String _firstUpper_148 = StringExtensions.toFirstUpper(_name_242);
                      _builder.append(_firstUpper_148, "\t\t\t\t\t\t");
                      _builder.append(" \" + ");
                      String _name_243 = be.getName();
                      String _lowerCase_99 = _name_243.toLowerCase();
                      _builder.append(_lowerCase_99, "\t\t\t\t\t\t");
                      Attribute _iD_13 = DomainCodeUtilities.getID(be);
                      String _name_244 = _iD_13.getName();
                      String _firstUpper_149 = StringExtensions.toFirstUpper(_name_244);
                      _builder.append(_firstUpper_149, "\t\t\t\t\t\t");
                      _builder.append(");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("ui.closeSubWindow();");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("list");
                      String _name_245 = be.getName();
                      String _firstUpper_150 = StringExtensions.toFirstUpper(_name_245);
                      _builder.append(_firstUpper_150, "\t\t\t\t");
                      String _name_246 = relatedEntity.getName();
                      String _firstUpper_151 = StringExtensions.toFirstUpper(_name_246);
                      _builder.append(_firstUpper_151, "\t\t\t\t");
                      _builder.append("(");
                      String _name_247 = be.getName();
                      String _lowerCase_100 = _name_247.toLowerCase();
                      _builder.append(_lowerCase_100, "\t\t\t\t");
                      Attribute _iD_14 = DomainCodeUtilities.getID(be);
                      String _name_248 = _iD_14.getName();
                      String _firstUpper_152 = StringExtensions.toFirstUpper(_name_248);
                      _builder.append(_firstUpper_152, "\t\t\t\t");
                      _builder.append(");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("return true;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("} else {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("ui.showNotification(");
                      String _upperCase_38 = packageName.toUpperCase();
                      _builder.append(_upperCase_38, "\t\t\t\t");
                      _builder.append("UI.MSG_ERR,");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t\t\t");
                      _builder.append("\"");
                      String _name_249 = relatedEntity.getName();
                      String _firstUpper_153 = StringExtensions.toFirstUpper(_name_249);
                      _builder.append(_firstUpper_153, "\t\t\t\t\t\t");
                      _builder.append(" cannot be added to ");
                      String _name_250 = be.getName();
                      String _lowerCase_101 = _name_250.toLowerCase();
                      _builder.append(_lowerCase_101, "\t\t\t\t\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("return false;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("} catch (Exception e) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("ui.showNotification(");
                      String _upperCase_39 = packageName.toUpperCase();
                      _builder.append(_upperCase_39, "\t\t\t");
                      _builder.append("UI.MSG_ERR, e.getMessage());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("return false;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                    }
                  }
                }
              }
              {
                if ((c_2 instanceof DeleteElement)) {
                  _builder.append("\t");
                  Multiple _association_5 = ((ContractElements) c_2).getAssociation();
                  final BusinessEntity relatedEntity_1 = _association_5.getEntity();
                  _builder.newLineIfNotEmpty();
                  {
                    boolean _and_3 = false;
                    boolean _isMaster_5 = DomainCodeUtilities.isMaster(relatedEntity_1);
                    if (!_isMaster_5) {
                      _and_3 = false;
                    } else {
                      List<Association> _detailMultipleAssociations_4 = DomainCodeUtilities.getDetailMultipleAssociations(relatedEntity_1, associations);
                      boolean _notEquals_1 = (!Objects.equal(_detailMultipleAssociations_4, null));
                      _and_3 = _notEquals_1;
                    }
                    if (_and_3) {
                      _builder.append("\t");
                      _builder.append("public void ");
                      String _name_251 = ((ContractElements) c_2).getName();
                      _builder.append(_name_251, "\t");
                      _builder.append("(");
                      String _upperCase_40 = packageName.toUpperCase();
                      _builder.append(_upperCase_40, "\t");
                      _builder.append("UI ui, ");
                      String _name_252 = be.getName();
                      String _firstUpper_154 = StringExtensions.toFirstUpper(_name_252);
                      _builder.append(_firstUpper_154, "\t");
                      _builder.append("TO ");
                      String _name_253 = be.getName();
                      String _lowerCase_102 = _name_253.toLowerCase();
                      _builder.append(_lowerCase_102, "\t");
                      _builder.append(", ");
                      String _name_254 = relatedEntity_1.getName();
                      _builder.append(_name_254, "\t");
                      _builder.append("TO ");
                      String _name_255 = relatedEntity_1.getName();
                      String _lowerCase_103 = _name_255.toLowerCase();
                      _builder.append(_lowerCase_103, "\t");
                      _builder.append(") {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("try {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("if (");
                      String _name_256 = be.getName();
                      String _lowerCase_104 = _name_256.toLowerCase();
                      _builder.append(_lowerCase_104, "\t\t\t");
                      _builder.append("Manager.remove");
                      String _name_257 = relatedEntity_1.getName();
                      String _firstUpper_155 = StringExtensions.toFirstUpper(_name_257);
                      _builder.append(_firstUpper_155, "\t\t\t");
                      _builder.append("From");
                      String _name_258 = be.getName();
                      String _firstUpper_156 = StringExtensions.toFirstUpper(_name_258);
                      _builder.append(_firstUpper_156, "\t\t\t");
                      _builder.append("(");
                      String _name_259 = relatedEntity_1.getName();
                      String _lowerCase_105 = _name_259.toLowerCase();
                      _builder.append(_lowerCase_105, "\t\t\t");
                      _builder.append(", ");
                      String _name_260 = be.getName();
                      String _lowerCase_106 = _name_260.toLowerCase();
                      _builder.append(_lowerCase_106, "\t\t\t");
                      _builder.append(".get");
                      Attribute _iD_15 = DomainCodeUtilities.getID(be);
                      String _name_261 = _iD_15.getName();
                      String _firstUpper_157 = StringExtensions.toFirstUpper(_name_261);
                      _builder.append(_firstUpper_157, "\t\t\t");
                      _builder.append("())) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("ui.showNotification(");
                      String _upperCase_41 = packageName.toUpperCase();
                      _builder.append(_upperCase_41, "\t\t\t\t");
                      _builder.append("UI.MSG_NOT, \"");
                      String _name_262 = relatedEntity_1.getName();
                      String _firstUpper_158 = StringExtensions.toFirstUpper(_name_262);
                      _builder.append(_firstUpper_158, "\t\t\t\t");
                      _builder.append(" \" + ");
                      String _name_263 = relatedEntity_1.getName();
                      String _lowerCase_107 = _name_263.toLowerCase();
                      _builder.append(_lowerCase_107, "\t\t\t\t");
                      _builder.append(".get");
                      Attribute _iD_16 = DomainCodeUtilities.getID(relatedEntity_1);
                      String _name_264 = _iD_16.getName();
                      String _firstUpper_159 = StringExtensions.toFirstUpper(_name_264);
                      _builder.append(_firstUpper_159, "\t\t\t\t");
                      _builder.append("()");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t\t");
                      _builder.append("+ \" removed from ");
                      String _name_265 = be.getName();
                      String _firstUpper_160 = StringExtensions.toFirstUpper(_name_265);
                      _builder.append(_firstUpper_160, "\t\t\t\t\t");
                      _builder.append(" \" + ");
                      String _name_266 = be.getName();
                      String _lowerCase_108 = _name_266.toLowerCase();
                      _builder.append(_lowerCase_108, "\t\t\t\t\t");
                      _builder.append(".get");
                      Attribute _iD_17 = DomainCodeUtilities.getID(be);
                      String _name_267 = _iD_17.getName();
                      String _firstUpper_161 = StringExtensions.toFirstUpper(_name_267);
                      _builder.append(_firstUpper_161, "\t\t\t\t\t");
                      _builder.append("());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("ui.closeSubWindow();");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("list");
                      String _name_268 = be.getName();
                      String _firstUpper_162 = StringExtensions.toFirstUpper(_name_268);
                      _builder.append(_firstUpper_162, "\t\t\t");
                      String _name_269 = relatedEntity_1.getName();
                      String _firstUpper_163 = StringExtensions.toFirstUpper(_name_269);
                      _builder.append(_firstUpper_163, "\t\t\t");
                      _builder.append("(");
                      String _name_270 = be.getName();
                      String _lowerCase_109 = _name_270.toLowerCase();
                      _builder.append(_lowerCase_109, "\t\t\t");
                      _builder.append(".get");
                      Attribute _iD_18 = DomainCodeUtilities.getID(be);
                      String _name_271 = _iD_18.getName();
                      String _firstUpper_164 = StringExtensions.toFirstUpper(_name_271);
                      _builder.append(_firstUpper_164, "\t\t\t");
                      _builder.append("());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("} else {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("ui.showNotification(");
                      String _upperCase_42 = packageName.toUpperCase();
                      _builder.append(_upperCase_42, "\t\t\t");
                      _builder.append("UI.MSG_ERR,");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t\t");
                      _builder.append("\"");
                      String _name_272 = relatedEntity_1.getName();
                      String _firstUpper_165 = StringExtensions.toFirstUpper(_name_272);
                      _builder.append(_firstUpper_165, "\t\t\t\t\t");
                      _builder.append(" cannot be removed from ");
                      String _name_273 = be.getName();
                      String _lowerCase_110 = _name_273.toLowerCase();
                      _builder.append(_lowerCase_110, "\t\t\t\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("} catch (Exception e) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("ui.showNotification(");
                      String _upperCase_43 = packageName.toUpperCase();
                      _builder.append(_upperCase_43, "\t\t");
                      _builder.append("UI.MSG_ERR, e.getMessage());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                    } else {
                      _builder.append("\t");
                      _builder.append("public void ");
                      String _name_274 = ((ContractElements) c_2).getName();
                      _builder.append(_name_274, "\t");
                      _builder.append("(");
                      String _upperCase_44 = packageName.toUpperCase();
                      _builder.append(_upperCase_44, "\t");
                      _builder.append("UI ui, ");
                      String _name_275 = relatedEntity_1.getName();
                      _builder.append(_name_275, "\t");
                      _builder.append("TO ");
                      String _name_276 = relatedEntity_1.getName();
                      String _lowerCase_111 = _name_276.toLowerCase();
                      _builder.append(_lowerCase_111, "\t");
                      _builder.append(") {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("try {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("if (");
                      String _name_277 = relatedEntity_1.getName();
                      String _firstUpper_166 = StringExtensions.toFirstUpper(_name_277);
                      _builder.append(_firstUpper_166, "\t\t\t");
                      _builder.append("Controller.getInstance().delete");
                      String _name_278 = relatedEntity_1.getName();
                      String _firstUpper_167 = StringExtensions.toFirstUpper(_name_278);
                      _builder.append(_firstUpper_167, "\t\t\t");
                      _builder.append("(");
                      String _name_279 = relatedEntity_1.getName();
                      String _lowerCase_112 = _name_279.toLowerCase();
                      _builder.append(_lowerCase_112, "\t\t\t");
                      _builder.append(")) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("ui.showNotification(");
                      String _upperCase_45 = packageName.toUpperCase();
                      _builder.append(_upperCase_45, "\t\t\t\t");
                      _builder.append("UI.MSG_NOT, \"");
                      String _name_280 = relatedEntity_1.getName();
                      String _firstUpper_168 = StringExtensions.toFirstUpper(_name_280);
                      _builder.append(_firstUpper_168, "\t\t\t\t");
                      _builder.append(" \" + ");
                      String _name_281 = relatedEntity_1.getName();
                      String _lowerCase_113 = _name_281.toLowerCase();
                      _builder.append(_lowerCase_113, "\t\t\t\t");
                      _builder.append(".get");
                      Attribute _iD_19 = DomainCodeUtilities.getID(relatedEntity_1);
                      String _name_282 = _iD_19.getName();
                      String _firstUpper_169 = StringExtensions.toFirstUpper(_name_282);
                      _builder.append(_firstUpper_169, "\t\t\t\t");
                      _builder.append("()");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t\t");
                      _builder.append("+ \" removed from ");
                      String _name_283 = be.getName();
                      String _firstUpper_170 = StringExtensions.toFirstUpper(_name_283);
                      _builder.append(_firstUpper_170, "\t\t\t\t\t");
                      _builder.append(" \" + ");
                      String _name_284 = relatedEntity_1.getName();
                      String _lowerCase_114 = _name_284.toLowerCase();
                      _builder.append(_lowerCase_114, "\t\t\t\t\t");
                      _builder.append(".get");
                      String _name_285 = be.getName();
                      String _firstUpper_171 = StringExtensions.toFirstUpper(_name_285);
                      _builder.append(_firstUpper_171, "\t\t\t\t\t");
                      _builder.append("());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("ui.closeSubWindow();");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("list");
                      String _name_286 = be.getName();
                      String _firstUpper_172 = StringExtensions.toFirstUpper(_name_286);
                      _builder.append(_firstUpper_172, "\t\t\t");
                      String _name_287 = relatedEntity_1.getName();
                      String _firstUpper_173 = StringExtensions.toFirstUpper(_name_287);
                      _builder.append(_firstUpper_173, "\t\t\t");
                      _builder.append("(");
                      String _name_288 = relatedEntity_1.getName();
                      String _lowerCase_115 = _name_288.toLowerCase();
                      _builder.append(_lowerCase_115, "\t\t\t");
                      _builder.append(".get");
                      String _name_289 = be.getName();
                      String _firstUpper_174 = StringExtensions.toFirstUpper(_name_289);
                      _builder.append(_firstUpper_174, "\t\t\t");
                      _builder.append("());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("} else {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("ui.showNotification(");
                      String _upperCase_46 = packageName.toUpperCase();
                      _builder.append(_upperCase_46, "\t\t\t\t");
                      _builder.append("UI.MSG_ERR,");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t\t\t");
                      _builder.append("\"");
                      String _name_290 = relatedEntity_1.getName();
                      String _firstUpper_175 = StringExtensions.toFirstUpper(_name_290);
                      _builder.append(_firstUpper_175, "\t\t\t\t\t");
                      _builder.append(" cannot be removed from ");
                      String _name_291 = be.getName();
                      String _lowerCase_116 = _name_291.toLowerCase();
                      _builder.append(_lowerCase_116, "\t\t\t\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("} catch (Exception e) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("ui.showNotification(");
                      String _upperCase_47 = packageName.toUpperCase();
                      _builder.append(_upperCase_47, "\t\t\t");
                      _builder.append("UI.MSG_ERR, e.getMessage());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                    }
                  }
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                }
              }
            }
          }
        }
      }
      _builder.append("\t");
      _builder.newLine();
      {
        EList<Association> _associations_5 = be.getAssociations();
        for(final Association ass_8 : _associations_5) {
          {
            if ((ass_8 instanceof Simple)) {
              _builder.append("\t");
              BusinessEntity relBe_8 = ((Simple)ass_8).getRelatedEntity();
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("public void set");
              String _name_292 = be.getName();
              String _firstUpper_176 = StringExtensions.toFirstUpper(_name_292);
              _builder.append(_firstUpper_176, "\t");
              String _name_293 = ((Simple)ass_8).getName();
              String _firstUpper_177 = StringExtensions.toFirstUpper(_name_293);
              _builder.append(_firstUpper_177, "\t");
              _builder.append("(");
              Attribute _iD_20 = DomainCodeUtilities.getID(be);
              String _type_18 = DomainCodeUtilities.getType(_iD_20);
              _builder.append(_type_18, "\t");
              _builder.append(" ");
              String _name_294 = be.getName();
              String _lowerCase_117 = _name_294.toLowerCase();
              _builder.append(_lowerCase_117, "\t");
              _builder.append(") {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              String _upperCase_48 = packageName.toUpperCase();
              _builder.append(_upperCase_48, "\t\t");
              _builder.append("UI ui = Registry.get(");
              String _upperCase_49 = packageName.toUpperCase();
              _builder.append(_upperCase_49, "\t\t");
              _builder.append("UI.UI);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("try {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              String _name_295 = relBe_8.getName();
              String _firstUpper_178 = StringExtensions.toFirstUpper(_name_295);
              _builder.append(_firstUpper_178, "\t\t\t");
              String _name_296 = ((Simple)ass_8).getName();
              String _firstUpper_179 = StringExtensions.toFirstUpper(_name_296);
              _builder.append(_firstUpper_179, "\t\t\t");
              _builder.append("Form uMF = Registry.get(");
              String _name_297 = relBe_8.getName();
              String _firstUpper_180 = StringExtensions.toFirstUpper(_name_297);
              _builder.append(_firstUpper_180, "\t\t\t");
              String _name_298 = ((Simple)ass_8).getName();
              String _firstUpper_181 = StringExtensions.toFirstUpper(_name_298);
              _builder.append(_firstUpper_181, "\t\t\t");
              _builder.append("Form.ID);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("ComboBox combo = uMF.getComboBox_1();");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              String _name_299 = relBe_8.getName();
              String _firstUpper_182 = StringExtensions.toFirstUpper(_name_299);
              _builder.append(_firstUpper_182, "\t\t\t");
              _builder.append("TO ");
              String _name_300 = ((Simple)ass_8).getName();
              String _lowerCase_118 = _name_300.toLowerCase();
              _builder.append(_lowerCase_118, "\t\t\t");
              _builder.append(" = (");
              String _name_301 = relBe_8.getName();
              String _firstUpper_183 = StringExtensions.toFirstUpper(_name_301);
              _builder.append(_firstUpper_183, "\t\t\t");
              _builder.append("TO) combo.getValue();");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("if (");
              String _name_302 = ((Simple)ass_8).getName();
              String _lowerCase_119 = _name_302.toLowerCase();
              _builder.append(_lowerCase_119, "\t\t\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("if (");
              String _name_303 = be.getName();
              String _lowerCase_120 = _name_303.toLowerCase();
              _builder.append(_lowerCase_120, "\t\t\t\t");
              _builder.append("Manager.set");
              String _name_304 = be.getName();
              String _firstUpper_184 = StringExtensions.toFirstUpper(_name_304);
              _builder.append(_firstUpper_184, "\t\t\t\t");
              String _name_305 = ((Simple)ass_8).getName();
              String _firstUpper_185 = StringExtensions.toFirstUpper(_name_305);
              _builder.append(_firstUpper_185, "\t\t\t\t");
              _builder.append("(");
              String _name_306 = ((Simple)ass_8).getName();
              String _lowerCase_121 = _name_306.toLowerCase();
              _builder.append(_lowerCase_121, "\t\t\t\t");
              _builder.append(", ");
              String _name_307 = be.getName();
              String _lowerCase_122 = _name_307.toLowerCase();
              _builder.append(_lowerCase_122, "\t\t\t\t");
              _builder.append(")) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              _builder.append("ui.showNotification(");
              String _upperCase_50 = packageName.toUpperCase();
              _builder.append(_upperCase_50, "\t\t\t\t\t");
              _builder.append("UI.MSG_NOT,");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t\t");
              _builder.append("\"");
              String _name_308 = relBe_8.getName();
              String _firstUpper_186 = StringExtensions.toFirstUpper(_name_308);
              _builder.append(_firstUpper_186, "\t\t\t\t\t\t\t");
              _builder.append(" \" + ");
              String _name_309 = ((Simple)ass_8).getName();
              String _lowerCase_123 = _name_309.toLowerCase();
              _builder.append(_lowerCase_123, "\t\t\t\t\t\t\t");
              _builder.append(".get");
              Attribute _iD_21 = DomainCodeUtilities.getID(relBe_8);
              String _name_310 = _iD_21.getName();
              String _firstUpper_187 = StringExtensions.toFirstUpper(_name_310);
              _builder.append(_firstUpper_187, "\t\t\t\t\t\t\t");
              _builder.append("()");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t\t\t\t");
              _builder.append("+ \" was set as ");
              String _name_311 = ((Simple)ass_8).getName();
              String _firstUpper_188 = StringExtensions.toFirstUpper(_name_311);
              _builder.append(_firstUpper_188, "\t\t\t\t\t\t\t\t\t");
              _builder.append(" of ");
              String _name_312 = be.getName();
              String _firstUpper_189 = StringExtensions.toFirstUpper(_name_312);
              _builder.append(_firstUpper_189, "\t\t\t\t\t\t\t\t\t");
              _builder.append(" \"");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t\t\t\t");
              _builder.append("+ ");
              String _name_313 = be.getName();
              String _lowerCase_124 = _name_313.toLowerCase();
              _builder.append(_lowerCase_124, "\t\t\t\t\t\t\t\t\t");
              _builder.append(");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              _builder.append("ui.closeSubWindow();");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              String _name_314 = be.getName();
              String _firstUpper_190 = StringExtensions.toFirstUpper(_name_314);
              _builder.append(_firstUpper_190, "\t\t\t\t\t");
              _builder.append("Form ");
              String _name_315 = be.getName();
              String _lowerCase_125 = _name_315.toLowerCase();
              _builder.append(_lowerCase_125, "\t\t\t\t\t");
              _builder.append("Form = Registry.get(");
              String _name_316 = be.getName();
              String _firstUpper_191 = StringExtensions.toFirstUpper(_name_316);
              _builder.append(_firstUpper_191, "\t\t\t\t\t");
              _builder.append("Form.ID);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              String _name_317 = be.getName();
              String _lowerCase_126 = _name_317.toLowerCase();
              _builder.append(_lowerCase_126, "\t\t\t\t\t");
              _builder.append("Form.update");
              String _name_318 = ((Simple)ass_8).getName();
              String _firstUpper_192 = StringExtensions.toFirstUpper(_name_318);
              _builder.append(_firstUpper_192, "\t\t\t\t\t");
              _builder.append("Fields(");
              String _name_319 = ((Simple)ass_8).getName();
              String _lowerCase_127 = _name_319.toLowerCase();
              _builder.append(_lowerCase_127, "\t\t\t\t\t");
              _builder.append(");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              _builder.append("ui.showNotification(");
              String _upperCase_51 = packageName.toUpperCase();
              _builder.append(_upperCase_51, "\t\t\t\t\t");
              _builder.append("UI.MSG_ERR,");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t\t");
              _builder.append("\"");
              String _name_320 = relBe_8.getName();
              String _firstUpper_193 = StringExtensions.toFirstUpper(_name_320);
              _builder.append(_firstUpper_193, "\t\t\t\t\t\t\t");
              _builder.append(" cannot be added to ");
              String _name_321 = be.getName();
              String _lowerCase_128 = _name_321.toLowerCase();
              _builder.append(_lowerCase_128, "\t\t\t\t\t\t\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("} else");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("((");
              String _upperCase_52 = packageName.toUpperCase();
              _builder.append(_upperCase_52, "\t\t\t\t");
              _builder.append("UI) Registry.get(");
              String _upperCase_53 = packageName.toUpperCase();
              _builder.append(_upperCase_53, "\t\t\t\t");
              _builder.append("UI.UI)).showNotification(");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              String _upperCase_54 = packageName.toUpperCase();
              _builder.append(_upperCase_54, "\t\t\t\t\t\t");
              _builder.append("UI.MSG_ERR, \"Please select the ");
              String _name_322 = ((Simple)ass_8).getName();
              String _lowerCase_129 = _name_322.toLowerCase();
              _builder.append(_lowerCase_129, "\t\t\t\t\t\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("} catch (Exception e) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("ui.showNotification(");
              String _upperCase_55 = packageName.toUpperCase();
              _builder.append(_upperCase_55, "\t\t\t");
              _builder.append("UI.MSG_ERR, e.getMessage());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("public void popUp");
              String _name_323 = ((Simple)ass_8).getName();
              String _firstUpper_194 = StringExtensions.toFirstUpper(_name_323);
              _builder.append(_firstUpper_194, "\t");
              _builder.append("Form() {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              String _upperCase_56 = packageName.toUpperCase();
              _builder.append(_upperCase_56, "\t\t");
              _builder.append("UI ui = Registry.get(");
              String _upperCase_57 = packageName.toUpperCase();
              _builder.append(_upperCase_57, "\t\t");
              _builder.append("UI.UI);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("try {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("// String obtained from ClassName - MethodName");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              String _name_324 = be.getName();
              String _firstUpper_195 = StringExtensions.toFirstUpper(_name_324);
              String _plus_42 = (_firstUpper_195 + " - Set");
              String _name_325 = ((Simple)ass_8).getName();
              String _firstUpper_196 = StringExtensions.toFirstUpper(_name_325);
              String _plus_43 = (_plus_42 + _firstUpper_196);
              String _contribute2Template_7 = DomainCodeUtilities.contribute2Template(2, _plus_43);
              _builder.append(_contribute2Template_7, "\t\t\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              String _name_326 = be.getName();
              String _firstUpper_197 = StringExtensions.toFirstUpper(_name_326);
              String _plus_44 = (_firstUpper_197 + " - Set");
              String _name_327 = ((Simple)ass_8).getName();
              String _firstUpper_198 = StringExtensions.toFirstUpper(_name_327);
              String _plus_45 = (_plus_44 + _firstUpper_198);
              DomainCodeUtilities.addService(_plus_45);
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              String _name_328 = be.getName();
              String _firstUpper_199 = StringExtensions.toFirstUpper(_name_328);
              _builder.append(_firstUpper_199, "\t\t\t");
              _builder.append("Form pF = Registry.get(");
              String _name_329 = be.getName();
              String _firstUpper_200 = StringExtensions.toFirstUpper(_name_329);
              _builder.append(_firstUpper_200, "\t\t\t");
              _builder.append("Form.ID);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              String _name_330 = be.getName();
              String _firstUpper_201 = StringExtensions.toFirstUpper(_name_330);
              _builder.append(_firstUpper_201, "\t\t\t");
              _builder.append("TO ");
              String _name_331 = be.getName();
              String _lowerCase_130 = _name_331.toLowerCase();
              _builder.append(_lowerCase_130, "\t\t\t");
              _builder.append(" = (");
              String _name_332 = be.getName();
              String _firstUpper_202 = StringExtensions.toFirstUpper(_name_332);
              _builder.append(_firstUpper_202, "\t\t\t");
              _builder.append("TO) pF.getTable_1().getValue();");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("if (");
              String _name_333 = be.getName();
              String _lowerCase_131 = _name_333.toLowerCase();
              _builder.append(_lowerCase_131, "\t\t\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              String _name_334 = relBe_8.getName();
              String _firstUpper_203 = StringExtensions.toFirstUpper(_name_334);
              _builder.append(_firstUpper_203, "\t\t\t\t");
              String _name_335 = ((Simple)ass_8).getName();
              String _firstUpper_204 = StringExtensions.toFirstUpper(_name_335);
              _builder.append(_firstUpper_204, "\t\t\t\t");
              _builder.append("Form uMF = Registry.get(");
              String _name_336 = relBe_8.getName();
              String _firstUpper_205 = StringExtensions.toFirstUpper(_name_336);
              _builder.append(_firstUpper_205, "\t\t\t\t");
              String _name_337 = ((Simple)ass_8).getName();
              String _firstUpper_206 = StringExtensions.toFirstUpper(_name_337);
              _builder.append(_firstUpper_206, "\t\t\t\t");
              _builder.append("Form.ID);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("List<");
              String _name_338 = relBe_8.getName();
              String _firstUpper_207 = StringExtensions.toFirstUpper(_name_338);
              _builder.append(_firstUpper_207, "\t\t\t\t");
              _builder.append("TO> ");
              String _name_339 = relBe_8.getName();
              String _lowerCase_132 = _name_339.toLowerCase();
              _builder.append(_lowerCase_132, "\t\t\t\t");
              _builder.append("s = ");
              String _name_340 = relBe_8.getName();
              String _firstUpper_208 = StringExtensions.toFirstUpper(_name_340);
              _builder.append(_firstUpper_208, "\t\t\t\t");
              _builder.append("Controller.getInstance()");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append(".get");
              String _name_341 = relBe_8.getName();
              String _firstUpper_209 = StringExtensions.toFirstUpper(_name_341);
              _builder.append(_firstUpper_209, "\t\t\t\t\t\t");
              _builder.append("From");
              String _name_342 = be.getName();
              String _firstUpper_210 = StringExtensions.toFirstUpper(_name_342);
              _builder.append(_firstUpper_210, "\t\t\t\t\t\t");
              _builder.append("(");
              String _name_343 = be.getName();
              String _lowerCase_133 = _name_343.toLowerCase();
              _builder.append(_lowerCase_133, "\t\t\t\t\t\t");
              _builder.append(".get");
              Attribute _iD_22 = DomainCodeUtilities.getID(be);
              String _name_344 = _iD_22.getName();
              String _firstUpper_211 = StringExtensions.toFirstUpper(_name_344);
              _builder.append(_firstUpper_211, "\t\t\t\t\t\t");
              _builder.append("());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("uMF.set");
              String _name_345 = be.getName();
              String _firstUpper_212 = StringExtensions.toFirstUpper(_name_345);
              _builder.append(_firstUpper_212, "\t\t\t\t");
              _builder.append("(");
              String _name_346 = be.getName();
              String _lowerCase_134 = _name_346.toLowerCase();
              _builder.append(_lowerCase_134, "\t\t\t\t");
              _builder.append(".get");
              Attribute _iD_23 = DomainCodeUtilities.getID(be);
              String _name_347 = _iD_23.getName();
              String _firstUpper_213 = StringExtensions.toFirstUpper(_name_347);
              _builder.append(_firstUpper_213, "\t\t\t\t");
              _builder.append("());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("uMF.clearFormFields();");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              String _name_348 = relBe_8.getName();
              String _firstUpper_214 = StringExtensions.toFirstUpper(_name_348);
              _builder.append(_firstUpper_214, "\t\t\t\t");
              _builder.append("TO ");
              String _name_349 = ((Simple)ass_8).getName();
              String _lowerCase_135 = _name_349.toLowerCase();
              _builder.append(_lowerCase_135, "\t\t\t\t");
              _builder.append(" = ");
              String _name_350 = relBe_8.getName();
              String _firstUpper_215 = StringExtensions.toFirstUpper(_name_350);
              _builder.append(_firstUpper_215, "\t\t\t\t");
              _builder.append("Controller.getInstance()");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append(".get");
              String _name_351 = be.getName();
              String _firstUpper_216 = StringExtensions.toFirstUpper(_name_351);
              _builder.append(_firstUpper_216, "\t\t\t\t\t\t");
              String _name_352 = ((Simple)ass_8).getName();
              String _firstUpper_217 = StringExtensions.toFirstUpper(_name_352);
              _builder.append(_firstUpper_217, "\t\t\t\t\t\t");
              _builder.append("(");
              String _name_353 = be.getName();
              String _lowerCase_136 = _name_353.toLowerCase();
              _builder.append(_lowerCase_136, "\t\t\t\t\t\t");
              _builder.append(".get");
              Attribute _iD_24 = DomainCodeUtilities.getID(be);
              String _name_354 = _iD_24.getName();
              String _firstUpper_218 = StringExtensions.toFirstUpper(_name_354);
              _builder.append(_firstUpper_218, "\t\t\t\t\t\t");
              _builder.append("());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("// uMF.populateUsers(users, manager);");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              String _name_355 = relBe_8.getName();
              String _firstUpper_219 = StringExtensions.toFirstUpper(_name_355);
              _builder.append(_firstUpper_219, "\t\t\t\t");
              _builder.append("Controller.getInstance().populate");
              String _name_356 = relBe_8.getName();
              String _firstUpper_220 = StringExtensions.toFirstUpper(_name_356);
              _builder.append(_firstUpper_220, "\t\t\t\t");
              String _name_357 = ((Simple)ass_8).getName();
              String _firstUpper_221 = StringExtensions.toFirstUpper(_name_357);
              _builder.append(_firstUpper_221, "\t\t\t\t");
              _builder.append("Combo(");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              String _name_358 = relBe_8.getName();
              String _lowerCase_137 = _name_358.toLowerCase();
              _builder.append(_lowerCase_137, "\t\t\t\t\t\t");
              _builder.append("s, ");
              String _name_359 = ((Simple)ass_8).getName();
              String _lowerCase_138 = _name_359.toLowerCase();
              _builder.append(_lowerCase_138, "\t\t\t\t\t\t");
              _builder.append(");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("((");
              String _upperCase_58 = packageName.toUpperCase();
              _builder.append(_upperCase_58, "\t\t\t\t");
              _builder.append("UI) Registry.get(");
              String _upperCase_59 = packageName.toUpperCase();
              _builder.append(_upperCase_59, "\t\t\t\t");
              _builder.append("UI.UI)).openSubWindow(");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\"");
              String _name_360 = be.getName();
              String _firstUpper_222 = StringExtensions.toFirstUpper(_name_360);
              _builder.append(_firstUpper_222, "\t\t\t\t\t\t");
              _builder.append(" ");
              String _name_361 = ((Simple)ass_8).getName();
              String _firstUpper_223 = StringExtensions.toFirstUpper(_name_361);
              _builder.append(_firstUpper_223, "\t\t\t\t\t\t");
              _builder.append("\", uMF);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("} else");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("((");
              String _upperCase_60 = packageName.toUpperCase();
              _builder.append(_upperCase_60, "\t\t\t\t");
              _builder.append("UI) Registry.get(");
              String _upperCase_61 = packageName.toUpperCase();
              _builder.append(_upperCase_61, "\t\t\t\t");
              _builder.append("UI.UI)).showNotification(");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              String _upperCase_62 = packageName.toUpperCase();
              _builder.append(_upperCase_62, "\t\t\t\t\t\t");
              _builder.append("UI.MSG_ERR,");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\"Please select a ");
              String _name_362 = be.getName();
              String _lowerCase_139 = _name_362.toLowerCase();
              _builder.append(_lowerCase_139, "\t\t\t\t\t\t");
              _builder.append(" to set its ");
              String _name_363 = ((Simple)ass_8).getName();
              String _lowerCase_140 = _name_363.toLowerCase();
              _builder.append(_lowerCase_140, "\t\t\t\t\t\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("} catch (Exception e) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("ui.showNotification(");
              String _upperCase_63 = packageName.toUpperCase();
              _builder.append(_upperCase_63, "\t\t\t");
              _builder.append("UI.MSG_ERR, e.getMessage());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
            }
          }
        }
      }
      _builder.append("\t");
      _builder.newLine();
      {
        boolean _isMaster_6 = DomainCodeUtilities.isMaster(be);
        if (_isMaster_6) {
          _builder.append("\t");
          _builder.append("public void popUpAddDetailForm() {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          String _name_364 = be.getName();
          String _firstUpper_224 = StringExtensions.toFirstUpper(_name_364);
          _builder.append(_firstUpper_224, "\t\t");
          _builder.append("Form pF = Registry.get(");
          String _name_365 = be.getName();
          String _firstUpper_225 = StringExtensions.toFirstUpper(_name_365);
          _builder.append(_firstUpper_225, "\t\t");
          _builder.append("Form.ID);");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          String _name_366 = be.getName();
          String _firstUpper_226 = StringExtensions.toFirstUpper(_name_366);
          _builder.append(_firstUpper_226, "\t\t");
          _builder.append("TO ");
          String _name_367 = be.getName();
          String _lowerCase_141 = _name_367.toLowerCase();
          _builder.append(_lowerCase_141, "\t\t");
          _builder.append(" = (");
          String _name_368 = be.getName();
          String _firstUpper_227 = StringExtensions.toFirstUpper(_name_368);
          _builder.append(_firstUpper_227, "\t\t");
          _builder.append("TO) pF.getTable_1().getValue();");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          String _upperCase_64 = packageName.toUpperCase();
          _builder.append(_upperCase_64, "\t\t");
          _builder.append("UI ui = Registry.get(");
          String _upperCase_65 = packageName.toUpperCase();
          _builder.append(_upperCase_65, "\t\t");
          _builder.append("UI.UI);");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("if (");
          String _name_369 = be.getName();
          String _lowerCase_142 = _name_369.toLowerCase();
          _builder.append(_lowerCase_142, "\t\t");
          _builder.append(" != null) {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("TabSheet tS = pF.getTabSheet_1();");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("int selectedTab = tS.getTabPosition(tS.getTab(tS.getSelectedTab()));");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("switch (selectedTab) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          int index_1 = 2;
          _builder.newLineIfNotEmpty();
          {
            EList<Association> _associations_6 = be.getAssociations();
            for(final Association ass_9 : _associations_6) {
              {
                if ((ass_9 instanceof Multiple)) {
                  _builder.append("\t");
                  _builder.append("\t\t");
                  BusinessEntity relBe_9 = ((Multiple)ass_9).getEntity();
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  String contract_4 = "";
                  _builder.newLineIfNotEmpty();
                  {
                    List<Contracts> _contract_12 = DomainCodeUtilities.getContract(be, AddElement.class);
                    for(final Contracts con_7 : _contract_12) {
                      _builder.append("\t");
                      _builder.append("\t\t");
                      ContractElements conI_4 = ((ContractElements) con_7);
                      _builder.newLineIfNotEmpty();
                      {
                        Multiple _association_6 = conI_4.getAssociation();
                        BusinessEntity _entity_5 = _association_6.getEntity();
                        String _name_370 = _entity_5.getName();
                        String _name_371 = relBe_9.getName();
                        boolean _equals_16 = _name_370.equals(_name_371);
                        if (_equals_16) {
                          _builder.append("\t");
                          _builder.append("\t\t");
                          String _contract_13 = contract_4;
                          String _name_372 = conI_4.getName();
                          String ddf_4 = contract_4 = (_contract_13 + _name_372);
                          _builder.newLineIfNotEmpty();
                        }
                      }
                    }
                  }
                  {
                    boolean _equals_17 = contract_4.equals("");
                    boolean _not_6 = (!_equals_17);
                    if (_not_6) {
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("case TAB_");
                      String _name_373 = relBe_9.getName();
                      String _upperCase_66 = _name_373.toUpperCase();
                      _builder.append(_upperCase_66, "\t\t\t");
                      _builder.append(":");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("\t");
                      _builder.append("try {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("\t\t");
                      _builder.append("// String obtained from ClassName - MethodName");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("\t\t");
                      String _name_374 = be.getName();
                      String _firstUpper_228 = StringExtensions.toFirstUpper(_name_374);
                      String _plus_46 = (_firstUpper_228 + " - Add");
                      String _name_375 = relBe_9.getName();
                      String _firstUpper_229 = StringExtensions.toFirstUpper(_name_375);
                      String _plus_47 = (_plus_46 + _firstUpper_229);
                      String _contribute2Template_8 = DomainCodeUtilities.contribute2Template(2, _plus_47);
                      _builder.append(_contribute2Template_8, "\t\t\t\t\t");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("\t\t");
                      String _name_376 = be.getName();
                      String _firstUpper_230 = StringExtensions.toFirstUpper(_name_376);
                      String _plus_48 = (_firstUpper_230 + " - Add");
                      String _name_377 = relBe_9.getName();
                      String _firstUpper_231 = StringExtensions.toFirstUpper(_name_377);
                      String _plus_49 = (_plus_48 + _firstUpper_231);
                      DomainCodeUtilities.addService(_plus_49);
                      _builder.newLineIfNotEmpty();
                      {
                        boolean _and_4 = false;
                        boolean _hasZeroAssociations_4 = DomainCodeUtilities.hasZeroAssociations(relBe_9);
                        if (!_hasZeroAssociations_4) {
                          _and_4 = false;
                        } else {
                          boolean _isMaster_7 = DomainCodeUtilities.isMaster(relBe_9);
                          boolean _not_7 = (!_isMaster_7);
                          _and_4 = _not_7;
                        }
                        if (_and_4) {
                          _builder.newLine();
                          _builder.append("\t\t");
                          _builder.append("PopUp");
                          String _name_378 = relBe_9.getName();
                          String _firstUpper_232 = StringExtensions.toFirstUpper(_name_378);
                          _builder.append(_firstUpper_232, "\t\t");
                          _builder.append("Form rF = Registry.get(PopUp");
                          String _name_379 = relBe_9.getName();
                          String _firstUpper_233 = StringExtensions.toFirstUpper(_name_379);
                          _builder.append(_firstUpper_233, "\t\t");
                          _builder.append("Form.ID);");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t");
                          _builder.append("rF.set");
                          String _name_380 = be.getName();
                          String _firstUpper_234 = StringExtensions.toFirstUpper(_name_380);
                          _builder.append(_firstUpper_234, "\t\t");
                          _builder.append("(");
                          String _name_381 = be.getName();
                          String _lowerCase_143 = _name_381.toLowerCase();
                          _builder.append(_lowerCase_143, "\t\t");
                          _builder.append(".get");
                          Attribute _iD_25 = DomainCodeUtilities.getID(be);
                          String _name_382 = _iD_25.getName();
                          String _firstUpper_235 = StringExtensions.toFirstUpper(_name_382);
                          _builder.append(_firstUpper_235, "\t\t");
                          _builder.append("());");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t");
                          _builder.append("((");
                          String _upperCase_67 = packageName.toUpperCase();
                          _builder.append(_upperCase_67, "\t\t");
                          _builder.append("UI) Registry.get(");
                          String _upperCase_68 = packageName.toUpperCase();
                          _builder.append(_upperCase_68, "\t\t");
                          _builder.append("UI.UI)).openSubWindow(\"");
                          String _name_383 = relBe_9.getName();
                          String _firstUpper_236 = StringExtensions.toFirstUpper(_name_383);
                          _builder.append(_firstUpper_236, "\t\t");
                          _builder.append("\", rF);");
                          _builder.newLineIfNotEmpty();
                        } else {
                          _builder.newLine();
                          _builder.append("\t\t\t\t\t");
                          _builder.append("PopUp");
                          String _name_384 = be.getName();
                          String _firstUpper_237 = StringExtensions.toFirstUpper(_name_384);
                          _builder.append(_firstUpper_237, "\t\t\t\t\t");
                          String _name_385 = relBe_9.getName();
                          String _firstUpper_238 = StringExtensions.toFirstUpper(_name_385);
                          _builder.append(_firstUpper_238, "\t\t\t\t\t");
                          _builder.append("Form uF = Registry.get(PopUp");
                          String _name_386 = be.getName();
                          String _firstUpper_239 = StringExtensions.toFirstUpper(_name_386);
                          _builder.append(_firstUpper_239, "\t\t\t\t\t");
                          String _name_387 = relBe_9.getName();
                          String _firstUpper_240 = StringExtensions.toFirstUpper(_name_387);
                          _builder.append(_firstUpper_240, "\t\t\t\t\t");
                          _builder.append("Form.ID);");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t\t");
                          List<Contracts> _contract_14 = DomainCodeUtilities.getContract(relBe_9, ListAll.class);
                          Contracts con_8 = _contract_14.get(0);
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t\t");
                          _builder.append("List<");
                          String _name_388 = relBe_9.getName();
                          String _firstUpper_241 = StringExtensions.toFirstUpper(_name_388);
                          _builder.append(_firstUpper_241, "\t\t\t\t\t");
                          _builder.append("TO> ");
                          String _name_389 = relBe_9.getName();
                          String _lowerCase_144 = _name_389.toLowerCase();
                          _builder.append(_lowerCase_144, "\t\t\t\t\t");
                          _builder.append("s = ");
                          String _name_390 = relBe_9.getName();
                          String _firstUpper_242 = StringExtensions.toFirstUpper(_name_390);
                          _builder.append(_firstUpper_242, "\t\t\t\t\t");
                          _builder.append("Controller.getInstance()");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t\t\t\t");
                          _builder.append(".");
                          String _name_391 = con_8.getName();
                          _builder.append(_name_391, "\t\t\t\t\t\t\t");
                          _builder.append("();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t\t");
                          _builder.append("// uF.populateUsers(users);");
                          _builder.newLine();
                          _builder.append("\t\t\t\t\t");
                          String _name_392 = relBe_9.getName();
                          String _firstUpper_243 = StringExtensions.toFirstUpper(_name_392);
                          _builder.append(_firstUpper_243, "\t\t\t\t\t");
                          _builder.append("Controller.getInstance().populate");
                          String _name_393 = relBe_9.getName();
                          String _firstUpper_244 = StringExtensions.toFirstUpper(_name_393);
                          _builder.append(_firstUpper_244, "\t\t\t\t\t");
                          _builder.append("Combo(");
                          String _name_394 = relBe_9.getName();
                          String _lowerCase_145 = _name_394.toLowerCase();
                          _builder.append(_lowerCase_145, "\t\t\t\t\t");
                          _builder.append("s);");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t\t");
                          _builder.append("uF.set");
                          String _name_395 = be.getName();
                          String _firstUpper_245 = StringExtensions.toFirstUpper(_name_395);
                          _builder.append(_firstUpper_245, "\t\t\t\t\t");
                          _builder.append("(");
                          String _name_396 = be.getName();
                          String _lowerCase_146 = _name_396.toLowerCase();
                          _builder.append(_lowerCase_146, "\t\t\t\t\t");
                          _builder.append(".get");
                          Attribute _iD_26 = DomainCodeUtilities.getID(be);
                          String _name_397 = _iD_26.getName();
                          String _firstUpper_246 = StringExtensions.toFirstUpper(_name_397);
                          _builder.append(_firstUpper_246, "\t\t\t\t\t");
                          _builder.append("());");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t\t");
                          _builder.append("((");
                          String _upperCase_69 = packageName.toUpperCase();
                          _builder.append(_upperCase_69, "\t\t\t\t\t");
                          _builder.append("UI) Registry.get(");
                          String _upperCase_70 = packageName.toUpperCase();
                          _builder.append(_upperCase_70, "\t\t\t\t\t");
                          _builder.append("UI.UI)).openSubWindow(\"");
                          String _name_398 = relBe_9.getName();
                          String _firstUpper_247 = StringExtensions.toFirstUpper(_name_398);
                          _builder.append(_firstUpper_247, "\t\t\t\t\t");
                          _builder.append("\", uF);");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("\t");
                      _builder.append("} catch (Exception e) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("\t\t");
                      _builder.append("ui.showNotification(");
                      String _upperCase_71 = packageName.toUpperCase();
                      _builder.append(_upperCase_71, "\t\t\t\t\t");
                      _builder.append("UI.MSG_ERR, e.getMessage());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("\t");
                      _builder.append("break;");
                      _builder.newLine();
                    }
                  }
                }
              }
            }
          }
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("default:");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("break;");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("} else");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("ui.showNotification(");
          String _upperCase_72 = packageName.toUpperCase();
          _builder.append(_upperCase_72, "\t\t\t");
          _builder.append("UI.MSG_ERR, \"Please select a ");
          String _name_399 = be.getName();
          String _lowerCase_147 = _name_399.toLowerCase();
          _builder.append(_lowerCase_147, "\t\t\t");
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("public Command get");
          String _name_400 = be.getName();
          String _firstUpper_248 = StringExtensions.toFirstUpper(_name_400);
          _builder.append(_firstUpper_248, "\t");
          _builder.append("Command() {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("return new Command() {");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("private static final long serialVersionUID = 1L;");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("@Override");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("public void menuSelected(MenuItem selectedItem) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("show");
          String _name_401 = be.getName();
          String _firstUpper_249 = StringExtensions.toFirstUpper(_name_401);
          _builder.append(_firstUpper_249, "\t\t\t\t");
          _builder.append("Form();");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("};");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
        }
      }
      _builder.append("\t");
      _builder.newLine();
      {
        boolean _hasZeroAssociations_5 = DomainCodeUtilities.hasZeroAssociations(be);
        if (_hasZeroAssociations_5) {
          _builder.append("\t");
          _builder.append("public boolean delete");
          String _name_402 = be.getName();
          String _firstUpper_250 = StringExtensions.toFirstUpper(_name_402);
          _builder.append(_firstUpper_250, "\t");
          _builder.append("(");
          String _name_403 = be.getName();
          String _firstUpper_251 = StringExtensions.toFirstUpper(_name_403);
          _builder.append(_firstUpper_251, "\t");
          _builder.append("TO ");
          String _name_404 = be.getName();
          String _lowerCase_148 = _name_404.toLowerCase();
          _builder.append(_lowerCase_148, "\t");
          _builder.append(") throws Exception {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("try {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          List<Contracts> _contract_15 = DomainCodeUtilities.getContract(be, Delete.class);
          Contracts con_9 = _contract_15.get(0);
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("return ");
          String _name_405 = be.getName();
          String _lowerCase_149 = _name_405.toLowerCase();
          _builder.append(_lowerCase_149, "\t\t\t\t");
          _builder.append("Manager.");
          String _name_406 = con_9.getName();
          _builder.append(_name_406, "\t\t\t\t");
          _builder.append("(");
          String _name_407 = be.getName();
          String _lowerCase_150 = _name_407.toLowerCase();
          _builder.append(_lowerCase_150, "\t\t\t\t");
          _builder.append(");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("} catch (Exception e) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("throw e;");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
        }
      }
      _builder.append("\t");
      _builder.newLine();
      {
        List<Association> _detailMultipleAssociations_5 = DomainCodeUtilities.getDetailMultipleAssociations(be, associations);
        for(final Association ass_10 : _detailMultipleAssociations_5) {
          _builder.append("\t");
          EObject _eContainer_5 = ass_10.eContainer();
          BusinessEntity relBe_10 = ((BusinessEntity) _eContainer_5);
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          String contract_5 = "";
          _builder.newLineIfNotEmpty();
          {
            List<Contracts> _contract_16 = DomainCodeUtilities.getContract(relBe_10, AddElement.class);
            for(final Contracts con_10 : _contract_16) {
              _builder.append("\t");
              ContractElements conI_5 = ((ContractElements) con_10);
              _builder.newLineIfNotEmpty();
              {
                Multiple _association_7 = conI_5.getAssociation();
                BusinessEntity _entity_6 = _association_7.getEntity();
                String _name_408 = _entity_6.getName();
                String _name_409 = be.getName();
                boolean _equals_18 = _name_408.equals(_name_409);
                if (_equals_18) {
                  _builder.append("\t");
                  String _contract_17 = contract_5;
                  String _name_410 = conI_5.getName();
                  String ddf_5 = contract_5 = (_contract_17 + _name_410);
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
          {
            boolean _and_5 = false;
            boolean _equals_19 = contract_5.equals("");
            boolean _not_8 = (!_equals_19);
            if (!_not_8) {
              _and_5 = false;
            } else {
              boolean _hasZeroAssociations_6 = DomainCodeUtilities.hasZeroAssociations(relBe_10);
              boolean _not_9 = (!_hasZeroAssociations_6);
              _and_5 = _not_9;
            }
            if (_and_5) {
              _builder.append("\t");
              _builder.append("public void add");
              String _name_411 = be.getName();
              String _firstUpper_252 = StringExtensions.toFirstUpper(_name_411);
              _builder.append(_firstUpper_252, "\t");
              _builder.append("To");
              String _name_412 = relBe_10.getName();
              String _firstUpper_253 = StringExtensions.toFirstUpper(_name_412);
              _builder.append(_firstUpper_253, "\t");
              _builder.append("(");
              Attribute _iD_27 = DomainCodeUtilities.getID(relBe_10);
              String _type_19 = DomainCodeUtilities.getType(_iD_27);
              _builder.append(_type_19, "\t");
              _builder.append(" ");
              String _name_413 = relBe_10.getName();
              String _lowerCase_151 = _name_413.toLowerCase();
              _builder.append(_lowerCase_151, "\t");
              _builder.append(") {");
              _builder.newLineIfNotEmpty();
              {
                boolean _hasZeroAssociations_7 = DomainCodeUtilities.hasZeroAssociations(be);
                boolean _not_10 = (!_hasZeroAssociations_7);
                if (_not_10) {
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("PopUp");
                  String _name_414 = relBe_10.getName();
                  String _firstUpper_254 = StringExtensions.toFirstUpper(_name_414);
                  _builder.append(_firstUpper_254, "\t\t");
                  String _name_415 = be.getName();
                  String _firstUpper_255 = StringExtensions.toFirstUpper(_name_415);
                  _builder.append(_firstUpper_255, "\t\t");
                  _builder.append("Form pF = Registry.get(PopUp");
                  String _name_416 = relBe_10.getName();
                  String _firstUpper_256 = StringExtensions.toFirstUpper(_name_416);
                  _builder.append(_firstUpper_256, "\t\t");
                  String _name_417 = be.getName();
                  String _firstUpper_257 = StringExtensions.toFirstUpper(_name_417);
                  _builder.append(_firstUpper_257, "\t\t");
                  _builder.append("Form.ID);");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("PopUp");
                  String _name_418 = be.getName();
                  String _firstUpper_258 = StringExtensions.toFirstUpper(_name_418);
                  _builder.append(_firstUpper_258, "\t\t");
                  _builder.append("Form pF = Registry.get(PopUp");
                  String _name_419 = be.getName();
                  String _firstUpper_259 = StringExtensions.toFirstUpper(_name_419);
                  _builder.append(_firstUpper_259, "\t\t");
                  _builder.append("Form.ID);");
                  _builder.newLineIfNotEmpty();
                }
              }
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("try{\t\t");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("// String obtained from ClassName - MethodName");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              String _name_420 = relBe_10.getName();
              String _firstUpper_260 = StringExtensions.toFirstUpper(_name_420);
              String _plus_50 = (_firstUpper_260 + " - Add");
              String _name_421 = be.getName();
              String _firstUpper_261 = StringExtensions.toFirstUpper(_name_421);
              String _plus_51 = (_plus_50 + _firstUpper_261);
              String _contribute2Template_9 = DomainCodeUtilities.contribute2Template(2, _plus_51);
              _builder.append(_contribute2Template_9, "\t\t\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              String _name_422 = relBe_10.getName();
              String _firstUpper_262 = StringExtensions.toFirstUpper(_name_422);
              String _plus_52 = (_firstUpper_262 + " - Add");
              String _name_423 = be.getName();
              String _firstUpper_263 = StringExtensions.toFirstUpper(_name_423);
              String _plus_53 = (_plus_52 + _firstUpper_263);
              DomainCodeUtilities.addService(_plus_53);
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              int tF = 1;
              _builder.newLineIfNotEmpty();
              {
                EList<Attribute> _attributes_7 = be.getAttributes();
                for(final Attribute a_8 : _attributes_7) {
                  {
                    String _type_20 = DomainCodeUtilities.getType(a_8);
                    boolean _equals_20 = _type_20.equals("Date");
                    if (_equals_20) {
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("Date ");
                      String _name_424 = a_8.getName();
                      String _lowerCase_152 = _name_424.toLowerCase();
                      _builder.append(_lowerCase_152, "\t\t\t");
                      _builder.append(" = pF.getPopupDateField_");
                      int _plusPlus_3 = tF++;
                      _builder.append(_plusPlus_3, "\t\t\t");
                      _builder.append("().getValue();");
                      _builder.newLineIfNotEmpty();
                    } else {
                      {
                        String _type_21 = DomainCodeUtilities.getType(a_8);
                        boolean _equals_21 = _type_21.equals("int");
                        if (_equals_21) {
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("int ");
                          String _name_425 = a_8.getName();
                          String _lowerCase_153 = _name_425.toLowerCase();
                          _builder.append(_lowerCase_153, "\t\t\t");
                          _builder.append(" = Integer.parseInt(pF.getTextField_");
                          int _plusPlus_4 = tF++;
                          _builder.append(_plusPlus_4, "\t\t\t");
                          _builder.append("().getValue());");
                          _builder.newLineIfNotEmpty();
                        } else {
                          {
                            String _type_22 = DomainCodeUtilities.getType(a_8);
                            boolean _equals_22 = _type_22.equals("double");
                            if (_equals_22) {
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("double ");
                              String _name_426 = a_8.getName();
                              String _lowerCase_154 = _name_426.toLowerCase();
                              _builder.append(_lowerCase_154, "\t\t\t");
                              _builder.append(" = Double.parseDouble(pF.getTextField_");
                              int _plusPlus_5 = tF++;
                              _builder.append(_plusPlus_5, "\t\t\t");
                              _builder.append("().getValue());");
                              _builder.newLineIfNotEmpty();
                            } else {
                              _builder.append("\t");
                              _builder.append("\t\t");
                              String _type_23 = DomainCodeUtilities.getType(a_8);
                              _builder.append(_type_23, "\t\t\t");
                              _builder.append(" ");
                              String _name_427 = a_8.getName();
                              String _lowerCase_155 = _name_427.toLowerCase();
                              _builder.append(_lowerCase_155, "\t\t\t");
                              _builder.append(" = pF.getTextField_");
                              int _plusPlus_6 = tF++;
                              _builder.append(_plusPlus_6, "\t\t\t");
                              _builder.append("().getValue();");
                              _builder.newLineIfNotEmpty();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("if (");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              int c1_1 = 0;
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              List<Attribute> atts_1 = new ArrayList<Attribute>();
              _builder.newLineIfNotEmpty();
              {
                EList<Attribute> _attributes_8 = be.getAttributes();
                for(final Attribute a_9 : _attributes_8) {
                  {
                    boolean _or_2 = false;
                    String _type_24 = DomainCodeUtilities.getType(a_9);
                    boolean _equals_23 = _type_24.equals("Date");
                    if (_equals_23) {
                      _or_2 = true;
                    } else {
                      String _type_25 = DomainCodeUtilities.getType(a_9);
                      boolean _equals_24 = _type_25.equals("String");
                      _or_2 = _equals_24;
                    }
                    if (_or_2) {
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      boolean add_1 = atts_1.add(a_9);
                      _builder.newLineIfNotEmpty();
                    }
                  }
                }
              }
              _builder.append("\t");
              _builder.append("\t\t\t");
              int l1_1 = atts_1.size();
              _builder.newLineIfNotEmpty();
              {
                for(final Attribute a_10 : atts_1) {
                  {
                    String _type_26 = DomainCodeUtilities.getType(a_10);
                    boolean _equals_25 = _type_26.equals("Date");
                    if (_equals_25) {
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      String _name_428 = a_10.getName();
                      String _lowerCase_156 = _name_428.toLowerCase();
                      _builder.append(_lowerCase_156, "\t\t\t\t");
                      _builder.append(" != null");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                  {
                    String _type_27 = DomainCodeUtilities.getType(a_10);
                    boolean _equals_26 = _type_27.equals("String");
                    if (_equals_26) {
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      String _name_429 = a_10.getName();
                      String _lowerCase_157 = _name_429.toLowerCase();
                      _builder.append(_lowerCase_157, "\t\t\t\t");
                      _builder.append(" != null && !");
                      String _name_430 = a_10.getName();
                      String _lowerCase_158 = _name_430.toLowerCase();
                      _builder.append(_lowerCase_158, "\t\t\t\t");
                      _builder.append(".equals(\"\")");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                  {
                    boolean _and_6 = false;
                    boolean _or_3 = false;
                    String _type_28 = DomainCodeUtilities.getType(a_10);
                    boolean _equals_27 = _type_28.equals("Date");
                    if (_equals_27) {
                      _or_3 = true;
                    } else {
                      String _type_29 = DomainCodeUtilities.getType(a_10);
                      boolean _equals_28 = _type_29.equals("String");
                      _or_3 = _equals_28;
                    }
                    if (!_or_3) {
                      _and_6 = false;
                    } else {
                      _and_6 = (c1_1 < (l1_1 - 1));
                    }
                    if (_and_6) {
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("&&");
                      _builder.newLine();
                    }
                  }
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  int ff_1 = c1_1++;
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                }
              }
              _builder.append(") {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              String _name_431 = be.getName();
              String _firstUpper_264 = StringExtensions.toFirstUpper(_name_431);
              _builder.append(_firstUpper_264, "\t\t\t\t\t");
              _builder.append("TO ");
              String _name_432 = be.getName();
              String _lowerCase_159 = _name_432.toLowerCase();
              _builder.append(_lowerCase_159, "\t\t\t\t\t");
              _builder.append(" = new ");
              String _name_433 = be.getName();
              String _firstUpper_265 = StringExtensions.toFirstUpper(_name_433);
              _builder.append(_firstUpper_265, "\t\t\t\t\t");
              _builder.append("TO();");
              _builder.newLineIfNotEmpty();
              {
                EList<Attribute> _attributes_9 = be.getAttributes();
                for(final Attribute a_11 : _attributes_9) {
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  String _name_434 = be.getName();
                  String _lowerCase_160 = _name_434.toLowerCase();
                  _builder.append(_lowerCase_160, "\t\t\t\t\t");
                  _builder.append(".set");
                  String _name_435 = a_11.getName();
                  String _firstUpper_266 = StringExtensions.toFirstUpper(_name_435);
                  _builder.append(_firstUpper_266, "\t\t\t\t\t");
                  _builder.append("(");
                  String _name_436 = a_11.getName();
                  String _lowerCase_161 = _name_436.toLowerCase();
                  _builder.append(_lowerCase_161, "\t\t\t\t\t");
                  _builder.append(");\t\t\t\t\t\t");
                  _builder.newLineIfNotEmpty();
                }
              }
              {
                boolean _and_7 = false;
                boolean _isDetailOf = DomainCodeUtilities.isDetailOf(be, relBe_10);
                if (!_isDetailOf) {
                  _and_7 = false;
                } else {
                  boolean _hasZeroAssociations_8 = DomainCodeUtilities.hasZeroAssociations(be);
                  _and_7 = _hasZeroAssociations_8;
                }
                if (_and_7) {
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  String _name_437 = be.getName();
                  String _lowerCase_162 = _name_437.toLowerCase();
                  _builder.append(_lowerCase_162, "\t\t\t\t\t");
                  _builder.append(".set");
                  String _name_438 = relBe_10.getName();
                  String _firstUpper_267 = StringExtensions.toFirstUpper(_name_438);
                  _builder.append(_firstUpper_267, "\t\t\t\t\t");
                  _builder.append("(");
                  String _name_439 = relBe_10.getName();
                  String _lowerCase_163 = _name_439.toLowerCase();
                  _builder.append(_lowerCase_163, "\t\t\t\t\t");
                  _builder.append(");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  _builder.append("if (add");
                  String _name_440 = be.getName();
                  String _firstUpper_268 = StringExtensions.toFirstUpper(_name_440);
                  _builder.append(_firstUpper_268, "\t\t\t\t\t");
                  _builder.append("To");
                  String _name_441 = relBe_10.getName();
                  String _firstUpper_269 = StringExtensions.toFirstUpper(_name_441);
                  _builder.append(_firstUpper_269, "\t\t\t\t\t");
                  _builder.append("(");
                  String _name_442 = be.getName();
                  String _lowerCase_164 = _name_442.toLowerCase();
                  _builder.append(_lowerCase_164, "\t\t\t\t\t");
                  _builder.append("))");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  _builder.append("\t");
                  _builder.append("pF.clearFormFields();");
                  _builder.newLine();
                } else {
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  _builder.append("if (");
                  String _name_443 = relBe_10.getName();
                  String _firstUpper_270 = StringExtensions.toFirstUpper(_name_443);
                  _builder.append(_firstUpper_270, "\t\t\t\t\t");
                  _builder.append("Controller.getInstance().");
                  _builder.append(contract_5, "\t\t\t\t\t");
                  _builder.append("(");
                  String _name_444 = be.getName();
                  String _lowerCase_165 = _name_444.toLowerCase();
                  _builder.append(_lowerCase_165, "\t\t\t\t\t");
                  _builder.append(", ");
                  String _name_445 = relBe_10.getName();
                  String _lowerCase_166 = _name_445.toLowerCase();
                  _builder.append(_lowerCase_166, "\t\t\t\t\t");
                  _builder.append("))");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t");
                  _builder.append("\t");
                  _builder.append("pF.clearFormFields();");
                  _builder.newLine();
                }
              }
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("} else");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              _builder.append("((");
              String _upperCase_73 = packageName.toUpperCase();
              _builder.append(_upperCase_73, "\t\t\t\t\t");
              _builder.append("UI) Registry.get(");
              String _upperCase_74 = packageName.toUpperCase();
              _builder.append(_upperCase_74, "\t\t\t\t\t");
              _builder.append("UI.UI)).showNotification(");
              String _upperCase_75 = packageName.toUpperCase();
              _builder.append(_upperCase_75, "\t\t\t\t\t");
              _builder.append("UI.MSG_ERR,");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\"Please fill in all required fields (*)\");");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("} catch (Exception e) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              _builder.append("((");
              String _upperCase_76 = packageName.toUpperCase();
              _builder.append(_upperCase_76, "\t\t\t\t\t");
              _builder.append("UI) Registry.get(");
              String _upperCase_77 = packageName.toUpperCase();
              _builder.append(_upperCase_77, "\t\t\t\t\t");
              _builder.append("UI.UI)).showNotification(");
              String _upperCase_78 = packageName.toUpperCase();
              _builder.append(_upperCase_78, "\t\t\t\t\t");
              _builder.append("UI.MSG_ERR,");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\"Please fill in all required fields (*)\");");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.newLine();
              {
                boolean _and_8 = false;
                boolean _and_9 = false;
                boolean _isDetailOf_1 = DomainCodeUtilities.isDetailOf(be, relBe_10);
                if (!_isDetailOf_1) {
                  _and_9 = false;
                } else {
                  boolean _hasZeroAssociations_9 = DomainCodeUtilities.hasZeroAssociations(be);
                  _and_9 = _hasZeroAssociations_9;
                }
                if (!_and_9) {
                  _and_8 = false;
                } else {
                  boolean _hasZeroAssociations_10 = DomainCodeUtilities.hasZeroAssociations(relBe_10);
                  boolean _not_11 = (!_hasZeroAssociations_10);
                  _and_8 = _not_11;
                }
                if (_and_8) {
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("private boolean add");
                  String _name_446 = be.getName();
                  String _firstUpper_271 = StringExtensions.toFirstUpper(_name_446);
                  _builder.append(_firstUpper_271, "\t\t\t");
                  _builder.append("To");
                  String _name_447 = relBe_10.getName();
                  String _firstUpper_272 = StringExtensions.toFirstUpper(_name_447);
                  _builder.append(_firstUpper_272, "\t\t\t");
                  _builder.append("(");
                  String _name_448 = be.getName();
                  String _firstUpper_273 = StringExtensions.toFirstUpper(_name_448);
                  _builder.append(_firstUpper_273, "\t\t\t");
                  _builder.append("TO ");
                  String _name_449 = be.getName();
                  String _lowerCase_167 = _name_449.toLowerCase();
                  _builder.append(_lowerCase_167, "\t\t\t");
                  _builder.append(") {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t");
                  String _upperCase_79 = packageName.toUpperCase();
                  _builder.append(_upperCase_79, "\t\t\t\t");
                  _builder.append("UI ui = Registry.get(");
                  String _upperCase_80 = packageName.toUpperCase();
                  _builder.append(_upperCase_80, "\t\t\t\t");
                  _builder.append("UI.UI);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t");
                  _builder.append("try {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t");
                  _builder.append("if (");
                  String _name_450 = be.getName();
                  String _lowerCase_168 = _name_450.toLowerCase();
                  _builder.append(_lowerCase_168, "\t\t\t\t\t");
                  _builder.append("Manager.add");
                  String _name_451 = be.getName();
                  String _firstUpper_274 = StringExtensions.toFirstUpper(_name_451);
                  _builder.append(_firstUpper_274, "\t\t\t\t\t");
                  _builder.append("(");
                  String _name_452 = be.getName();
                  String _lowerCase_169 = _name_452.toLowerCase();
                  _builder.append(_lowerCase_169, "\t\t\t\t\t");
                  _builder.append(")) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_81 = packageName.toUpperCase();
                  _builder.append(_upperCase_81, "\t\t\t\t\t\t");
                  _builder.append("UI.MSG_NOT, \"");
                  String _name_453 = be.getName();
                  String _firstUpper_275 = StringExtensions.toFirstUpper(_name_453);
                  _builder.append(_firstUpper_275, "\t\t\t\t\t\t");
                  _builder.append(" added to ");
                  String _name_454 = relBe_10.getName();
                  String _firstUpper_276 = StringExtensions.toFirstUpper(_name_454);
                  _builder.append(_firstUpper_276, "\t\t\t\t\t\t");
                  _builder.append(" \"");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("+ ");
                  String _name_455 = be.getName();
                  String _lowerCase_170 = _name_455.toLowerCase();
                  _builder.append(_lowerCase_170, "\t\t\t\t\t\t\t\t");
                  _builder.append(".get");
                  String _name_456 = relBe_10.getName();
                  String _firstUpper_277 = StringExtensions.toFirstUpper(_name_456);
                  _builder.append(_firstUpper_277, "\t\t\t\t\t\t\t\t");
                  _builder.append("());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t\t");
                  _builder.append("ui.closeSubWindow();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t\t");
                  String _name_457 = relBe_10.getName();
                  String _firstUpper_278 = StringExtensions.toFirstUpper(_name_457);
                  _builder.append(_firstUpper_278, "\t\t\t\t\t\t");
                  _builder.append("Controller.getInstance().list");
                  String _name_458 = relBe_10.getName();
                  String _firstUpper_279 = StringExtensions.toFirstUpper(_name_458);
                  _builder.append(_firstUpper_279, "\t\t\t\t\t\t");
                  String _name_459 = be.getName();
                  String _firstUpper_280 = StringExtensions.toFirstUpper(_name_459);
                  _builder.append(_firstUpper_280, "\t\t\t\t\t\t");
                  _builder.append("(");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t\t\t\t");
                  String _name_460 = be.getName();
                  String _lowerCase_171 = _name_460.toLowerCase();
                  _builder.append(_lowerCase_171, "\t\t\t\t\t\t\t\t");
                  _builder.append(".get");
                  String _name_461 = relBe_10.getName();
                  String _firstUpper_281 = StringExtensions.toFirstUpper(_name_461);
                  _builder.append(_firstUpper_281, "\t\t\t\t\t\t\t\t");
                  _builder.append("());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t\t");
                  _builder.append("return true;");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t");
                  _builder.append("} else {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t\t");
                  _builder.append("ui.showNotification(");
                  String _upperCase_82 = packageName.toUpperCase();
                  _builder.append(_upperCase_82, "\t\t\t\t\t\t");
                  _builder.append("UI.MSG_ERR,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("\"");
                  String _name_462 = be.getName();
                  String _firstUpper_282 = StringExtensions.toFirstUpper(_name_462);
                  _builder.append(_firstUpper_282, "\t\t\t\t\t\t\t\t");
                  _builder.append(" cannot be added to ");
                  String _name_463 = relBe_10.getName();
                  String _firstUpper_283 = StringExtensions.toFirstUpper(_name_463);
                  _builder.append(_firstUpper_283, "\t\t\t\t\t\t\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t\t");
                  _builder.append("return false;");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t");
                  _builder.append("} catch (Exception e) {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t");
                  _builder.append("((");
                  String _upperCase_83 = packageName.toUpperCase();
                  _builder.append(_upperCase_83, "\t\t\t\t\t");
                  _builder.append("UI) Registry.get(");
                  String _upperCase_84 = packageName.toUpperCase();
                  _builder.append(_upperCase_84, "\t\t\t\t\t");
                  _builder.append("UI.UI)).showNotification(");
                  String _upperCase_85 = packageName.toUpperCase();
                  _builder.append(_upperCase_85, "\t\t\t\t\t");
                  _builder.append("UI.MSG_ERR,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t\t\t");
                  _builder.append("e.getMessage());");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t\t");
                  _builder.append("return false;");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("}");
                  _builder.newLine();
                }
              }
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.newLine();
            }
          }
          {
            boolean _equals_29 = contract_5.equals("");
            boolean _not_12 = (!_equals_29);
            if (_not_12) {
              {
                boolean _hasZeroAssociations_11 = DomainCodeUtilities.hasZeroAssociations(be);
                boolean _not_13 = (!_hasZeroAssociations_11);
                if (_not_13) {
                  _builder.append("\t");
                  _builder.append("public void populate");
                  String _name_464 = be.getName();
                  String _firstUpper_284 = StringExtensions.toFirstUpper(_name_464);
                  _builder.append(_firstUpper_284, "\t");
                  _builder.append("Combo(List<");
                  String _name_465 = be.getName();
                  String _firstUpper_285 = StringExtensions.toFirstUpper(_name_465);
                  _builder.append(_firstUpper_285, "\t");
                  _builder.append("TO> list) {");
                  _builder.newLineIfNotEmpty();
                  {
                    boolean _hasZeroAssociations_12 = DomainCodeUtilities.hasZeroAssociations(be);
                    boolean _not_14 = (!_hasZeroAssociations_12);
                    if (_not_14) {
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("PopUp");
                      String _name_466 = relBe_10.getName();
                      String _firstUpper_286 = StringExtensions.toFirstUpper(_name_466);
                      _builder.append(_firstUpper_286, "\t\t");
                      String _name_467 = be.getName();
                      String _firstUpper_287 = StringExtensions.toFirstUpper(_name_467);
                      _builder.append(_firstUpper_287, "\t\t");
                      _builder.append("Form uF = Registry.get(PopUp");
                      String _name_468 = relBe_10.getName();
                      String _firstUpper_288 = StringExtensions.toFirstUpper(_name_468);
                      _builder.append(_firstUpper_288, "\t\t");
                      String _name_469 = be.getName();
                      String _firstUpper_289 = StringExtensions.toFirstUpper(_name_469);
                      _builder.append(_firstUpper_289, "\t\t");
                      _builder.append("Form.ID);");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("PopUp");
                      String _name_470 = be.getName();
                      String _firstUpper_290 = StringExtensions.toFirstUpper(_name_470);
                      _builder.append(_firstUpper_290, "\t\t");
                      _builder.append("Form uF = Registry.get(PopUp");
                      String _name_471 = be.getName();
                      String _firstUpper_291 = StringExtensions.toFirstUpper(_name_471);
                      _builder.append(_firstUpper_291, "\t\t");
                      _builder.append("Form.ID);");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("ComboBox combo = uF.getComboBox_1();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("combo.removeAllItems();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("for (");
                  String _name_472 = be.getName();
                  String _firstUpper_292 = StringExtensions.toFirstUpper(_name_472);
                  _builder.append(_firstUpper_292, "\t\t");
                  _builder.append("TO to : list) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("combo.addItem(to);");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("public void update");
                  String _name_473 = relBe_10.getName();
                  String _firstUpper_293 = StringExtensions.toFirstUpper(_name_473);
                  _builder.append(_firstUpper_293, "\t");
                  String _name_474 = be.getName();
                  String _firstUpper_294 = StringExtensions.toFirstUpper(_name_474);
                  _builder.append(_firstUpper_294, "\t");
                  _builder.append("sFormFields() {");
                  _builder.newLineIfNotEmpty();
                  {
                    boolean _hasZeroAssociations_13 = DomainCodeUtilities.hasZeroAssociations(be);
                    boolean _not_15 = (!_hasZeroAssociations_13);
                    if (_not_15) {
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("PopUp");
                      String _name_475 = relBe_10.getName();
                      String _firstUpper_295 = StringExtensions.toFirstUpper(_name_475);
                      _builder.append(_firstUpper_295, "\t\t");
                      String _name_476 = be.getName();
                      String _firstUpper_296 = StringExtensions.toFirstUpper(_name_476);
                      _builder.append(_firstUpper_296, "\t\t");
                      _builder.append("Form uF = Registry.get(PopUp");
                      String _name_477 = relBe_10.getName();
                      String _firstUpper_297 = StringExtensions.toFirstUpper(_name_477);
                      _builder.append(_firstUpper_297, "\t\t");
                      String _name_478 = be.getName();
                      String _firstUpper_298 = StringExtensions.toFirstUpper(_name_478);
                      _builder.append(_firstUpper_298, "\t\t");
                      _builder.append("Form.ID);");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("PopUp");
                      String _name_479 = be.getName();
                      String _firstUpper_299 = StringExtensions.toFirstUpper(_name_479);
                      _builder.append(_firstUpper_299, "\t\t");
                      _builder.append("Form uF = Registry.get(PopUp");
                      String _name_480 = be.getName();
                      String _firstUpper_300 = StringExtensions.toFirstUpper(_name_480);
                      _builder.append(_firstUpper_300, "\t\t");
                      _builder.append("Form.ID);");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("ComboBox combo = uF.getComboBox_1();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  String _name_481 = be.getName();
                  String _firstUpper_301 = StringExtensions.toFirstUpper(_name_481);
                  _builder.append(_firstUpper_301, "\t\t");
                  _builder.append("TO ");
                  String _name_482 = be.getName();
                  String _lowerCase_172 = _name_482.toLowerCase();
                  _builder.append(_lowerCase_172, "\t\t");
                  _builder.append(" = (");
                  String _name_483 = be.getName();
                  String _firstUpper_302 = StringExtensions.toFirstUpper(_name_483);
                  _builder.append(_firstUpper_302, "\t\t");
                  _builder.append("TO) combo.getValue();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("if (");
                  String _name_484 = be.getName();
                  String _lowerCase_173 = _name_484.toLowerCase();
                  _builder.append(_lowerCase_173, "\t\t");
                  _builder.append(" != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  int tF_1 = 1;
                  _builder.newLineIfNotEmpty();
                  {
                    EList<Attribute> _attributes_10 = be.getAttributes();
                    for(final Attribute a_12 : _attributes_10) {
                      {
                        String _type_30 = DomainCodeUtilities.getType(a_12);
                        boolean _equals_30 = _type_30.equals("Date");
                        if (_equals_30) {
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("TextField txt");
                          String _name_485 = a_12.getName();
                          String _firstUpper_303 = StringExtensions.toFirstUpper(_name_485);
                          _builder.append(_firstUpper_303, "\t\t\t");
                          _builder.append(" = uF.getTextField_");
                          int _plusPlus_7 = tF_1++;
                          _builder.append(_plusPlus_7, "\t\t\t");
                          _builder.append("();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("txt");
                          String _name_486 = a_12.getName();
                          String _firstUpper_304 = StringExtensions.toFirstUpper(_name_486);
                          _builder.append(_firstUpper_304, "\t\t\t");
                          _builder.append(".setValue(");
                          String _name_487 = be.getName();
                          String _lowerCase_174 = _name_487.toLowerCase();
                          _builder.append(_lowerCase_174, "\t\t\t");
                          _builder.append(".get");
                          String _name_488 = a_12.getName();
                          String _firstUpper_305 = StringExtensions.toFirstUpper(_name_488);
                          _builder.append(_firstUpper_305, "\t\t\t");
                          _builder.append("().toString());");
                          _builder.newLineIfNotEmpty();
                        } else {
                          {
                            boolean _or_4 = false;
                            String _type_31 = DomainCodeUtilities.getType(a_12);
                            boolean _equals_31 = _type_31.equals("int");
                            if (_equals_31) {
                              _or_4 = true;
                            } else {
                              String _type_32 = DomainCodeUtilities.getType(a_12);
                              boolean _equals_32 = _type_32.equals("double");
                              _or_4 = _equals_32;
                            }
                            if (_or_4) {
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("TextField txt");
                              String _name_489 = a_12.getName();
                              String _firstUpper_306 = StringExtensions.toFirstUpper(_name_489);
                              _builder.append(_firstUpper_306, "\t\t\t");
                              _builder.append(" = uF.getTextField_");
                              int _plusPlus_8 = tF_1++;
                              _builder.append(_plusPlus_8, "\t\t\t");
                              _builder.append("();");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("txt");
                              String _name_490 = a_12.getName();
                              String _firstUpper_307 = StringExtensions.toFirstUpper(_name_490);
                              _builder.append(_firstUpper_307, "\t\t\t");
                              _builder.append(".setValue(\"\"+");
                              String _name_491 = be.getName();
                              String _lowerCase_175 = _name_491.toLowerCase();
                              _builder.append(_lowerCase_175, "\t\t\t");
                              _builder.append(".get");
                              String _name_492 = a_12.getName();
                              String _firstUpper_308 = StringExtensions.toFirstUpper(_name_492);
                              _builder.append(_firstUpper_308, "\t\t\t");
                              _builder.append("());");
                              _builder.newLineIfNotEmpty();
                            } else {
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("TextField txt");
                              String _name_493 = a_12.getName();
                              String _firstUpper_309 = StringExtensions.toFirstUpper(_name_493);
                              _builder.append(_firstUpper_309, "\t\t\t");
                              _builder.append(" = uF.getTextField_");
                              int _plusPlus_9 = tF_1++;
                              _builder.append(_plusPlus_9, "\t\t\t");
                              _builder.append("();");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("txt");
                              String _name_494 = a_12.getName();
                              String _firstUpper_310 = StringExtensions.toFirstUpper(_name_494);
                              _builder.append(_firstUpper_310, "\t\t\t");
                              _builder.append(".setValue(");
                              String _name_495 = be.getName();
                              String _lowerCase_176 = _name_495.toLowerCase();
                              _builder.append(_lowerCase_176, "\t\t\t");
                              _builder.append(".get");
                              String _name_496 = a_12.getName();
                              String _firstUpper_311 = StringExtensions.toFirstUpper(_name_496);
                              _builder.append(_firstUpper_311, "\t\t\t");
                              _builder.append("());");
                              _builder.newLineIfNotEmpty();
                            }
                          }
                        }
                      }
                    }
                  }
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                }
              }
            }
          }
        }
      }
      _builder.append("\t");
      _builder.newLine();
      {
        List<Association> _detailSimpleAssociations_3 = DomainCodeUtilities.getDetailSimpleAssociations(be, associations);
        for(final Association ass_11 : _detailSimpleAssociations_3) {
          _builder.append("\t");
          EObject _eContainer_6 = ass_11.eContainer();
          BusinessEntity relBe_11 = ((BusinessEntity) _eContainer_6);
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("public void update");
          String _name_497 = ass_11.getName();
          String _firstUpper_312 = StringExtensions.toFirstUpper(_name_497);
          _builder.append(_firstUpper_312, "\t");
          _builder.append("FormFields() {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          String _name_498 = be.getName();
          String _firstUpper_313 = StringExtensions.toFirstUpper(_name_498);
          _builder.append(_firstUpper_313, "\t\t");
          String _name_499 = ass_11.getName();
          String _firstUpper_314 = StringExtensions.toFirstUpper(_name_499);
          _builder.append(_firstUpper_314, "\t\t");
          _builder.append("Form uMF = Registry.get(");
          String _name_500 = be.getName();
          String _firstUpper_315 = StringExtensions.toFirstUpper(_name_500);
          _builder.append(_firstUpper_315, "\t\t");
          String _name_501 = ass_11.getName();
          String _firstUpper_316 = StringExtensions.toFirstUpper(_name_501);
          _builder.append(_firstUpper_316, "\t\t");
          _builder.append("Form.ID);");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("ComboBox combo = uMF.getComboBox_1();");
          _builder.newLine();
          _builder.append("\t\t");
          String _name_502 = be.getName();
          String _firstUpper_317 = StringExtensions.toFirstUpper(_name_502);
          _builder.append(_firstUpper_317, "\t\t");
          _builder.append("TO ");
          String _name_503 = be.getName();
          String _lowerCase_177 = _name_503.toLowerCase();
          _builder.append(_lowerCase_177, "\t\t");
          _builder.append(" = (");
          String _name_504 = be.getName();
          String _firstUpper_318 = StringExtensions.toFirstUpper(_name_504);
          _builder.append(_firstUpper_318, "\t\t");
          _builder.append("TO) combo.getValue();");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("if (");
          String _name_505 = be.getName();
          String _lowerCase_178 = _name_505.toLowerCase();
          _builder.append(_lowerCase_178, "\t\t");
          _builder.append(" != null) {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t\t");
          int tF_2 = 1;
          _builder.newLineIfNotEmpty();
          {
            EList<Attribute> _attributes_11 = be.getAttributes();
            for(final Attribute a_13 : _attributes_11) {
              {
                String _type_33 = DomainCodeUtilities.getType(a_13);
                boolean _equals_33 = _type_33.equals("Date");
                if (_equals_33) {
                  _builder.append("\t\t\t");
                  _builder.append("uMF.getTextField_");
                  int _plusPlus_10 = tF_2++;
                  _builder.append(_plusPlus_10, "\t\t\t");
                  _builder.append("().setValue(");
                  String _name_506 = be.getName();
                  String _lowerCase_179 = _name_506.toLowerCase();
                  _builder.append(_lowerCase_179, "\t\t\t");
                  _builder.append(".get");
                  String _name_507 = a_13.getName();
                  String _firstUpper_319 = StringExtensions.toFirstUpper(_name_507);
                  _builder.append(_firstUpper_319, "\t\t\t");
                  _builder.append("().toString());");
                  _builder.newLineIfNotEmpty();
                } else {
                  {
                    boolean _or_5 = false;
                    String _type_34 = DomainCodeUtilities.getType(a_13);
                    boolean _equals_34 = _type_34.equals("int");
                    if (_equals_34) {
                      _or_5 = true;
                    } else {
                      String _type_35 = DomainCodeUtilities.getType(a_13);
                      boolean _equals_35 = _type_35.equals("double");
                      _or_5 = _equals_35;
                    }
                    if (_or_5) {
                      _builder.append("\t\t\t");
                      _builder.append("uMF.getTextField_");
                      int _plusPlus_11 = tF_2++;
                      _builder.append(_plusPlus_11, "\t\t\t");
                      _builder.append("().setValue(\"\"+");
                      String _name_508 = be.getName();
                      String _lowerCase_180 = _name_508.toLowerCase();
                      _builder.append(_lowerCase_180, "\t\t\t");
                      _builder.append(".get");
                      String _name_509 = a_13.getName();
                      String _firstUpper_320 = StringExtensions.toFirstUpper(_name_509);
                      _builder.append(_firstUpper_320, "\t\t\t");
                      _builder.append("());");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t\t\t");
                      _builder.append("uMF.getTextField_");
                      int _plusPlus_12 = tF_2++;
                      _builder.append(_plusPlus_12, "\t\t\t");
                      _builder.append("().setValue(");
                      String _name_510 = be.getName();
                      String _lowerCase_181 = _name_510.toLowerCase();
                      _builder.append(_lowerCase_181, "\t\t\t");
                      _builder.append(".get");
                      String _name_511 = a_13.getName();
                      String _firstUpper_321 = StringExtensions.toFirstUpper(_name_511);
                      _builder.append(_firstUpper_321, "\t\t\t");
                      _builder.append("());");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                }
              }
            }
          }
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.newLine();
          _builder.append("\t");
          _builder.append("public void set");
          String _name_512 = relBe_11.getName();
          String _firstUpper_322 = StringExtensions.toFirstUpper(_name_512);
          _builder.append(_firstUpper_322, "\t");
          String _name_513 = ass_11.getName();
          String _firstUpper_323 = StringExtensions.toFirstUpper(_name_513);
          _builder.append(_firstUpper_323, "\t");
          _builder.append("(");
          Attribute _iD_28 = DomainCodeUtilities.getID(relBe_11);
          String _type_36 = DomainCodeUtilities.getType(_iD_28);
          _builder.append(_type_36, "\t");
          _builder.append(" ");
          String _name_514 = relBe_11.getName();
          String _lowerCase_182 = _name_514.toLowerCase();
          _builder.append(_lowerCase_182, "\t");
          _builder.append(") {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          String _name_515 = relBe_11.getName();
          String _firstUpper_324 = StringExtensions.toFirstUpper(_name_515);
          _builder.append(_firstUpper_324, "\t\t");
          _builder.append("Controller.getInstance().set");
          String _name_516 = relBe_11.getName();
          String _firstUpper_325 = StringExtensions.toFirstUpper(_name_516);
          _builder.append(_firstUpper_325, "\t\t");
          String _name_517 = ass_11.getName();
          String _firstUpper_326 = StringExtensions.toFirstUpper(_name_517);
          _builder.append(_firstUpper_326, "\t\t");
          _builder.append("(");
          String _name_518 = relBe_11.getName();
          String _lowerCase_183 = _name_518.toLowerCase();
          _builder.append(_lowerCase_183, "\t\t");
          _builder.append(");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.newLine();
          _builder.append("\t");
          _builder.append("public void populate");
          String _name_519 = be.getName();
          String _firstUpper_327 = StringExtensions.toFirstUpper(_name_519);
          _builder.append(_firstUpper_327, "\t");
          String _name_520 = ass_11.getName();
          String _firstUpper_328 = StringExtensions.toFirstUpper(_name_520);
          _builder.append(_firstUpper_328, "\t");
          _builder.append("Combo(List<");
          String _name_521 = be.getName();
          String _firstUpper_329 = StringExtensions.toFirstUpper(_name_521);
          _builder.append(_firstUpper_329, "\t");
          _builder.append("TO> list, ");
          String _name_522 = be.getName();
          String _firstUpper_330 = StringExtensions.toFirstUpper(_name_522);
          _builder.append(_firstUpper_330, "\t");
          _builder.append("TO ");
          String _name_523 = ass_11.getName();
          String _lowerCase_184 = _name_523.toLowerCase();
          _builder.append(_lowerCase_184, "\t");
          _builder.append(") {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          String _name_524 = be.getName();
          String _firstUpper_331 = StringExtensions.toFirstUpper(_name_524);
          _builder.append(_firstUpper_331, "\t\t");
          String _name_525 = ass_11.getName();
          String _firstUpper_332 = StringExtensions.toFirstUpper(_name_525);
          _builder.append(_firstUpper_332, "\t\t");
          _builder.append("Form uMF = Registry.get(");
          String _name_526 = be.getName();
          String _firstUpper_333 = StringExtensions.toFirstUpper(_name_526);
          _builder.append(_firstUpper_333, "\t\t");
          String _name_527 = ass_11.getName();
          String _firstUpper_334 = StringExtensions.toFirstUpper(_name_527);
          _builder.append(_firstUpper_334, "\t\t");
          _builder.append("Form.ID);");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("ComboBox combo = uMF.getComboBox_1();");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("combo.removeAllItems();");
          _builder.newLine();
          _builder.append("\t\t");
          String _name_528 = be.getName();
          String _firstUpper_335 = StringExtensions.toFirstUpper(_name_528);
          _builder.append(_firstUpper_335, "\t\t");
          _builder.append("TO u");
          String _name_529 = ass_11.getName();
          String _firstUpper_336 = StringExtensions.toFirstUpper(_name_529);
          _builder.append(_firstUpper_336, "\t\t");
          _builder.append(" = null;");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("for (");
          String _name_530 = be.getName();
          String _firstUpper_337 = StringExtensions.toFirstUpper(_name_530);
          _builder.append(_firstUpper_337, "\t\t");
          _builder.append("TO to : list) {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t\t");
          _builder.append("if (to.equals(");
          String _name_531 = ass_11.getName();
          String _lowerCase_185 = _name_531.toLowerCase();
          _builder.append(_lowerCase_185, "\t\t\t");
          _builder.append("))");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t\t\t");
          _builder.append("u");
          String _name_532 = ass_11.getName();
          String _firstUpper_338 = StringExtensions.toFirstUpper(_name_532);
          _builder.append(_firstUpper_338, "\t\t\t\t");
          _builder.append(" = to;");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t\t");
          _builder.append("combo.addItem(to);");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.newLine();
          _builder.append("\t\t");
          Attribute _iD_29 = DomainCodeUtilities.getID(relBe_11);
          String type_3 = DomainCodeUtilities.getType(_iD_29);
          _builder.newLineIfNotEmpty();
          {
            boolean _equals_36 = type_3.equals("int");
            if (_equals_36) {
              _builder.append("\t\t");
              _builder.append("if (uMF.get");
              String _name_533 = relBe_11.getName();
              String _firstUpper_339 = StringExtensions.toFirstUpper(_name_533);
              _builder.append(_firstUpper_339, "\t\t");
              _builder.append("() > 0) {");
              _builder.newLineIfNotEmpty();
            } else {
              {
                boolean _equals_37 = type_3.equals("String");
                if (_equals_37) {
                  _builder.append("\t\t");
                  _builder.append("if (!uMF.get");
                  String _name_534 = relBe_11.getName();
                  String _firstUpper_340 = StringExtensions.toFirstUpper(_name_534);
                  _builder.append(_firstUpper_340, "\t\t");
                  _builder.append("().equals(\"\")) {");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
          _builder.append("\t\t\t");
          _builder.append("if (u");
          String _name_535 = ass_11.getName();
          String _firstUpper_341 = StringExtensions.toFirstUpper(_name_535);
          _builder.append(_firstUpper_341, "\t\t\t");
          _builder.append(" != null)");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t\t\t");
          _builder.append("combo.setValue(u");
          String _name_536 = ass_11.getName();
          String _firstUpper_342 = StringExtensions.toFirstUpper(_name_536);
          _builder.append(_firstUpper_342, "\t\t\t\t");
          _builder.append(");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.newLine();
          _builder.append("\t");
          String _lowerCase_186 = packageName.toLowerCase();
          String _plus_54 = ("/co/shift/" + _lowerCase_186);
          String _plus_55 = (_plus_54 + "/web/ext/");
          String _name_537 = be.getName();
          String _lowerCase_187 = _name_537.toLowerCase();
          String _plus_56 = (_plus_55 + _lowerCase_187);
          String _plus_57 = (_plus_56 + "/");
          String _name_538 = be.getName();
          String _firstUpper_343 = StringExtensions.toFirstUpper(_name_538);
          String _plus_58 = (_plus_57 + _firstUpper_343);
          String _name_539 = ass_11.getName();
          String _firstUpper_344 = StringExtensions.toFirstUpper(_name_539);
          String _plus_59 = (_plus_58 + _firstUpper_344);
          String _plus_60 = (_plus_59 + "Form.java");
          String _name_540 = be.getName();
          String _lowerCase_188 = _name_540.toLowerCase();
          String _name_541 = be.getName();
          String _firstUpper_345 = StringExtensions.toFirstUpper(_name_541);
          String _plus_61 = (_firstUpper_345 + "Controller");
          String _name_542 = relBe_11.getName();
          String _firstUpper_346 = StringExtensions.toFirstUpper(_name_542);
          String _plus_62 = ("set" + _firstUpper_346);
          String _plus_63 = (_plus_62 + "");
          String _name_543 = ass_11.getName();
          String _firstUpper_347 = StringExtensions.toFirstUpper(_name_543);
          String _plus_64 = (_plus_63 + _firstUpper_347);
          String _name_544 = be.getName();
          String _firstUpper_348 = StringExtensions.toFirstUpper(_name_544);
          String _name_545 = ass_11.getName();
          String _firstUpper_349 = StringExtensions.toFirstUpper(_name_545);
          String _plus_65 = (_firstUpper_348 + _firstUpper_349);
          String _name_546 = ass_11.getName();
          String _firstUpper_350 = StringExtensions.toFirstUpper(_name_546);
          String _plus_66 = ("update" + _firstUpper_350);
          String _plus_67 = (_plus_66 + "FormFields");
          CharSequence _generate_2 = PopUpMasterDetailTemplate.generate(packageName, _lowerCase_188, relBe_11, be, _plus_61, _plus_64, _plus_65, _plus_67);
          fsa.generateFile(_plus_60, _generate_2);
          _builder.newLineIfNotEmpty();
        }
      }
      _builder.append("}");
      _builder.newLine();
      String _endSection_1 = DomainCodeUtilities.endSection();
      _builder.append(_endSection_1, "");
      _builder.newLineIfNotEmpty();
      String _endTemplate = DomainCodeUtilities.endTemplate();
      _builder.append(_endTemplate, "");
      _builder.newLineIfNotEmpty();
      return _builder;
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
