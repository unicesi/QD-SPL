package co.shift.templates.ejb.basic;

import co.shift.generators.domain.DomainCodeUtilities;
import domainmetamodel.Association;
import domainmetamodel.Attribute;
import domainmetamodel.BusinessEntity;
import java.util.List;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.xbase.lib.StringExtensions;

@SuppressWarnings("all")
public class JPAPKTemplate {
  public static CharSequence generate(final BusinessEntity be, final String packageName, final BusinessEntity relation, final List<Association> associations, final IFileSystemAccess fsa) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package co.shift.");
    String _lowerCase = packageName.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append(".");
    String _name = be.getName();
    String _lowerCase_1 = _name.toLowerCase();
    _builder.append(_lowerCase_1, "");
    _builder.append(".entity;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.io.Serializable;");
    _builder.newLine();
    _builder.append("import javax.persistence.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("@Embeddable");
    _builder.newLine();
    _builder.append("public class ");
    String _name_1 = be.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper, "");
    String _name_2 = relation.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_1, "");
    _builder.append("PK implements Serializable {");
    _builder.newLineIfNotEmpty();
    String _lowerCase_2 = packageName.toLowerCase();
    String _plus = ("co.shift." + _lowerCase_2);
    String _plus_1 = (_plus + ".");
    String _name_3 = be.getName();
    String _lowerCase_3 = _name_3.toLowerCase();
    String _plus_2 = (_plus_1 + _lowerCase_3);
    String _plus_3 = (_plus_2 + ".entity.");
    String _name_4 = relation.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_4);
    String _plus_4 = (_plus_3 + _firstUpper_2);
    String _name_5 = be.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_5);
    String _plus_5 = (_plus_4 + _firstUpper_3);
    DomainCodeUtilities.addEntityName(_plus_5);
    _builder.newLineIfNotEmpty();
    String _lowerCase_4 = packageName.toLowerCase();
    String _plus_6 = ("co.shift." + _lowerCase_4);
    String _plus_7 = (_plus_6 + ".");
    String _name_6 = be.getName();
    String _lowerCase_5 = _name_6.toLowerCase();
    String _plus_8 = (_plus_7 + _lowerCase_5);
    String _plus_9 = (_plus_8 + ".entity.");
    String _name_7 = relation.getName();
    String _firstUpper_4 = StringExtensions.toFirstUpper(_name_7);
    String _plus_10 = (_plus_9 + _firstUpper_4);
    String _name_8 = be.getName();
    String _firstUpper_5 = StringExtensions.toFirstUpper(_name_8);
    String _plus_11 = (_plus_10 + _firstUpper_5);
    String _plus_12 = (_plus_11 + "PK");
    DomainCodeUtilities.addEntityName(_plus_12);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private static final long serialVersionUID = 1L;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    Attribute beId = DomainCodeUtilities.getID(be);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("private ");
    String _wrapperType = DomainCodeUtilities.getWrapperType(beId);
    _builder.append(_wrapperType, "\t");
    _builder.append(" ");
    String _name_9 = be.getName();
    String _lowerCase_6 = _name_9.toLowerCase();
    _builder.append(_lowerCase_6, "\t");
    String _name_10 = beId.getName();
    String _firstUpper_6 = StringExtensions.toFirstUpper(_name_10);
    _builder.append(_firstUpper_6, "\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    Attribute relationId = DomainCodeUtilities.getID(relation);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("private ");
    String _wrapperType_1 = DomainCodeUtilities.getWrapperType(relationId);
    _builder.append(_wrapperType_1, "\t");
    _builder.append(" ");
    String _name_11 = relation.getName();
    String _lowerCase_7 = _name_11.toLowerCase();
    _builder.append(_lowerCase_7, "\t");
    String _name_12 = relationId.getName();
    String _firstUpper_7 = StringExtensions.toFirstUpper(_name_12);
    _builder.append(_firstUpper_7, "\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ");
    String _name_13 = be.getName();
    String _firstUpper_8 = StringExtensions.toFirstUpper(_name_13);
    _builder.append(_firstUpper_8, "\t");
    String _name_14 = relation.getName();
    String _firstUpper_9 = StringExtensions.toFirstUpper(_name_14);
    _builder.append(_firstUpper_9, "\t");
    _builder.append("PK() {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ");
    String _wrapperType_2 = DomainCodeUtilities.getWrapperType(beId);
    _builder.append(_wrapperType_2, "\t");
    _builder.append(" get");
    String _name_15 = be.getName();
    String _firstUpper_10 = StringExtensions.toFirstUpper(_name_15);
    _builder.append(_firstUpper_10, "\t");
    String _name_16 = beId.getName();
    String _firstUpper_11 = StringExtensions.toFirstUpper(_name_16);
    _builder.append(_firstUpper_11, "\t");
    _builder.append("() {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("return this.");
    String _name_17 = be.getName();
    String _lowerCase_8 = _name_17.toLowerCase();
    _builder.append(_lowerCase_8, "\t\t");
    String _name_18 = beId.getName();
    String _firstUpper_12 = StringExtensions.toFirstUpper(_name_18);
    _builder.append(_firstUpper_12, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void set");
    String _name_19 = be.getName();
    String _firstUpper_13 = StringExtensions.toFirstUpper(_name_19);
    _builder.append(_firstUpper_13, "\t");
    String _name_20 = beId.getName();
    String _firstUpper_14 = StringExtensions.toFirstUpper(_name_20);
    _builder.append(_firstUpper_14, "\t");
    _builder.append("(");
    String _wrapperType_3 = DomainCodeUtilities.getWrapperType(beId);
    _builder.append(_wrapperType_3, "\t");
    _builder.append(" ");
    String _name_21 = be.getName();
    String _lowerCase_9 = _name_21.toLowerCase();
    _builder.append(_lowerCase_9, "\t");
    String _name_22 = beId.getName();
    String _firstUpper_15 = StringExtensions.toFirstUpper(_name_22);
    _builder.append(_firstUpper_15, "\t");
    _builder.append(") {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("this.");
    String _name_23 = be.getName();
    String _lowerCase_10 = _name_23.toLowerCase();
    _builder.append(_lowerCase_10, "\t\t");
    String _name_24 = beId.getName();
    String _firstUpper_16 = StringExtensions.toFirstUpper(_name_24);
    _builder.append(_firstUpper_16, "\t\t");
    _builder.append(" = ");
    String _name_25 = be.getName();
    String _lowerCase_11 = _name_25.toLowerCase();
    _builder.append(_lowerCase_11, "\t\t");
    String _name_26 = beId.getName();
    String _firstUpper_17 = StringExtensions.toFirstUpper(_name_26);
    _builder.append(_firstUpper_17, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ");
    String _wrapperType_4 = DomainCodeUtilities.getWrapperType(relationId);
    _builder.append(_wrapperType_4, "\t");
    _builder.append(" get");
    String _name_27 = relation.getName();
    String _firstUpper_18 = StringExtensions.toFirstUpper(_name_27);
    _builder.append(_firstUpper_18, "\t");
    String _name_28 = relationId.getName();
    String _firstUpper_19 = StringExtensions.toFirstUpper(_name_28);
    _builder.append(_firstUpper_19, "\t");
    _builder.append("() {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("return this.");
    String _name_29 = relation.getName();
    String _lowerCase_12 = _name_29.toLowerCase();
    _builder.append(_lowerCase_12, "\t\t");
    String _name_30 = relationId.getName();
    String _firstUpper_20 = StringExtensions.toFirstUpper(_name_30);
    _builder.append(_firstUpper_20, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void set");
    String _name_31 = relation.getName();
    String _firstUpper_21 = StringExtensions.toFirstUpper(_name_31);
    _builder.append(_firstUpper_21, "\t");
    String _name_32 = relationId.getName();
    String _firstUpper_22 = StringExtensions.toFirstUpper(_name_32);
    _builder.append(_firstUpper_22, "\t");
    _builder.append("(");
    String _wrapperType_5 = DomainCodeUtilities.getWrapperType(relationId);
    _builder.append(_wrapperType_5, "\t");
    _builder.append(" ");
    String _name_33 = relation.getName();
    String _lowerCase_13 = _name_33.toLowerCase();
    _builder.append(_lowerCase_13, "\t");
    String _name_34 = relationId.getName();
    String _firstUpper_23 = StringExtensions.toFirstUpper(_name_34);
    _builder.append(_firstUpper_23, "\t");
    _builder.append(") {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("this.");
    String _name_35 = relation.getName();
    String _lowerCase_14 = _name_35.toLowerCase();
    _builder.append(_lowerCase_14, "\t\t");
    String _name_36 = relationId.getName();
    String _firstUpper_24 = StringExtensions.toFirstUpper(_name_36);
    _builder.append(_firstUpper_24, "\t\t");
    _builder.append(" = ");
    String _name_37 = relation.getName();
    String _lowerCase_15 = _name_37.toLowerCase();
    _builder.append(_lowerCase_15, "\t\t");
    String _name_38 = relationId.getName();
    String _firstUpper_25 = StringExtensions.toFirstUpper(_name_38);
    _builder.append(_firstUpper_25, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public boolean equals(Object other) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (this == other) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return true;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (!(other instanceof ");
    String _name_39 = be.getName();
    String _firstUpper_26 = StringExtensions.toFirstUpper(_name_39);
    _builder.append(_firstUpper_26, "\t\t");
    String _name_40 = relation.getName();
    String _firstUpper_27 = StringExtensions.toFirstUpper(_name_40);
    _builder.append(_firstUpper_27, "\t\t");
    _builder.append("PK)) {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("return false;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    String _name_41 = be.getName();
    String _firstUpper_28 = StringExtensions.toFirstUpper(_name_41);
    _builder.append(_firstUpper_28, "\t\t");
    String _name_42 = relation.getName();
    String _firstUpper_29 = StringExtensions.toFirstUpper(_name_42);
    _builder.append(_firstUpper_29, "\t\t");
    _builder.append("PK castOther = (");
    String _name_43 = be.getName();
    String _firstUpper_30 = StringExtensions.toFirstUpper(_name_43);
    _builder.append(_firstUpper_30, "\t\t");
    String _name_44 = relation.getName();
    String _firstUpper_31 = StringExtensions.toFirstUpper(_name_44);
    _builder.append(_firstUpper_31, "\t\t");
    _builder.append("PK)other;");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("return ");
    _builder.newLine();
    {
      String _type = DomainCodeUtilities.getType(beId);
      boolean _equals = _type.equals("String");
      if (_equals) {
        _builder.append("\t\t\t");
        _builder.append("this.");
        String _name_45 = be.getName();
        String _lowerCase_16 = _name_45.toLowerCase();
        _builder.append(_lowerCase_16, "\t\t\t");
        String _name_46 = beId.getName();
        String _firstUpper_32 = StringExtensions.toFirstUpper(_name_46);
        _builder.append(_firstUpper_32, "\t\t\t");
        _builder.append(".equals(castOther.");
        String _name_47 = be.getName();
        String _lowerCase_17 = _name_47.toLowerCase();
        _builder.append(_lowerCase_17, "\t\t\t");
        String _name_48 = beId.getName();
        String _firstUpper_33 = StringExtensions.toFirstUpper(_name_48);
        _builder.append(_firstUpper_33, "\t\t\t");
        _builder.append(")");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("\t\t\t");
        _builder.append("this.");
        String _name_49 = be.getName();
        String _lowerCase_18 = _name_49.toLowerCase();
        _builder.append(_lowerCase_18, "\t\t\t");
        String _name_50 = beId.getName();
        String _firstUpper_34 = StringExtensions.toFirstUpper(_name_50);
        _builder.append(_firstUpper_34, "\t\t\t");
        _builder.append(" == castOther.");
        String _name_51 = be.getName();
        String _lowerCase_19 = _name_51.toLowerCase();
        _builder.append(_lowerCase_19, "\t\t\t");
        String _name_52 = beId.getName();
        String _firstUpper_35 = StringExtensions.toFirstUpper(_name_52);
        _builder.append(_firstUpper_35, "\t\t\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t\t");
    _builder.append("&& ");
    _builder.newLine();
    {
      String _type_1 = DomainCodeUtilities.getType(relationId);
      boolean _equals_1 = _type_1.equals("String");
      if (_equals_1) {
        _builder.append("\t\t\t");
        _builder.append("this.");
        String _name_53 = relation.getName();
        String _lowerCase_20 = _name_53.toLowerCase();
        _builder.append(_lowerCase_20, "\t\t\t");
        String _name_54 = relationId.getName();
        String _firstUpper_36 = StringExtensions.toFirstUpper(_name_54);
        _builder.append(_firstUpper_36, "\t\t\t");
        _builder.append(".equals(castOther.");
        String _name_55 = relation.getName();
        String _lowerCase_21 = _name_55.toLowerCase();
        _builder.append(_lowerCase_21, "\t\t\t");
        String _name_56 = relationId.getName();
        String _firstUpper_37 = StringExtensions.toFirstUpper(_name_56);
        _builder.append(_firstUpper_37, "\t\t\t");
        _builder.append(")");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("\t\t\t");
        _builder.append("this.");
        String _name_57 = relation.getName();
        String _lowerCase_22 = _name_57.toLowerCase();
        _builder.append(_lowerCase_22, "\t\t\t");
        String _name_58 = relationId.getName();
        String _firstUpper_38 = StringExtensions.toFirstUpper(_name_58);
        _builder.append(_firstUpper_38, "\t\t\t");
        _builder.append(" == castOther.");
        String _name_59 = relation.getName();
        String _lowerCase_23 = _name_59.toLowerCase();
        _builder.append(_lowerCase_23, "\t\t\t");
        String _name_60 = relationId.getName();
        String _firstUpper_39 = StringExtensions.toFirstUpper(_name_60);
        _builder.append(_firstUpper_39, "\t\t\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t\t");
    _builder.append(";");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public int hashCode() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("final int prime = 31;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("int hash = 17;");
    _builder.newLine();
    {
      String _type_2 = DomainCodeUtilities.getType(beId);
      boolean _equals_2 = _type_2.equals("String");
      if (_equals_2) {
        _builder.append("\t\t");
        _builder.append("hash = hash * prime + this.");
        String _name_61 = be.getName();
        String _lowerCase_24 = _name_61.toLowerCase();
        _builder.append(_lowerCase_24, "\t\t");
        String _name_62 = beId.getName();
        String _firstUpper_40 = StringExtensions.toFirstUpper(_name_62);
        _builder.append(_firstUpper_40, "\t\t");
        _builder.append(".hashCode();");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("\t\t");
        _builder.append("hash = hash * prime + this.");
        String _name_63 = be.getName();
        String _lowerCase_25 = _name_63.toLowerCase();
        _builder.append(_lowerCase_25, "\t\t");
        String _name_64 = beId.getName();
        String _firstUpper_41 = StringExtensions.toFirstUpper(_name_64);
        _builder.append(_firstUpper_41, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      }
    }
    {
      String _type_3 = DomainCodeUtilities.getType(relationId);
      boolean _equals_3 = _type_3.equals("String");
      if (_equals_3) {
        _builder.append("\t\t");
        _builder.append("hash = hash * prime + this.");
        String _name_65 = relation.getName();
        String _lowerCase_26 = _name_65.toLowerCase();
        _builder.append(_lowerCase_26, "\t\t");
        String _name_66 = relationId.getName();
        String _firstUpper_42 = StringExtensions.toFirstUpper(_name_66);
        _builder.append(_firstUpper_42, "\t\t");
        _builder.append(".hashCode();");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("\t\t");
        _builder.append("hash = hash * prime + this.");
        String _name_67 = relation.getName();
        String _lowerCase_27 = _name_67.toLowerCase();
        _builder.append(_lowerCase_27, "\t\t");
        String _name_68 = relationId.getName();
        String _firstUpper_43 = StringExtensions.toFirstUpper(_name_68);
        _builder.append(_firstUpper_43, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return hash;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
