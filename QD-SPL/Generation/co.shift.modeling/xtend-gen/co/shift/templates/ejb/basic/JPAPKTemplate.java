package co.shift.templates.ejb.basic;

import co.shift.generators.domain.DomainCodeGenerator;
import domainmetamodel.Association;
import domainmetamodel.Attribute;
import domainmetamodel.BusinessEntity;
import java.util.List;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.xbase.lib.StringExtensions;

@SuppressWarnings("all")
public class JPAPKTemplate {
  public static CharSequence generate(final BusinessEntity be, final String packageName, final BusinessEntity relation, final List<Association> associations, final IFileSystemAccess fsa) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package co.shift.");
    String _lowerCase = packageName.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append(".");
    String _name = be.getName();
    String _lowerCase_1 = _name.toLowerCase();
    _builder.append(_lowerCase_1, "");
    _builder.append(".entity;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.io.Serializable;");
    _builder.newLine();
    _builder.append("import javax.persistence.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("@Embeddable");
    _builder.newLine();
    _builder.append("public class ");
    String _name_1 = relation.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper, "");
    String _name_2 = be.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_1, "");
    _builder.append("PK implements Serializable {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private static final long serialVersionUID = 1L;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    Attribute beId = DomainCodeGenerator.getID(be);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("private ");
    String _type = DomainCodeGenerator.getType(beId);
    _builder.append(_type, "\t");
    _builder.append(" ");
    String _name_3 = beId.getName();
    String _lowerCase_2 = _name_3.toLowerCase();
    _builder.append(_lowerCase_2, "\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    Attribute relationId = DomainCodeGenerator.getID(relation);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("private ");
    String _type_1 = DomainCodeGenerator.getType(relationId);
    _builder.append(_type_1, "\t");
    _builder.append(" ");
    String _name_4 = relationId.getName();
    String _lowerCase_3 = _name_4.toLowerCase();
    _builder.append(_lowerCase_3, "\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ");
    String _name_5 = relation.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_5);
    _builder.append(_firstUpper_2, "\t");
    String _name_6 = be.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_6);
    _builder.append(_firstUpper_3, "\t");
    _builder.append("PK() {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ");
    String _type_2 = DomainCodeGenerator.getType(beId);
    _builder.append(_type_2, "\t");
    _builder.append(" get");
    String _name_7 = beId.getName();
    String _firstUpper_4 = StringExtensions.toFirstUpper(_name_7);
    _builder.append(_firstUpper_4, "\t");
    _builder.append("() {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("return this.");
    String _name_8 = beId.getName();
    String _lowerCase_4 = _name_8.toLowerCase();
    _builder.append(_lowerCase_4, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void set");
    String _name_9 = beId.getName();
    String _firstUpper_5 = StringExtensions.toFirstUpper(_name_9);
    _builder.append(_firstUpper_5, "\t");
    _builder.append("(");
    String _type_3 = DomainCodeGenerator.getType(beId);
    _builder.append(_type_3, "\t");
    _builder.append(" ");
    String _name_10 = beId.getName();
    String _lowerCase_5 = _name_10.toLowerCase();
    _builder.append(_lowerCase_5, "\t");
    _builder.append(") {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("this.");
    String _name_11 = beId.getName();
    String _lowerCase_6 = _name_11.toLowerCase();
    _builder.append(_lowerCase_6, "\t\t");
    _builder.append(" = ");
    String _name_12 = beId.getName();
    String _lowerCase_7 = _name_12.toLowerCase();
    _builder.append(_lowerCase_7, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ");
    String _type_4 = DomainCodeGenerator.getType(relationId);
    _builder.append(_type_4, "\t");
    _builder.append(" get");
    String _name_13 = relationId.getName();
    String _firstUpper_6 = StringExtensions.toFirstUpper(_name_13);
    _builder.append(_firstUpper_6, "\t");
    _builder.append("() {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("return this.");
    String _name_14 = relationId.getName();
    String _lowerCase_8 = _name_14.toLowerCase();
    _builder.append(_lowerCase_8, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void set");
    String _name_15 = relationId.getName();
    String _firstUpper_7 = StringExtensions.toFirstUpper(_name_15);
    _builder.append(_firstUpper_7, "\t");
    _builder.append("(");
    String _type_5 = DomainCodeGenerator.getType(relationId);
    _builder.append(_type_5, "\t");
    _builder.append(" ");
    String _name_16 = relationId.getName();
    String _lowerCase_9 = _name_16.toLowerCase();
    _builder.append(_lowerCase_9, "\t");
    _builder.append(") {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("this.");
    String _name_17 = relationId.getName();
    String _lowerCase_10 = _name_17.toLowerCase();
    _builder.append(_lowerCase_10, "\t\t");
    _builder.append(" = ");
    String _name_18 = relationId.getName();
    String _lowerCase_11 = _name_18.toLowerCase();
    _builder.append(_lowerCase_11, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public boolean equals(Object other) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (this == other) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return true;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (!(other instanceof ");
    String _name_19 = relation.getName();
    String _firstUpper_8 = StringExtensions.toFirstUpper(_name_19);
    _builder.append(_firstUpper_8, "\t\t");
    String _name_20 = be.getName();
    String _firstUpper_9 = StringExtensions.toFirstUpper(_name_20);
    _builder.append(_firstUpper_9, "\t\t");
    _builder.append("PK)) {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("return false;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    String _name_21 = relation.getName();
    String _firstUpper_10 = StringExtensions.toFirstUpper(_name_21);
    _builder.append(_firstUpper_10, "\t\t");
    String _name_22 = be.getName();
    String _firstUpper_11 = StringExtensions.toFirstUpper(_name_22);
    _builder.append(_firstUpper_11, "\t\t");
    _builder.append("PK castOther = (");
    String _name_23 = relation.getName();
    String _firstUpper_12 = StringExtensions.toFirstUpper(_name_23);
    _builder.append(_firstUpper_12, "\t\t");
    String _name_24 = be.getName();
    String _firstUpper_13 = StringExtensions.toFirstUpper(_name_24);
    _builder.append(_firstUpper_13, "\t\t");
    _builder.append("PK)other;");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("return ");
    _builder.newLine();
    {
      String _type_6 = DomainCodeGenerator.getType(beId);
      boolean _equals = _type_6.equals("String");
      if (_equals) {
        _builder.append("\t\t\t");
        _builder.append("this.");
        String _name_25 = beId.getName();
        String _lowerCase_12 = _name_25.toLowerCase();
        _builder.append(_lowerCase_12, "\t\t\t");
        _builder.append(".equals(castOther.");
        String _name_26 = beId.getName();
        String _lowerCase_13 = _name_26.toLowerCase();
        _builder.append(_lowerCase_13, "\t\t\t");
        _builder.append(")");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("\t\t\t");
        _builder.append("this.");
        String _name_27 = beId.getName();
        String _lowerCase_14 = _name_27.toLowerCase();
        _builder.append(_lowerCase_14, "\t\t\t");
        _builder.append(" == castOther.");
        String _name_28 = beId.getName();
        String _lowerCase_15 = _name_28.toLowerCase();
        _builder.append(_lowerCase_15, "\t\t\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t\t");
    _builder.append("&& ");
    _builder.newLine();
    {
      String _type_7 = DomainCodeGenerator.getType(relationId);
      boolean _equals_1 = _type_7.equals("String");
      if (_equals_1) {
        _builder.append("\t\t\t");
        _builder.append("this.");
        String _name_29 = relationId.getName();
        String _lowerCase_16 = _name_29.toLowerCase();
        _builder.append(_lowerCase_16, "\t\t\t");
        _builder.append(".equals(castOther.");
        String _name_30 = relationId.getName();
        String _lowerCase_17 = _name_30.toLowerCase();
        _builder.append(_lowerCase_17, "\t\t\t");
        _builder.append(")");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("\t\t\t");
        _builder.append("this.");
        String _name_31 = relationId.getName();
        String _lowerCase_18 = _name_31.toLowerCase();
        _builder.append(_lowerCase_18, "\t\t\t");
        _builder.append(" == castOther.");
        String _name_32 = relationId.getName();
        String _lowerCase_19 = _name_32.toLowerCase();
        _builder.append(_lowerCase_19, "\t\t\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t\t");
    _builder.append(";");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public int hashCode() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("final int prime = 31;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("int hash = 17;");
    _builder.newLine();
    {
      String _type_8 = DomainCodeGenerator.getType(beId);
      boolean _equals_2 = _type_8.equals("String");
      if (_equals_2) {
        _builder.append("\t\t");
        _builder.append("hash = hash * prime + this.");
        String _name_33 = beId.getName();
        String _lowerCase_20 = _name_33.toLowerCase();
        _builder.append(_lowerCase_20, "\t\t");
        _builder.append(".hashCode();");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("\t\t");
        _builder.append("hash = hash * prime + this.");
        String _name_34 = beId.getName();
        String _lowerCase_21 = _name_34.toLowerCase();
        _builder.append(_lowerCase_21, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      }
    }
    {
      String _type_9 = DomainCodeGenerator.getType(relationId);
      boolean _equals_3 = _type_9.equals("String");
      if (_equals_3) {
        _builder.append("\t\t");
        _builder.append("hash = hash * prime + this.");
        String _name_35 = relationId.getName();
        String _lowerCase_22 = _name_35.toLowerCase();
        _builder.append(_lowerCase_22, "\t\t");
        _builder.append(".hashCode();");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("\t\t");
        _builder.append("hash = hash * prime + this.");
        String _name_36 = relationId.getName();
        String _lowerCase_23 = _name_36.toLowerCase();
        _builder.append(_lowerCase_23, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return hash;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
