package co.shift.templates.ejb.contributed.authenticity;

import co.shift.generators.domain.DomainCodeGenerator;
import domainmetamodel.Attribute;
import domainmetamodel.BusinessEntity;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.StringExtensions;

@SuppressWarnings("all")
public class LockoutTemplate {
  public static CharSequence generate(final String packageName, final BusinessEntity be) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package co.shift.");
    String _lowerCase = packageName.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append(".");
    String _name = be.getName();
    String _lowerCase_1 = _name.toLowerCase();
    _builder.append(_lowerCase_1, "");
    _builder.append(".control;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import javax.ejb.Stateless;");
    _builder.newLine();
    _builder.append("import javax.persistence.EntityManager;");
    _builder.newLine();
    _builder.append("import javax.persistence.PersistenceContext;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import co.shift.");
    String _lowerCase_2 = packageName.toLowerCase();
    _builder.append(_lowerCase_2, "");
    _builder.append(".to.");
    String _name_1 = be.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper, "");
    _builder.append("TO;");
    _builder.newLineIfNotEmpty();
    _builder.append("import co.shift.");
    String _lowerCase_3 = packageName.toLowerCase();
    _builder.append(_lowerCase_3, "");
    _builder.append(".");
    String _name_2 = be.getName();
    String _lowerCase_4 = _name_2.toLowerCase();
    _builder.append(_lowerCase_4, "");
    _builder.append(".entity.Attempt;");
    _builder.newLineIfNotEmpty();
    _builder.append("import co.shift.");
    String _lowerCase_5 = packageName.toLowerCase();
    _builder.append(_lowerCase_5, "");
    _builder.append(".");
    String _name_3 = be.getName();
    String _lowerCase_6 = _name_3.toLowerCase();
    _builder.append(_lowerCase_6, "");
    _builder.append(".entity.");
    String _name_4 = be.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_4);
    _builder.append(_firstUpper_1, "");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("@Stateless");
    _builder.newLine();
    _builder.append("public class LockoutManager {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private static final int MAX_ATTEMPTS = 5;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@PersistenceContext(unitName = \"co.shift.");
    String _lowerCase_7 = packageName.toLowerCase();
    _builder.append(_lowerCase_7, "\t");
    _builder.append(".");
    String _name_5 = be.getName();
    String _lowerCase_8 = _name_5.toLowerCase();
    _builder.append(_lowerCase_8, "\t");
    _builder.append("\")");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("private EntityManager em;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    Attribute beId = DomainCodeGenerator.getID(be);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("public ");
    String _name_6 = be.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_6);
    _builder.append(_firstUpper_2, "\t");
    _builder.append("TO authenticate(");
    String _type = DomainCodeGenerator.getType(beId);
    _builder.append(_type, "\t");
    _builder.append(" ");
    String _name_7 = beId.getName();
    String _lowerCase_9 = _name_7.toLowerCase();
    _builder.append(_lowerCase_9, "\t");
    _builder.append("ID, String password) throws Exception {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("int attempts = getAttempts(");
    String _name_8 = beId.getName();
    String _lowerCase_10 = _name_8.toLowerCase();
    _builder.append(_lowerCase_10, "\t\t");
    _builder.append("ID);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("if (attempts < MAX_ATTEMPTS) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    String _name_9 = be.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_9);
    _builder.append(_firstUpper_3, "\t\t\t");
    _builder.append(" found");
    String _name_10 = be.getName();
    String _firstUpper_4 = StringExtensions.toFirstUpper(_name_10);
    _builder.append(_firstUpper_4, "\t\t\t");
    _builder.append(" = em.find(");
    String _name_11 = be.getName();
    String _firstUpper_5 = StringExtensions.toFirstUpper(_name_11);
    _builder.append(_firstUpper_5, "\t\t\t");
    _builder.append(".class, ");
    String _name_12 = beId.getName();
    String _lowerCase_11 = _name_12.toLowerCase();
    _builder.append(_lowerCase_11, "\t\t\t");
    _builder.append("ID);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("if (found");
    String _name_13 = be.getName();
    String _firstUpper_6 = StringExtensions.toFirstUpper(_name_13);
    _builder.append(_firstUpper_6, "\t\t\t");
    _builder.append(" != null) {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("if (found");
    String _name_14 = be.getName();
    String _firstUpper_7 = StringExtensions.toFirstUpper(_name_14);
    _builder.append(_firstUpper_7, "\t\t\t\t");
    _builder.append(".getPassword().equals(password)){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t\t");
    _builder.append("setAttempts(");
    String _name_15 = beId.getName();
    String _lowerCase_12 = _name_15.toLowerCase();
    _builder.append(_lowerCase_12, "\t\t\t\t\t");
    _builder.append("ID, 0);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t\t");
    _builder.append("return found");
    String _name_16 = be.getName();
    String _firstUpper_8 = StringExtensions.toFirstUpper(_name_16);
    _builder.append(_firstUpper_8, "\t\t\t\t\t");
    _builder.append(".toTO();");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("else {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("attempts++;");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("setAttempts(");
    String _name_17 = beId.getName();
    String _lowerCase_13 = _name_17.toLowerCase();
    _builder.append(_lowerCase_13, "\t\t\t\t\t");
    _builder.append("ID, attempts);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t\t");
    _builder.append("throw new Exception(\"Incorrect password. You have \"");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t\t");
    _builder.append("+ (MAX_ATTEMPTS - attempts + 1) + \" attempts left\");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("} else");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("throw new Exception(\"");
    String _name_18 = be.getName();
    String _firstUpper_9 = StringExtensions.toFirstUpper(_name_18);
    _builder.append(_firstUpper_9, "\t\t\t\t");
    _builder.append(" doesn\'t exists\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("} else");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("throw new Exception(");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("\"Your account has been locked due too many attempts\");");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private int getAttempts(");
    String _type_1 = DomainCodeGenerator.getType(beId);
    _builder.append(_type_1, "\t");
    _builder.append(" ");
    String _name_19 = beId.getName();
    String _lowerCase_14 = _name_19.toLowerCase();
    _builder.append(_lowerCase_14, "\t");
    _builder.append("ID) {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("Attempt attempts = em.find(Attempt.class, ");
    String _name_20 = beId.getName();
    String _lowerCase_15 = _name_20.toLowerCase();
    _builder.append(_lowerCase_15, "\t\t");
    _builder.append("ID);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("if (attempts == null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Attempt newAttempt = new Attempt();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("newAttempt.set");
    String _name_21 = be.getName();
    String _firstUpper_10 = StringExtensions.toFirstUpper(_name_21);
    _builder.append(_firstUpper_10, "\t\t\t");
    _builder.append("(");
    String _name_22 = beId.getName();
    String _lowerCase_16 = _name_22.toLowerCase();
    _builder.append(_lowerCase_16, "\t\t\t");
    _builder.append("ID);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("newAttempt.setAttempts(0);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("em.persist(newAttempt);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("em.flush();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return 0;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} else");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return attempts.getAttempts();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private void setAttempts(");
    String _type_2 = DomainCodeGenerator.getType(beId);
    _builder.append(_type_2, "\t");
    _builder.append(" ");
    String _name_23 = beId.getName();
    String _lowerCase_17 = _name_23.toLowerCase();
    _builder.append(_lowerCase_17, "\t");
    _builder.append("ID, int newAttempts) {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("Attempt attempts = em.find(Attempt.class, ");
    String _name_24 = beId.getName();
    String _lowerCase_18 = _name_24.toLowerCase();
    _builder.append(_lowerCase_18, "\t\t");
    _builder.append("ID);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("attempts.setAttempts(newAttempts);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("em.merge(attempts);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("em.flush();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
