package co.shift.templates.ejb.contributed.authenticity;

import co.shift.generators.domain.DomainCodeGenerator;
import domainmetamodel.Attribute;
import domainmetamodel.BusinessEntity;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.StringExtensions;

@SuppressWarnings("all")
public class AttemptJPATemplate {
  public static CharSequence generate(final String packageName, final BusinessEntity be) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package co.shift.");
    String _lowerCase = packageName.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append(".");
    String _name = be.getName();
    String _lowerCase_1 = _name.toLowerCase();
    _builder.append(_lowerCase_1, "");
    _builder.append(".entity;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.io.Serializable;");
    _builder.newLine();
    _builder.append("import javax.persistence.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("@Entity");
    _builder.newLine();
    _builder.append("@Table(name=\"Attempts\")");
    _builder.newLine();
    _builder.append("public class Attempt implements Serializable {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private static final long serialVersionUID = 1L;");
    _builder.newLine();
    Attribute beId = DomainCodeGenerator.getID(be);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("@Id");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private ");
    String _type = DomainCodeGenerator.getType(beId);
    _builder.append(_type, "\t");
    _builder.append(" ");
    String _name_1 = be.getName();
    String _lowerCase_2 = _name_1.toLowerCase();
    _builder.append(_lowerCase_2, "\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private int attempts;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public Attempt() {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ");
    String _type_1 = DomainCodeGenerator.getType(beId);
    _builder.append(_type_1, "\t");
    _builder.append(" get");
    String _name_2 = be.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper, "\t");
    _builder.append("() {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("return this.");
    String _name_3 = be.getName();
    String _lowerCase_3 = _name_3.toLowerCase();
    _builder.append(_lowerCase_3, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void set");
    String _name_4 = be.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_4);
    _builder.append(_firstUpper_1, "\t");
    _builder.append("(");
    String _type_2 = DomainCodeGenerator.getType(beId);
    _builder.append(_type_2, "\t");
    _builder.append(" ");
    String _name_5 = be.getName();
    String _lowerCase_4 = _name_5.toLowerCase();
    _builder.append(_lowerCase_4, "\t");
    _builder.append(") {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("this.user = ");
    String _name_6 = be.getName();
    String _lowerCase_5 = _name_6.toLowerCase();
    _builder.append(_lowerCase_5, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public int getAttempts() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.attempts;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setAttempts(int attempts) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.attempts = attempts;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
