package co.shift.templates.database.contributed.authenticity;

import co.shift.generators.domain.DomainCodeUtilities;
import domainmetamodel.Attribute;
import domainmetamodel.BusinessEntity;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.StringExtensions;

@SuppressWarnings("all")
public class AuthenticatorScriptTemplate {
  public static CharSequence generate(final String packageName, final BusinessEntity authBe) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("USE `");
    _builder.append(packageName, "");
    _builder.append("` ;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("-- -----------------------------------------------------");
    _builder.newLine();
    _builder.append("-- Table `");
    _builder.append(packageName, "");
    _builder.append("`.`Roles`");
    _builder.newLineIfNotEmpty();
    _builder.append("-- -----------------------------------------------------");
    _builder.newLine();
    _builder.append("DROP TABLE IF EXISTS `");
    _builder.append(packageName, "");
    _builder.append("`.`Roles` ;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("CREATE TABLE IF NOT EXISTS `");
    _builder.append(packageName, "");
    _builder.append("`.`Roles` (");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("`name` ");
    String _mySqlEquivalent = DomainCodeUtilities.getMySqlEquivalent("String");
    _builder.append(_mySqlEquivalent, "  ");
    _builder.append(" NOT NULL,");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("`description` ");
    String _mySqlEquivalent_1 = DomainCodeUtilities.getMySqlEquivalent("String");
    _builder.append(_mySqlEquivalent_1, "  ");
    _builder.append(" NOT NULL,");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("PRIMARY KEY (`name`))");
    _builder.newLine();
    _builder.append("ENGINE = InnoDB;");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("-- -----------------------------------------------------");
    _builder.newLine();
    _builder.append("-- Table `");
    _builder.append(packageName, "");
    _builder.append("`.`Services`");
    _builder.newLineIfNotEmpty();
    _builder.append("-- -----------------------------------------------------");
    _builder.newLine();
    _builder.append("DROP TABLE IF EXISTS `");
    _builder.append(packageName, "");
    _builder.append("`.`Services` ;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("CREATE TABLE IF NOT EXISTS `");
    _builder.append(packageName, "");
    _builder.append("`.`Services` (");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("`name` ");
    String _mySqlEquivalent_2 = DomainCodeUtilities.getMySqlEquivalent("String");
    _builder.append(_mySqlEquivalent_2, "  ");
    _builder.append(" NOT NULL,");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("`description` ");
    String _mySqlEquivalent_3 = DomainCodeUtilities.getMySqlEquivalent("String");
    _builder.append(_mySqlEquivalent_3, "  ");
    _builder.append(" NOT NULL,");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("PRIMARY KEY (`name`))");
    _builder.newLine();
    _builder.append("ENGINE = InnoDB;");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("-- -----------------------------------------------------");
    _builder.newLine();
    _builder.append("-- Table `");
    _builder.append(packageName, "");
    _builder.append("`.`Rights`");
    _builder.newLineIfNotEmpty();
    _builder.append("-- -----------------------------------------------------");
    _builder.newLine();
    _builder.append("DROP TABLE IF EXISTS `");
    _builder.append(packageName, "");
    _builder.append("`.`Rights` ;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("CREATE TABLE IF NOT EXISTS `");
    _builder.append(packageName, "");
    _builder.append("`.`Rights` (");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("`role` ");
    String _mySqlEquivalent_4 = DomainCodeUtilities.getMySqlEquivalent("String");
    _builder.append(_mySqlEquivalent_4, "  ");
    _builder.append(" NOT NULL,");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("`service` ");
    String _mySqlEquivalent_5 = DomainCodeUtilities.getMySqlEquivalent("String");
    _builder.append(_mySqlEquivalent_5, "  ");
    _builder.append(" NOT NULL,");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("PRIMARY KEY (`role`, `service`),");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("INDEX `fk_Roles_has_Services_Services1_idx` (`service` ASC),");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("INDEX `fk_Roles_has_Services_Roles1_idx` (`role` ASC),");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("CONSTRAINT `fk_Roles_has_Services_Roles1`");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("FOREIGN KEY (`role`)");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("REFERENCES `");
    _builder.append(packageName, "    ");
    _builder.append("`.`Roles` (`name`)");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("ON DELETE NO ACTION");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("ON UPDATE NO ACTION,");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("CONSTRAINT `fk_Roles_has_Services_Services1`");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("FOREIGN KEY (`service`)");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("REFERENCES `");
    _builder.append(packageName, "    ");
    _builder.append("`.`Services` (`name`)");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("ON DELETE NO ACTION");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("ON UPDATE NO ACTION)");
    _builder.newLine();
    _builder.append("ENGINE = InnoDB;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("-- -----------------------------------------------------");
    _builder.newLine();
    _builder.append("-- Table `");
    _builder.append(packageName, "");
    _builder.append("`.`");
    String _name = authBe.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "");
    _builder.append("Role`");
    _builder.newLineIfNotEmpty();
    _builder.append("-- -----------------------------------------------------");
    _builder.newLine();
    _builder.append("DROP TABLE IF EXISTS `");
    _builder.append(packageName, "");
    _builder.append("`.`");
    String _name_1 = authBe.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "");
    _builder.append("Role` ;");
    _builder.newLineIfNotEmpty();
    Attribute authID = DomainCodeUtilities.getID(authBe);
    _builder.newLineIfNotEmpty();
    _builder.append("CREATE TABLE IF NOT EXISTS `");
    _builder.append(packageName, "");
    _builder.append("`.`");
    String _name_2 = authBe.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_2, "");
    _builder.append("Role` (");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("`");
    String _name_3 = authBe.getName();
    String _lowerCase = _name_3.toLowerCase();
    _builder.append(_lowerCase, "  ");
    _builder.append("` ");
    String _mySqlEquivalent_6 = DomainCodeUtilities.getMySqlEquivalent("String");
    _builder.append(_mySqlEquivalent_6, "  ");
    _builder.append(" NOT NULL,");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("`role` ");
    String _mySqlEquivalent_7 = DomainCodeUtilities.getMySqlEquivalent("String");
    _builder.append(_mySqlEquivalent_7, "  ");
    _builder.append(" NOT NULL,");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("PRIMARY KEY (`");
    String _name_4 = authBe.getName();
    String _lowerCase_1 = _name_4.toLowerCase();
    _builder.append(_lowerCase_1, "  ");
    _builder.append("`, `role`),");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("INDEX `fk_");
    String _name_5 = authBe.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_5);
    _builder.append(_firstUpper_3, "  ");
    _builder.append("_has_Role_Role_idx` (`role` ASC),");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("INDEX `fk_U");
    String _name_6 = authBe.getName();
    String _firstUpper_4 = StringExtensions.toFirstUpper(_name_6);
    _builder.append(_firstUpper_4, "  ");
    _builder.append("_has_Role_");
    String _name_7 = authBe.getName();
    String _firstUpper_5 = StringExtensions.toFirstUpper(_name_7);
    _builder.append(_firstUpper_5, "  ");
    _builder.append("_idx` (`");
    String _name_8 = authBe.getName();
    String _lowerCase_2 = _name_8.toLowerCase();
    _builder.append(_lowerCase_2, "  ");
    _builder.append("` ASC),");
    _builder.newLineIfNotEmpty();
    _builder.append("  ");
    _builder.append("CONSTRAINT `fk_");
    String _name_9 = authBe.getName();
    String _firstUpper_6 = StringExtensions.toFirstUpper(_name_9);
    _builder.append(_firstUpper_6, "  ");
    _builder.append("_has_Role_");
    String _name_10 = authBe.getName();
    String _firstUpper_7 = StringExtensions.toFirstUpper(_name_10);
    _builder.append(_firstUpper_7, "  ");
    _builder.append("`");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("FOREIGN KEY (`");
    String _name_11 = authBe.getName();
    String _lowerCase_3 = _name_11.toLowerCase();
    _builder.append(_lowerCase_3, "    ");
    _builder.append("`)");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("REFERENCES `");
    _builder.append(packageName, "    ");
    _builder.append("`.`");
    String _name_12 = authBe.getName();
    String _firstUpper_8 = StringExtensions.toFirstUpper(_name_12);
    _builder.append(_firstUpper_8, "    ");
    _builder.append("` (`");
    String _name_13 = authID.getName();
    String _lowerCase_4 = _name_13.toLowerCase();
    _builder.append(_lowerCase_4, "    ");
    _builder.append("`)");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("ON DELETE NO ACTION");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("ON UPDATE NO ACTION,");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("CONSTRAINT `fk_");
    String _name_14 = authBe.getName();
    String _firstUpper_9 = StringExtensions.toFirstUpper(_name_14);
    _builder.append(_firstUpper_9, "  ");
    _builder.append("_has_Role_Role`");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("FOREIGN KEY (`role`)");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("REFERENCES `");
    _builder.append(packageName, "    ");
    _builder.append("`.`Roles` (`name`)");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("ON DELETE NO ACTION");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("ON UPDATE NO ACTION)");
    _builder.newLine();
    _builder.append("ENGINE = InnoDB;");
    _builder.newLine();
    return _builder;
  }
}
