package co.shift.templates.web.basic

import domainmetamodel.BusinessEntity
import domainmetamodel.Simple
import co.shift.generators.domain.DomainCodeUtilities
import domainmetamodel.Multiple
import domainmetamodel.Create
import domainmetamodel.Update
import domainmetamodel.Delete

class FormTemplate {
	
	def static generate(String packageName, BusinessEntity be) '''
		package co.shift.«packageName.toLowerCase()».web.ext.«be.name.toLowerCase»;
		
		import java.util.Date;
		
		«FOR ass : be.associations»
		«IF ass instanceof Simple»
		«var asso = ass as Simple»
		import co.shift.«packageName.toLowerCase()».to.«asso.relatedEntity.name.toFirstUpper»TO;
		«ENDIF»
		«ENDFOR»
		
		import com.vaadin.annotations.AutoGenerated;
		import com.vaadin.event.ItemClickEvent;
		import com.vaadin.event.ItemClickEvent.ItemClickListener;
		import com.vaadin.ui.AbsoluteLayout;
		import com.vaadin.ui.Button;
		import com.vaadin.ui.Button.ClickEvent;
		import com.vaadin.ui.Button.ClickListener;
		import com.vaadin.ui.CustomComponent;
		import com.vaadin.ui.Label;
		import com.vaadin.ui.PopupDateField;
		import com.vaadin.ui.TabSheet;
		import com.vaadin.ui.Table;
		import com.vaadin.ui.TextArea;
		import com.vaadin.ui.TextField;
		
		public class «be.name.toFirstUpper»Form extends CustomComponent {
			
			@AutoGenerated
			private AbsoluteLayout mainLayout;
			
			@AutoGenerated
			private AbsoluteLayout absoluteLayout_1;
			@AutoGenerated
			private AbsoluteLayout absoluteLayout_2;
			
			«var aL = 3»
			«FOR ass : be.associations»
			«IF ass instanceof Simple»
			@AutoGenerated
			private AbsoluteLayout absoluteLayout_«aL++»;
			
			@AutoGenerated
			private Button button«ass.name.toFirstUpper»;
			@AutoGenerated
			private TextField textField«ass.name.toFirstUpper»1;
			
			public TextField getTextField«ass.name.toFirstUpper»1() {
				return textField«ass.name.toFirstUpper»1;
			}
			
			@AutoGenerated
			private TextField textField«ass.name.toFirstUpper»2;
			
			public TextField getTextField«ass.name.toFirstUpper»2() {
				return textField«ass.name.toFirstUpper»2;
			}
			«ENDIF»
			«ENDFOR»
			
			@AutoGenerated
			private Button buttonDetailForm;
		
			@AutoGenerated
			private Button buttonRemoveDetail;
		
			@AutoGenerated
			private TabSheet tabSheet_1;
			
			public TabSheet getTabSheet_1() {
				return tabSheet_1;
			}
		
			@AutoGenerated
			private Label label_1;
			
			«FOR c : be.contracts»
			«IF (c instanceof Create || c instanceof Update || c instanceof Delete)»
			@AutoGenerated
			private Button button«c.name.toFirstUpper»;
			«ENDIF»
			«ENDFOR»
		
			«FOR a : be.attributes»
			@AutoGenerated
			«IF DomainCodeUtilities.getType(a).equals("Date")»
			private PopupDateField txtD«a.name.toFirstUpper»;
			
			public PopupDateField getTxtD«a.name.toFirstUpper» () {
				return txtD«a.name.toFirstUpper»;
			}
			«ELSE»
			private TextField txt«a.name.toFirstUpper»;
			
			public TextField getTxt«a.name.toFirstUpper»() {
				return txt«a.name.toFirstUpper»;
			}
			«ENDIF»
			«ENDFOR»
		
			@AutoGenerated
			private Table table_1;
			
			public Table getTable_1() {
				return table_1;
			}
			
			«var n = 2»
			«FOR ass : be.associations»
			«IF ass instanceof Multiple»
			@AutoGenerated
			private Table table_«n»;
			
			public Table getTable_«n»() {
				return table_«n++»;
			}
			«ENDIF»
			«ENDFOR»
			
			public static final String ID = "«be.name.toFirstUpper»Form";
			
			public «be.name.toFirstUpper»Form() {
				buildMainLayout();
				setCompositionRoot(mainLayout);
				«FOR a : be.attributes»
				table_1.addContainerProperty("«a.name.toFirstUpper»", «DomainCodeUtilities.getWrapperType(a)».class, null);
				«ENDFOR»
				table_1.setSelectable(true);
				table_1.setMultiSelect(false);
				table_1.setImmediate(true);
				
				table_1.addItemClickListener(new ItemClickListener() {

				@Override
				public void itemClick(ItemClickEvent event) {
					«be.name.toFirstUpper»Controller.getInstance().listAllDetailsFrom«be.name.toFirstUpper»(
							event);
					}
				});
				«var t = 2»
				«FOR ass : be.associations»
				«IF ass instanceof Multiple»
				«var asso = ass as Multiple»
				«FOR a : asso.entity.attributes»
				table_«t».addContainerProperty("«a.name.toFirstUpper»", «DomainCodeUtilities.getWrapperType(a)».class, null);
				«ENDFOR»
				table_«t».setSelectable(true);
				table_«t».setMultiSelect(false);
				table_«t».setImmediate(true);
				
				tabSheet_1.addTab(table_«t++», "«asso.entity.name.toFirstUpper»s", null);
				«ENDIF»
				«ENDFOR»
				
				«FOR c : be.contracts»
				«IF (c instanceof Create || c instanceof Update || c instanceof Delete)»
				button«c.name.toFirstUpper».addClickListener(new ClickListener() {

					@Override
					public void buttonClick(ClickEvent event) {
						«IF c instanceof Create»
						«be.name.toFirstUpper»Controller.getInstance().create«be.name.toFirstUpper»();
						«ENDIF»
						«IF c instanceof Update»
						«be.name.toFirstUpper»Controller.getInstance().update«be.name.toFirstUpper»();
						«ENDIF»
						«IF c instanceof Delete»
						«be.name.toFirstUpper»Controller.getInstance().delete«be.name.toFirstUpper»();
						«ENDIF»
					}
				});
				«ENDIF»
				«ENDFOR»
				
				«FOR ass : be.associations»
				«IF ass instanceof Simple»
				textField«ass.name.toFirstUpper»1.setEnabled(false);
				textField«ass.name.toFirstUpper»2.setEnabled(false);
				
				button«ass.name.toFirstUpper».addClickListener(new ClickListener() {

					@Override
					public void buttonClick(ClickEvent event) {
						«be.name.toFirstUpper»Controller.getInstance().popUp«ass.name.toFirstUpper»Form();
					}
				});
				«ENDIF»
				«ENDFOR»
				
				buttonDetailForm.addClickListener(new ClickListener() {

					@Override
					public void buttonClick(ClickEvent event) {
						«be.name.toFirstUpper»Controller.getInstance().popUpAddDetailForm();
					}
				});
		
				buttonRemoveDetail.addClickListener(new ClickListener() {
		
					@Override
					public void buttonClick(ClickEvent event) {
						«be.name.toFirstUpper»Controller.getInstance().removeDetailRecord();
					}
				});
			}
			
			public void clearFormFields() {
				«FOR a : be.attributes»
				«IF DomainCodeUtilities.getType(a).equals("Date")»
				txtD«a.name.toFirstUpper».setValue(null);
				«ELSE»
				txt«a.name.toFirstUpper».setValue("");
				«ENDIF»
				«ENDFOR»
			}
			
			«FOR ass : be.associations»
			«IF ass instanceof Simple»
			public void clear«ass.name.toFirstUpper»Fields() {
				textField«ass.name.toFirstUpper»1.setValue("");
				textField«ass.name.toFirstUpper»2.setValue("");
			}
			
			«var relBe = ass.relatedEntity»
			public void update«ass.name.toFirstUpper»Fields(«relBe.name.toFirstUpper»TO «ass.name.toLowerCase») {
				textField«ass.name.toFirstUpper»1.setValue(""+«ass.name.toLowerCase».get«DomainCodeUtilities.getID(relBe).name.toFirstUpper»());
				textField«ass.name.toFirstUpper»2.setValue(""+«ass.name.toLowerCase».get«DomainCodeUtilities.getSecondAttribute(relBe).name.toFirstUpper»());
			}
			«ENDIF»
			«ENDFOR»
			«var height = 70»
			«FOR a : be.attributes»
			«var cc = (height += 40)»
			«ENDFOR»
			@AutoGenerated
			private AbsoluteLayout buildAbsoluteLayout_1() {
				// common part: create layout
				absoluteLayout_1 = new AbsoluteLayout();
				absoluteLayout_1.setCaption("«be.name.toFirstUpper»");
				absoluteLayout_1.setImmediate(false);
				absoluteLayout_1.setWidth("340px");
				absoluteLayout_1.setHeight("«height»px");
				
				«var pos = 0»
				«FOR a : be.attributes»
				«IF DomainCodeUtilities.getType(a).equals("Date")»
				// txtD«a.name.toFirstUpper»
				txtD«a.name.toFirstUpper» = new PopupDateField();
				txtD«a.name.toFirstUpper».setCaption("«a.name.toFirstUpper»");
				txtD«a.name.toFirstUpper».setImmediate(false);
				txtD«a.name.toFirstUpper».setWidth("-1px");
				txtD«a.name.toFirstUpper».setHeight("-1px");
				txtD«a.name.toFirstUpper».setRequired(true);
				absoluteLayout_1.addComponent(txtD«a.name.toFirstUpper»,
						"top:«pos+=40»px;left:0.0px;");
				«ELSE»
				// txt«a.name.toFirstUpper»
				txt«a.name.toFirstUpper» = new TextField();
				txt«a.name.toFirstUpper».setCaption("«a.name.toFirstUpper»");
				txt«a.name.toFirstUpper».setImmediate(false);
				txt«a.name.toFirstUpper».setWidth("175px");
				txt«a.name.toFirstUpper».setHeight("-1px");
				txt«a.name.toFirstUpper».setRequired(true);
				absoluteLayout_1.addComponent(txt«a.name.toFirstUpper»,
						"top:«pos+=40»px;left:0.0px;");
				«ENDIF»
				«ENDFOR»
				
				«var posB = pos+40»
				«var posL = -72»
				«FOR c : be.contracts»
				«IF (c instanceof Create || c instanceof Update || c instanceof Delete)»
				button«c.name.toFirstUpper» = new Button();
				«IF c instanceof Create»
				button«c.name.toFirstUpper».setCaption("Add");
				«ENDIF»
				«IF c instanceof Update»
				button«c.name.toFirstUpper».setCaption("Update");
				«ENDIF»
				«IF c instanceof Delete»
				button«c.name.toFirstUpper».setCaption("Delete");
				«ENDIF»
				button«c.name.toFirstUpper».setImmediate(true);
				button«c.name.toFirstUpper».setWidth("65px");
				button«c.name.toFirstUpper».setHeight("-1px");
				absoluteLayout_1.addComponent(button«c.name.toFirstUpper», "top:«posB»px;left:«posL+=72»px;");
				«ENDIF»
				«ENDFOR»
				
				return absoluteLayout_1;
			}
			
			@AutoGenerated
			private AbsoluteLayout buildMainLayout() {
				// common part: create layout
				mainLayout = new AbsoluteLayout();
				mainLayout.setImmediate(false);
				mainLayout.setWidth("1024px");
				mainLayout.setHeight("500px");
				
				// top-level component properties
				setWidth("1024px");
				setHeight("500px");
				
				// table_1
				table_1 = new Table();
				table_1.setImmediate(false);
				table_1.setWidth("150px");
				table_1.setHeight("100.0%");
				mainLayout.addComponent(table_1,
						"top:18.0px;bottom:-18.0px;left:0.0px;");
						
				// absoluteLayout_1
				absoluteLayout_1 = buildAbsoluteLayout_1();
				mainLayout.addComponent(absoluteLayout_1, "top:17.0px;left:170.0px;");
				
				// label_1
				label_1 = new Label();
				label_1.setImmediate(false);
				label_1.setWidth("-1px");
				label_1.setHeight("18px");
				label_1.setValue("«be.name.toFirstUpper»");
				mainLayout.addComponent(label_1, "top:0.0px;left:36.0px;");
				
				// absoluteLayout_2
				absoluteLayout_2 = buildAbsoluteLayout_2();
				mainLayout.addComponent(absoluteLayout_2, "top:«posB+55»px;left:170.0px;");
		
				«var aL2 = 3»
				«var left = 525»
				«FOR ass : be.associations»
				«IF ass instanceof Simple»
				// absoluteLayout_«aL2»
				absoluteLayout_«aL2» = buildAbsoluteLayout_«aL2»();
				mainLayout.addComponent(absoluteLayout_«aL2++», "top:17.0px;left:«left+=160»px;");
				«ENDIF»
				«ENDFOR»
		
				return mainLayout;
			}
			
			@AutoGenerated
			private AbsoluteLayout buildAbsoluteLayout_2() {
				// common part: create layout
				absoluteLayout_2 = new AbsoluteLayout();
				absoluteLayout_2.setCaption("Details");
				absoluteLayout_2.setImmediate(false);
				absoluteLayout_2.setWidth("505px");
				absoluteLayout_2.setHeight("200px");
				
				// tabSheet_1
				tabSheet_1 = buildTabSheet_1();
				absoluteLayout_2.addComponent(tabSheet_1, "top:2.0px;left:0.0px;");
				
				// buttonDetailForm
				buttonDetailForm = new Button();
				buttonDetailForm.setCaption("Add");
				buttonDetailForm.setImmediate(true);
				buttonDetailForm.setWidth("73px");
				buttonDetailForm.setHeight("-1px");
				absoluteLayout_2.addComponent(buttonDetailForm, "top:36.0px;left:419.0px;");
		
				// buttonRemoveDetail
				buttonRemoveDetail = new Button();
				buttonRemoveDetail.setCaption("Remove");
				buttonRemoveDetail.setImmediate(true);
				buttonRemoveDetail.setWidth("-1px");
				buttonRemoveDetail.setHeight("-1px");
				absoluteLayout_2.addComponent(buttonRemoveDetail, "top:65.0px;left:419.0px;");
		
				return absoluteLayout_2;
			}
			
			@AutoGenerated
			private TabSheet buildTabSheet_1() {
				// common part: create layout
				tabSheet_1 = new TabSheet();
				tabSheet_1.setImmediate(true);
				tabSheet_1.setWidth("409px");
				tabSheet_1.setHeight("198px");
				
				«var tt = 2»
				«FOR ass : be.associations»
				«IF ass instanceof Multiple»
				// table_«tt»
				table_«tt» = new Table();
				table_«tt».setImmediate(false);
				table_«tt».setWidth("409px");
				table_«tt++».setHeight("-1px");
				«ENDIF»
				«ENDFOR»
		
				return tabSheet_1;
			}
			
			«var aL1 = 3»
			«FOR ass : be.associations»
			«IF ass instanceof Simple»
			«var relBe = ass.relatedEntity»
			@AutoGenerated
			private AbsoluteLayout buildAbsoluteLayout_«aL1»() {
				// common part: create layout
				absoluteLayout_«aL1» = new AbsoluteLayout();
				absoluteLayout_«aL1».setCaption("«ass.name.toFirstUpper»");
				absoluteLayout_«aL1».setImmediate(false);
				absoluteLayout_«aL1».setWidth("150px");
				absoluteLayout_«aL1».setHeight("150px");
		
				// textField«ass.name.toFirstUpper»1
				textField«ass.name.toFirstUpper»1 = new TextField();
				textField«ass.name.toFirstUpper»1.setCaption("«ass.name.toFirstUpper» «DomainCodeUtilities.getID(relBe).name.toFirstUpper»");
				textField«ass.name.toFirstUpper»1.setImmediate(false);
				textField«ass.name.toFirstUpper»1.setWidth("-1px");
				textField«ass.name.toFirstUpper»1.setHeight("-1px");
				absoluteLayout_«aL1».addComponent(textField«ass.name.toFirstUpper»1, "top:22.0px;left:7.0px;");
		
				// textField«ass.name.toFirstUpper»2
				textField«ass.name.toFirstUpper»2 = new TextField();
				textField«ass.name.toFirstUpper»2.setCaption("«ass.name.toFirstUpper» «DomainCodeUtilities.getSecondAttribute(relBe).name.toFirstUpper»");
				textField«ass.name.toFirstUpper»2.setImmediate(false);
				textField«ass.name.toFirstUpper»2.setWidth("-1px");
				textField«ass.name.toFirstUpper»2.setHeight("-1px");
				absoluteLayout_«aL1».addComponent(textField«ass.name.toFirstUpper»2, "top:61.0px;left:7.0px;");
		
				// button«ass.name.toFirstUpper»
				button«ass.name.toFirstUpper» = new Button();
				button«ass.name.toFirstUpper».setCaption("Set «ass.name.toFirstUpper»");
				button«ass.name.toFirstUpper».setImmediate(true);
				button«ass.name.toFirstUpper».setWidth("-1px");
				button«ass.name.toFirstUpper».setHeight("-1px");
				absoluteLayout_«aL1».addComponent(button«ass.name.toFirstUpper», "top:93.0px;left:24.0px;");
		
				return absoluteLayout_«aL1++»;
			}
			«ENDIF»
			«ENDFOR»
		}
	'''
}